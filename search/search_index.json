{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Developer Portal Home","text":"<p>The Omnissa Developer Portal is a collection of resources and samples that developers, customers and partners can use to integrate and extend their Omnissa products.</p> <p>Developer <code>{code}</code> Portal is a free developer program that provides access to a growing community of developers and experts.  </p>"},{"location":"#featured-resources-for-developers","title":"Featured Resources for Developers","text":"<p>APIs</p><p>Build on Omnissa products, manage &amp; automate using APIs</p> <p>Developer Centre</p><p>Learn, Code and Connect using the Developer Centre as a Base</p> <p>PowerCLI</p><p>Use PowerShell to manage &amp; automate Horizon</p> <p>Code Samples</p><p>Find and share code samples for Workspace ONE and Horizon management, including SDKs, tools and utilities, applications, scripts and sensors</p> <p>SDKs</p><p>Link to the freely available SDKs available for Omnissa products</p>"},{"location":"about/","title":"About","text":"<p>Omnissa Developer <code>{code}</code> Portal is a free developer program that provides access to a growing community of developers and experts.</p> <p>Follow @omnissacode on Twitter to keep up with Omnissa developer topics.</p>"},{"location":"apis/","title":"APIs","text":"<p>Manage the Omnissa portfolio of products and automate configuration using APIs.</p> <p>Horizon APIs</p><p>manage &amp; automate Horizon using APIs</p> <p>App Volumes APIs</p><p>manage and configure App Volumes via REST API</p> <p>Workspace ONE Intelligence APIs</p><p>query and extract data for use in other business intelligence tools</p> <p>Workspace ONE UEM APIs</p><p>manage and configure Access via REST API</p> <p>Workspace ONE Access APIs</p><p>manage and configure Access via REST API</p>"},{"location":"app-volumes-apis/","title":"App Volumes API","text":"<p>The App Volumes API documentation describes how to utilise the App Volumes REST API to query and configure App Volumes.</p> <p>The latest version published is 2312.</p>"},{"location":"app-volumes-apis/#documentation-and-reference","title":"Documentation and Reference","text":"<p>VMware App Volumes API Programming Guide</p> <p></p>"},{"location":"app-volumes-apis/versions/2.17.0/","title":"App Volumes API 2.17.0","text":"<p>The App Volumes API documentation describes how to utilise the App Volumes REST API version 2.17.0 to query and configure App Volumes.</p>"},{"location":"app-volumes-apis/versions/2.17.0/#documentation-and-reference","title":"Documentation and Reference","text":"<p>Using App Volumes REST APIs</p>"},{"location":"app-volumes-apis/versions/2.17.0/#api-reference","title":"API Reference","text":""},{"location":"app-volumes-apis/versions/2203/","title":"App Volumes API 2203","text":"<p>The App Volumes API documentation describes how to utilise the App Volumes REST API version 2203 to query and configure App Volumes.</p>"},{"location":"app-volumes-apis/versions/2203/#documentation-and-reference","title":"Documentation and Reference","text":"<p>Using App Volumes API Programming Guide</p>"},{"location":"app-volumes-apis/versions/2203/#api-reference","title":"API Reference","text":""},{"location":"app-volumes-apis/versions/2206/","title":"App Volumes API 2206","text":"<p>The App Volumes API documentation describes how to utilise the App Volumes REST API version 2206 to query and configure App Volumes.</p>"},{"location":"app-volumes-apis/versions/2206/#documentation-and-reference","title":"Documentation and Reference","text":"<p>VMware App Volumes API Programming Guide</p>"},{"location":"app-volumes-apis/versions/2206/#api-reference","title":"API Reference","text":""},{"location":"app-volumes-apis/versions/2209/","title":"App Volumes API 2209","text":"<p>The App Volumes API documentation describes how to utilise the App Volumes REST API version 2209 to query and configure App Volumes.</p>"},{"location":"app-volumes-apis/versions/2209/#documentation-and-reference","title":"Documentation and Reference","text":"<p>VMware App Volumes API Programming Guide</p>"},{"location":"app-volumes-apis/versions/2209/#api-reference","title":"API Reference","text":""},{"location":"app-volumes-apis/versions/2212/","title":"App Volumes API 2212","text":"<p>The App Volumes API documentation describes how to utilise the App Volumes REST API version 2212 to query and configure App Volumes.</p>"},{"location":"app-volumes-apis/versions/2212/#documentation-and-reference","title":"Documentation and Reference","text":"<p>VMware App Volumes API Programming Guide</p>"},{"location":"app-volumes-apis/versions/2212/#api-reference","title":"API Reference","text":""},{"location":"app-volumes-apis/versions/2303/","title":"App Volumes API 2303","text":"<p>The App Volumes API documentation describes how to utilise the App Volumes REST API version 2303 to query and configure App Volumes.</p>"},{"location":"app-volumes-apis/versions/2303/#documentation-and-reference","title":"Documentation and Reference","text":"<p>VMware App Volumes API Programming Guide</p>"},{"location":"app-volumes-apis/versions/2303/#api-reference","title":"API Reference","text":""},{"location":"app-volumes-apis/versions/2306/","title":"App Volumes API 2306","text":"<p>The App Volumes API documentation describes how to utilise the App Volumes REST API version 2306 to query and configure App Volumes.</p>"},{"location":"app-volumes-apis/versions/2306/#documentation-and-reference","title":"Documentation and Reference","text":"<p>VMware App Volumes API Programming Guide</p>"},{"location":"app-volumes-apis/versions/2306/#api-reference","title":"API Reference","text":""},{"location":"app-volumes-apis/versions/2309/","title":"App Volumes API 2309","text":"<p>The App Volumes API documentation describes how to utilise the App Volumes REST API version 2309 to query and configure App Volumes.</p>"},{"location":"app-volumes-apis/versions/2309/#documentation-and-reference","title":"Documentation and Reference","text":"<p>VMware App Volumes API Programming Guide</p> <p></p>"},{"location":"app-volumes-apis/versions/2312/","title":"App Volumes API 2312","text":"<p>The App Volumes API documentation describes how to utilise the App Volumes REST API version 2312 to query and configure App Volumes.</p>"},{"location":"app-volumes-apis/versions/2312/#documentation-and-reference","title":"Documentation and Reference","text":"<p>VMware App Volumes API Programming Guide</p> <p></p>"},{"location":"dev-centre/","title":"Developer Centre","text":"<p>Find Developer and DevOps Resources for omnissa Technology Platforms. APIs, SDKs, docs, code samples, tools, workshops, and other resources to help developers and DevOps teams design, develop, and certify solutions for omnissa products and platforms.</p> <p>Workspace ONE</p><p>Securely Integrate Your Mobile Apps with VMware Workspace ONE</p> <p>Workspace ONE Intelligence</p><p>Capture real-time event data from key user flows in your app</p>"},{"location":"dev-centre/#product-documentation","title":"Product Documentation","text":"<p>Links to Official Product Documentation Getting Started Guides are below. The main documentation site can be found at https://docs.omnissa.com/.</p> <p>Workspace ONE</p><p>Multi-platform endpoint and app management</p> <p>Workspace ONE Access</p><p>centralized management console with which you can manage users and groups, set up and manage authentication and access policies, and add resources to the catalog and manage entitlements to those resources.</p> <p>Workspace ONE Intelligence</p><p>Capture real-time event data from key user flows in your app</p> <p>Workspace ONE Hub Services</p><p>Securely discover, access, and connect to your company\u2019s resources, teams, and workflows</p> <p>Workspace ONE Assist</p><p>Remote support for digital employees</p> <p>Workspace ONE Tunnel</p><p>Securely provide either Per-App or Full Device VPN capabilities across all your employees\u2019 devices and delivered with a modern Zero Trust architecture</p> <p>Unified Access Gateway</p><p>Secure external access to your applications and desktops.</p> <p>Horizon 8</p><p>Secure virtual desktop (VDI) and app platform delivery</p> <p>App Volumes</p><p>Real-time application delivery system that enterprises can use to dynamically deliver and manage applications.</p> <p>Dynamic Environment Manager</p><p>Windows profile management through dynamic policy configuration</p>"},{"location":"dev-centre/ws1/","title":"Workspace ONE Developer Centre","text":""},{"location":"dev-centre/ws1/#securely-integrate-your-mobile-apps-with-vmware-workspace-one","title":"Securely Integrate Your Mobile Apps with VMware Workspace ONE","text":"<ul> <li> <p> LEARN </p> <p><p> Learn what you can do with the core capabilities provided by the Workspace ONE platform. </p></p> <p><p> Learn About Core Capabilities</p></p> </li> <li> <p> CODE </p> <p><p> Get APIs, SDKs, docs, code samples, and other developer resources for Workspace ONE. </p></p> <p><p> Browse Developer Resources </p></p> </li> <li> <p> CONNECT </p> <p><p> Connect with VMware experts the Workspace ONE developer community. </p></p> <p><p> Community Resources </p></p> </li> </ul>"},{"location":"dev-centre/ws1/#core-capabilities","title":"Core Capabilities","text":"<p>App Passcode</p><p>For security reasons, enterprises may want to prevent continuous access to an app without periodic authentication. An app passcode can ensure the app is only accessible to the entitled user and that the user identity is maintained over...</p> <p>App Tunneling</p><p>An application may require access to web services residing behind a corporate firewall. A traditional full device VPN solution is not adequate due to manual steps required to enable the VPN on the device, and the security exposure by...</p> <p>Prevent Copy and Paste</p><p>For apps used in more regulated industries, it may be important for IT to prevent applications from openly sharing data with each other. Copy / Paste restrictions can prevent data in a corporate app from being easily transferred to...</p> <p>Single Sign On Certificate Authentication</p><p>For security reasons, enterprises may require authentication for their API endpoints and websites, SSO via Certificates allows a developer to leverage enrollment credentials to handle the authentication without prompting the end user of the...</p> <p>Browse all Core Capabilities</p>"},{"location":"dev-centre/ws1/#technical-capabilities","title":"Technical Capabilities","text":""},{"location":"dev-centre/ws1/#find-the-right-technical-approach-for-integrating-your-app-with-workspace-one","title":"Find the Right Technical Approach for Integrating Your App With Workspace ONE","text":"<p>There are multiple technical approaches you can use to securely integrate apps with Workspace ONE. Most commonly, developers use a combination of technical approaches to meet the desired outcome based on whether they are creating Android, iOS, or web-native apps.</p> Identity ManagerApp WrappingAppConfig.orgAirWatch SDK <p>The Identity Manager component of Workspace ONE acts as a user store, a user catalog and Single Sign On (SSO) hub for your organization. Identity Manager\u2019s APIs shorten app development time by providing consumable authentication and SSO capabilities. The REST APIs also allow your app to manage various objects within your organization: applications, entitlements, users and groups.  Development Effort Supported App Types Medium Primary Use Case:\u2002 Giving end users easy authentication into your application Deployment: </p> <p>App Wrapping identifies specific app functions and replaces them with calls to the AirWatch SDK. This allows for a subset of AirWatch SDK capabilities to be added to an app without requiring any developer involvement. App Wrapping is only compatible with internal apps using approved development platforms, coding practices and libraries.  Development Effort Supported App Types Medium Primary Use Case: \u2002 Provides a subset of SDK functionality. Only recommended for tactical deployments Deployment: Note: Not compatible with Android for Work enrolled devices. </p> <p>The AppConfig Community is a collection of industry-leading EMM solution providers and app developers that are making it simpler for developers to use native platform APIs to configure and secure apps in the enterprise.  Development Effort Supported App Types Low Primary Use Case:  \u2002 An open and native approach ideal for most common use cases&gt; Deployment: Note: Android for Work enrolled devices only. </p> <p>The SDK code library from AirWatch can be used to enable additional app config and security capabilities that may not yet be available natively as part of the AppConfig Community. Certain use cases such as granular analytics can be provided through a deeper integration with the SDK.   Development Effort Supported App Types Medium Primary Use Case: \u2002 Code library for use cases requiring deeper integration Deployment: </p>"},{"location":"dev-centre/ws1/#developer-resources","title":"Developer Resources","text":"<p>Workspace ONE Access APIs</p> <p>Workspace ONE UEM SDK for Android</p> <p>Workspace ONE UEM SDK for iOS</p> <p>Android Tutorials</p> <p>Xamarin (Android) Tutorials</p> <p>iOS Tutorials</p> <p>Xamarin (iOS) Tutorials</p> <p>Many Code Samples are available within the https://github.com/euc-oss/euc-samples GitHub repository. An Index of all samples is provided under Code Samples menu above.</p>"},{"location":"dev-centre/ws1/#community-resources","title":"Community Resources","text":"<p>The AppConfig Community is an open and native approach, ideal for most common use cases. Visit AppConfig.org </p> <p>Omnissa Customer Community Forum, is an online experience for Omnissa customers that is the go-to for learning, connecting, and receiving real-time enablement support from our team. Visit the Workspace ONE Forum to get started.</p>"},{"location":"dev-centre/ws1/core-capabilities/","title":"Workspace ONE UEM Core Capabilities","text":""},{"location":"dev-centre/ws1/core-capabilities/#app-configuration","title":"App Configuration","text":"<p>An app may require seed information for initial configuration or updated configurations throughout the course of its lifecycle.</p> <p>For example, the backend server URL of an application can be seeded to the application during install so the app can auto-configure with minimal user input. With the Workspace ONE platform, you can create seamless setup flows by provisioning app config values such as server, port and domain, down to your app. Improve user experience by eliminating first time setup steps and dynamically change settings in your app with over the air updates.</p> Technical Approaches Implementation Summary Supported Platforms AppConfig.org The recommended approach for implementing app configuration is through the use of the AppConfig Community best practices of Managed Configurations for iOS and App Restrictions for Android. Detailed technical documentation is available at AppConfig.org.- Use the AppConfig Community practice of using iOS managed configs or Android app restrictions to deliver custom configuration values to your app.- AirWatch will use the platform MDM protocol to deliver these configuration values to NSUserDefault or RestrictionsManager upon installation of your app.- Requires enrollment in MDM.- Requires iOS 7+ or Android 5.0+ with Android for Work Device. Airwatch SDK An alternative approach to app config is through the integration of the AirWatch SDK to receive custom configurations from your AirWatch server.- Integrate the AirWatch SDK into your app and configure an SDK profile with a custom payload containing your configuration values and assign it to your app.- Initialize the SDK and use the appropriate method calls to retrieve the custom settings containing your configuration values.- Requires coding and device entry in AirWatch system, no MDM required."},{"location":"dev-centre/ws1/core-capabilities/#app-passcode","title":"App Passcode","text":"<p>For security reasons, enterprises may want to prevent continuous access to an app without periodic authentication.</p> <p>An app passcode can ensure the app is only accessible to the entitled user and that the user identity is maintained over time. A biometric, such as TouchID, can typically be implemented as a layer above the PIN code to optimize the user experience.</p> Technical Approaches Implementation Summary Supported Platforms Airwatch SDK - Integrate the AirWatch SDK for iOS and Android into your application.- Configure the SDK profile policy for your application to enforce a passcode.- The SDK will automatically display the \u201cView Controllers &amp; Activities\u201d to secure your app with a passcode.- Requires coding and device entry in AirWatch system, no MDM required. AppConfig.org - Reference the sample code and documentation available at AppConfig.org- Use the sample code as a starting point for the PIN code UI, and customize as needed- Implement an app configuration in order to have the MDM server set the PIN code policy- Requires device enrollment on iOS, and Android for Work on Android App Wrapping - Develop and compile your application.- Verify that the app is only using an approved MADP platform and coding techniques- Run the compiled binary through the AirWatch application wrapping cloud engine.- Assign a wrapping profile to your application with a passcode policy.- Requires neither coding nor MDM, only device entry in AirWatch system."},{"location":"dev-centre/ws1/core-capabilities/#app-tunneling","title":"App Tunneling","text":"<p>An application may require access to web services residing behind a corporate firewall.</p> <p>A traditional full device VPN solution is not adequate due to manual steps required to enable the VPN on the device, and the security exposure by allowing personal apps the same access to the VPN as corporate apps. A more secure, seamless, targeted solution is required to allow only certain applications restricted access to certain intranet endpoints.</p> Technical Approaches Implementation Summary Supported Platforms AppConfig.org - Use the AppConfig practice of configuring a Per-App VPN profile through your MDM console for your application.- All network traffic specific to the whitelisted applications defined in the profile will be redirected through the Tunnel proxy.- Requires iOS 7+ / Android 5.0+. (Android 4.x on roadmap)- Requires AirWatch Tunnel app to be present on device and the AirWatch Tunnel Server- Requires enrollment into MDM.- Requires no coding. Airwatch SDK - Integrate the AirWatch SDK into your application and configure a SDK profile with Tunneling enabled and assign it to your application.- Ensure the networking classes and methods used by your applications are supported in the AirWatch SDK guide.- The SDK will redirect your app network traffic through a supported proxy to reach your targeted backend.- Requires coding and device entry in AirWatch system, no MDM required. App Wrapping - Develop and compile your application.- Verify that the app is only using an approved MADP platform and coding techniques- Run the compiled binary through the AirWatch application wrapping engine.- Assign a wrapping profile to your application with a Tunnel policy."},{"location":"dev-centre/ws1/core-capabilities/#encryption","title":"Encryption","text":"<p>For apps with sensitive data or files, you may want to encrypt the persisted contents of the app in case the file system is compromised.</p> <p>Extraction of the persistent storage will only expose encryption ciphertext as opposed to the readable data.</p> Technical Approaches Implementation Summary Supported Platforms AppConfig.org The recommended approach is to use the AppConfig Community best practices for enforcing device passcodes on iOS devices to ensure DAR encryption.On Android,apply an MDM policy to enforce encryption.- For iOS, ensure a device passcode is set on the device through a MDM passcode policy. By setting a device-level passcode, the OS will encrypt all data on the device using the device PIN entry.- For Android, configure an MDM policy to enforce device encryption.- Requires no coding Airwatch SDK One alternative approach for Android is to use the AirWatch SDK\u2019s encryption read / write methods to encrypt your app data- The SDK provides data IO methods that can take in a data argument and return an encrypted cipher text and vice versa.- Requires coding and device entry in AirWatch system, no MDM required. App Wrapping Another alternative approach for Android devices is to leverage AirWatch App Wrapping.- Enable the encryption capability and wrap the app.- Verify that the app is only using an approved MADP platform and coding techniques."},{"location":"dev-centre/ws1/core-capabilities/#managed-open-in","title":"Managed Open In","text":"<p>For apps that are used in heavily regulated industries, it may be important for IT to prevent applications from openly sharing data with each other. Apps containing sensitive files can be controlled to only share files across managed corporate applications to prevent private information from leaking into unmanaged apps.</p> Technical Approaches Implementation Summary Supported Platforms AppConfig.org The recommended approach is to use the AppConfig.org community best practices to configure restrictions profiles for the device to protect sharing of files with unmanaged apps.- Configure an iOS MDM or Android for Work restriction profile to restrict open-in to only occur within managed applications.- Requires enrollment in MDM.- Requires no coding.- Requires iOS 7+ of Android 5.0+ with Android for Word device. Airwatch SDK One alternative approach is to use the AirWatch SDK to prevent files from being shared with unmanaged apps.- Integrate the AirWatch SDK into your application and configure the SDK profile with a copy/paste DLP restriction and assign it to your application.- Write your open-in logic to read the SDK profile settins first to ensure the sharing is permitted before executing the open-in.- Requires coding.- Supports non-MDM enrollment modes."},{"location":"dev-centre/ws1/core-capabilities/#prevent-app-backup","title":"Prevent App Backup","text":"<p>Device users may want to backup their device data to later restore the data on a different or new device for various reasons.</p> <p>IT may need to protect the data in the corporate set of apps from being backed up so company data cannot be transferred to a new unmanaged device or backup service.</p> Technical Approaches Implementation Summary Supported Platforms AppConfig.org - Configure an iOS MDM Restriction Profile or Android for Work restriction profile to disable backup.- Requires enrollment into MDM.- Requires no coding.- Requires iOS 5+ or Android SAFE 2.0+ or Android LG 2.2"},{"location":"dev-centre/ws1/core-capabilities/#prevent-copy-and-paste","title":"Prevent Copy and Paste","text":"<p>For apps used in more regulated industries, it may be important for IT to prevent applications from openly sharing data with each other.</p> <p>Copy / Paste restrictions can prevent data in a corporate app from being easily transferred to unmanaged or personal applications to protect against data leakage.</p> Technical Approaches Implementation Summary Supported Platforms AppConfig.org For Android apps, the recommended approach is to follow AppConfig.org community best practices and utilize an Android for Work restriction profile in order to restrict copy / paste only to managed apps.- Configure an Android for Work restriction profile to restrict copy and paste to only occur within managed applications.- Requires enrollment into MDM.- Requires no coding.- Requires Android 5.0+ with Android for Work device.- On iOS, the AppConfig Community documents sample code that can be used to enable this capability in the app. Airwatch SDK The recommended approach for iOS apps is to integrate the AirWatch SDK.- Integrate the AirWatch SDK into your application and configure a SDK profile with a copy / paste DLP restriction and assign it to your application.- Ensure any custom application copy / paste logic is done through native interfaces (UIPasteboard).- Requires coding and device entry in AirWatch system, no MDM require. App Wrapping An alternative approach for both Android and iOS is to use App Wrapping.- Requires neither coding nor MDM, only device entry in AirWatch system.- Develop and compile your application, then verify that the app is only using an approved MADP platform and coding techniques.- Run the compiled binary through the AirWatch App Wrapping engine.- Assign a wrapping profile to your application with a copy / paste DLP restriction."},{"location":"dev-centre/ws1/core-capabilities/#prevent-screenshot","title":"Prevent Screenshot","text":"<p>For app usage in highly regulated industries, it may be important for IT to prevent applications from openly sharing data with each other. With the Prevent Screenshot capability, apps and devices containing sensitive content can be restricted from taking screenshots in order to discourage easy transfer of app content.</p> Technical Approaches Implementation Summary Supported Platforms Airwatch SDK Alternative approach for Android is to use the AirWatch SDK to prevent files from being shared with unmanaged applications.- Integrate the AirWatch SDK into your application. Extend any UI activity you want to enforce this DLP restriction in with the SDKBaseActivity class.- Configure a SDK profile with a disable screenshot DLP restriction and assign it to your application.- Requires coding and device entry in AirWatch system, no MDM required. AppConfig.org The recommended approach is to use the AppConfig Community practices to configure restrictions profiles for the device to disable screen capture. - Configure an iOS MDM Restriction Profile or Android for Work restriction profile to disable screenshots.- Requires enrollment into MDM.- Requires iOS 9+ for iOS apps.- Requires no coding. App Wrapping Another alternative approach for Android apps is to use Application Wrapping.- Requires neither coding nor MDM, only device entry in AirWatch system.- Develop and compile your application, then verify that the app is only using an approved MADP platform and coding techniques.- Run the compiled binary through the AirWatch App Wrapping engine.- Assign a wrapping profile to your app with a prevent screenshot DLP restriction.- Requires device entry in AirWatch system, no MDM required."},{"location":"dev-centre/ws1/core-capabilities/#single-sign-on-certificate-authentication","title":"Single Sign On Certificate Authentication","text":"<p>For security reasons, enterprises may require authentication for their API endpoints and websites, SSO via Certificates allows a developer to leverage enrollment credentials to handle the authentication without prompting the end user of the app.</p> <p>Integrated Authentication is an SDK feature that allows a developer to achieve Single Sign On for their app's web requests. The user's client certificates are automatically passed to an endpoint that challenges for Certificate authentication. By doing so, it is no longer necessary for the developer to manually handle the authentication for an endpoint or prompt a user for credentials.</p> Technical Approaches Implementation Summary Supported Platforms Airwatch SDK The recommended approach is to use the AirWatch SDK by enabling Integrated Authentication in the SDK Profile.- Integrate the AirWatch SDK into your application and configure an SDK profile with Integrated Authentication configured for certificate authentication.- Use the SDK provided interfaces to handle the networking authentication challenges- Requires some coding. AppConfig.org The alternative approach for Android devices is to use AppConfig.org community best practices.- Configure a credentials payload in an Android for Work profile. This will send the certificate to the device\u2019s managed keystore.- Code your app to read the value stored at the \u201cManagedAppCertAlias\u201d key from RestrictionsManager. This value is your certificate alias.- Query the keychain using the alias you obtained for the ManagedAppCertAlias key from RestrictionsManager as the argument and retrieve the certificate to be used for authentication challenge.- Requires Android 5.0+ and Android for Work device.- Use this certificate to respond to any client certificate authentication challenges. App Wrapping The alternative for iOS devices is to use App Wrapping.- Requires neither coding nor MDM, only device entry in the AirWatch system.- Develop and compile your app.- Verify that the app is only using an approved MADP platform and coding techniques.- Run the compiled binary through the AirWatch App Wrapping engine.- Assign a wrapping profile to your app with Integrated Authentication configured for certificates."},{"location":"dev-centre/ws1/core-capabilities/#single-sign-on-ntlm-basic","title":"Single Sign On NTLM / Basic","text":"<p>For security reasons, enterprises may require authentication for their API endpoints and websites, SSO Basic / NTLM allows a developer to leverage enrollment credentials to handle the authentication without prompting the end user of the app</p> <p>Integrated Authentication is an AirWatch SDK feature that allows a developer to achieve Single Sign On for their app's web requests. The user's credentials are automatically passed to an endpoint that challenges for HTTP Basic or NTLM (NT LAN Manager) authentication. By doing so, it is no longer necessary for the developer to manually handle the authentication for an endpoint or prompt a user for credentials.</p> Technical Approaches Implementation Summary Supported Platforms Airwatch SDK The recommended approach is to use the AirWatch SDK by enabling Integrated Authentication in the SDK Profile.- Integrate the AirWatch SDK into your application and configure a SDK profile with Integrated Authentication configured.- Use the SDK provided interfaces to handle the networking authentication challenges.- Requires coding and device entry in AirWatch system, no MDM required. App Wrapping The alternative approach is to use Application Wrapping.- Develop and compile your application.- Verify that the app is only using an approved MADP platform and coding techniques.- Run the compiled binary through the AirWatch App Wrapping engine.- Assign a wrapping profile to your application Integrated Authentication.- Requires neither coding nor MDM, only device entry in AirWatch system."},{"location":"dev-centre/ws1/core-capabilities/#single-sign-on-openid-connect","title":"Single Sign On OpenID Connect","text":"<p>End users want easy access to their apps and data, and organizations want to avoid the security risks and helpdesk support tickets that come from different passwords and authentication logic for different apps. You can support both groups while decreasing the time it takes to develop apps by relying on Workspace ONE for Single Sign On (SSO). When an end user visits your app, the app can redirect the user to Workspace ONE for authentication.</p> <p>OpenID Connect (OIDC) SSO relies on JSON-based communication between your app and Workspace ONE. It is often the preferred SSO method of mobile developers and is also used in many new web apps. OIDC allows an end user with a browser to log into an Identity Provider (IdP) such as Workspace ONE.</p> Technical Approaches Implementation Summary Supported Platforms Identity Manager Take advantage of one of the many OIDC libraries to make implementation easier. - Register your app as an OIDC client in Workspace ONE using the Identity Manager console. - Use browser redirects to transfer your user to Workspace ONE for authentication. - Requires some coding. - Web app, native app, or other app."},{"location":"dev-centre/ws1/core-capabilities/#single-sign-on-saml","title":"Single Sign On SAML","text":"<p>End users want easy access to their apps and data, and organizations want to avoid the security risks and helpdesk support tickets that come from different passwords and authentication logic for different apps. You can support both groups while decreasing the time it takes to develop apps by relying on Workspace ONE for Single Sign On (SSO). When an end user visits your app, the app can redirect the user to Workspace ONE for authentication.</p> <p>SAML SSO provides a stable, fully-featured protocol for SSO for web apps. SAML allows an end user with a browser to log into an Identity Provider (IdP) such as Workspace ONE.</p> Technical Approaches Implementation Summary Supported Platforms Identity Manager Take advantage of one of the many SAML libraries to make implementation easier. - Create SAML trust between your app and Workspace ONE using the Identity Manager console. - Use browser redirects to transfer your user to Workspace ONE for authentication. - Requires some coding."},{"location":"dev-centre/ws1/core-capabilities/#users-and-groups-management","title":"Users and Groups Management","text":"<p>The Identity Manager component of Workspace ONE acts as a user store for your organization. Identity Manager\u2019s APIs allow your application to create, read, update, and delete users and groups for your organization.</p> Technical Approaches Implementation Summary Supported Platforms Identity Manager Identity Manager provides SCIM APIs to allow your application to create, read, update, and delete users and groups for your organization."},{"location":"dev-centre/ws1-intel/","title":"Workspace ONE Intelligence Dev Centre","text":""},{"location":"dev-centre/ws1-intel/#monitor-prioritize-troubleshoot-and-trend-mobile-app-performance-in-real-time","title":"Monitor, Prioritize, Troubleshoot, and Trend Mobile App Performance in Real Time!","text":"<p>Workspace ONE Intelligence SDK enables developers to capture real-time event data from key user flows in your app: screen load time, network events, crash reports, and more. Track key metrics, improve your app release-over-release, and focus on issues that matter to your users.</p>"},{"location":"dev-centre/ws1-intel/#core-capabilities","title":"Core Capabilities","text":"<p>Crash Reporting</p><p>A crash is a run-time exception that occurs due to some unexpected event that terminates the user session. Crashes are events that are not handled within a try/catch block in the app. The Crash Reporting page of the portal shows the event,...</p> <p>Network Insights</p><p>Whenever an app makes a network call, Workspace ONE Intelligence SDK monitors and captures certain information, such as the service name, device type, device OS and OS version, app version and endpoint URI...</p> <p>Symbolication</p><p>Symbolication is the process of translating stack traces into a human-readable form by mapping hexadecimal addresses to function names using symbol file(s). Workspace ONE Intelligence automatically symbolicates crashes once you have...</p> <p>Usage Tracking</p><p>An app load occurs whenever a user launches the app on their device. When the user begins using an instrumented application, the library automatically records an app load event. Workspace ONE Intelligence then aggregates app loads into rolling...</p> <p>Browse all core capabilities</p>"},{"location":"dev-centre/ws1-intel/#key-use-cases","title":"Key Use Cases","text":"<p>App Usage and Engagement</p> <p>Keep an eye on your app adoption and engagement with the help of metrics such as app loads, Daily Active Users and Monthly Active Users reported by Workspace ONE Intelligence SDK.</p> <p>Application Performance Management</p> <p>Workspace ONE Intelligence empowers you to manage performance and user experience in the face of millions of potential configurations.</p> <p>User Behavior</p> <p>Identify the most important flows in your app and understand your app\u2019s adoption with precise data.</p>"},{"location":"dev-centre/ws1-intel/#developer-resources","title":"Developer Resources","text":"<p>Many Code Samples are available within the https://github.com/euc-oss/euc-samples GitHub repository. An Index of all samples is provided under Code Samples menu above.</p> <p>Additionally, documentation on SDKs are provided at SDKs in the menu bar above.</p>"},{"location":"dev-centre/ws1-intel/#community-resources","title":"Community Resources","text":"<p>Omnissa Customer Community Forum, is an online experience for Omnissa customers that is the go-to for learning, connecting, and receiving real-time enablement support from our team. Visit the Workspace ONE Forum to get started.</p>"},{"location":"dev-centre/ws1-intel/core-capabilities/","title":"Workspace ONE Intelligence Core Capabilities","text":""},{"location":"dev-centre/ws1-intel/core-capabilities/#crash-reporting-overview","title":"Crash Reporting Overview","text":"<p>A crash is a run-time exception that occurs due to some unexpected event that terminates the user session. Crashes are events that are not handled within a try/catch block in the app. The Crash Reporting page of the portal shows the event, alongside additional metrics to help with root cause analysis and debugging. Crashes are grouped together to make it easier to identify the most frequent crashes. Workspace ONE Intelligence provides the information necessary to reproduce the issue in local development / testing. Tracking exceptions allows developers to:</p> <ul> <li>Identify potential hotspots where errors might occur.</li> <li>Analyze exceptions by viewing the stacktrace, diagnostics, metadata, and breadcrumbs related to that issue.</li> <li>Prioritize and resolve bugs to reduce or eliminate errors and crashes.</li> </ul>"},{"location":"dev-centre/ws1-intel/core-capabilities/#network-insights-overview","title":"Network Insights Overview","text":"<p>Whenever an app makes a network call, Workspace ONE Intelligence SDK monitors and captures certain information, such as the service name, device type, device OS and OS version, app version and endpoint URI.</p> <p>For HTTP calls (such as REST apps), Workspace ONE Intelligence SDK monitors and captures the following information:</p> <ul> <li>HTTP URL</li> <li>HTTP status codes and status message to help determine whether a call succeeded or failed</li> <li>Response Time (elapsed time between request and response received)</li> <li>Amount of data received in the response</li> </ul>"},{"location":"dev-centre/ws1-intel/core-capabilities/#symbolication-overview","title":"Symbolication Overview","text":"<p>Symbolication is the process of translating stack traces into a human-readable form by mapping hexadecimal addresses to function names using symbol file(s). Workspace ONE Intelligence automatically symbolicates crashes once you have uploaded your app\u2019s symbol file(s).</p> <ul> <li>For Apple applications, stack traces are reported in hexidecimal characters. Symbolication allows developers to convert these hex strings into human-readable text.</li> <li>For Android applications that use the ProGuard tool to obfuscate their function names, developers can use a Proguard mapping file to replace the obfuscated name with a human-readable name.</li> </ul>"},{"location":"dev-centre/ws1-intel/core-capabilities/#usage-tracking-overview","title":"Usage Tracking Overview","text":"<p>An app load occurs whenever a user launches the app on their device. When the user begins using an instrumented application, the library automatically records an app load event. Workspace ONE Intelligence then aggregates app loads into rolling daily and monthly active user counts (using a Workspace ONE Intelligence-generated unique identifier), and provides insight into the relative usage of the application\u2019s released versions. For example, you can see the number of app loads per version of your app, or the percentage of app loads that resulted in a crash (crash percentage). related resources</p> <p>Download Sample Code</p>"},{"location":"dev-centre/ws1-intel/core-capabilities/#user-name-overview","title":"User Name Overview","text":"<p>Developers can set user names (obfuscated) to:</p> <ul> <li>determine how many app loads, network call failures and crashes a given user has experienced</li> <li>Viewing a list of users who experienced a crash or handled exception which helps with support tickets and escalation management</li> </ul> <p>Apteligent takes user privacy very seriously. If we detect an app sending Device Identifiers or other personally identifying information (PII) that does not help with debugging a crash, we will ask the app developer to remove the gathering of this information through our service.</p>"},{"location":"dev-centre/ws1-intel/core-capabilities/#handled-exceptions-overview","title":"Handled Exceptions Overview","text":"<p>A handled exception is a run-time exception that gets handled within a try / catch block. Handled exceptions are anticipated errors that developers can log with a Apteligent API call. For apps with integrated Apteligent functionality, whenever a handled exception occurs, Apteligent logs it as a handled exception event.</p> <p>Note</p> <p>Handled exception tracking is available only on a paid subscription plan.</p> <p>The Apteligent portal displays handled exception metrics to help developers with root cause analysis and debugging.</p>"},{"location":"dev-centre/ws1-intel/core-capabilities/#breadcrumbs-overview","title":"Breadcrumbs Overview","text":"<p>A breadcrumb is a developer-defined text string that is analogous to a log message. Developers insert breadcrumbs to capture app run-time information, such as variable values, app states, progress through the code, user actions, time performance for user experience, and to flag events within callbacks (such as low memory warnings). Each breadcrumb can contain up to 140 characters.</p> <p>Note</p> <p>Breadcrumb logging is available only on a paid subscription plan.</p> <p>To leave a breadcrumb, developers simply insert an API call (after Apteligent instantiation) at a point of interest in the code. Developers can also attach breadcrumbs to crashes and handled exceptions (both of which always have stacktraces) in order to:</p> <ul> <li>Identify and analyze session events/state/variables to capture for debugging.</li> <li>Use this information, along with stack traces, diagnostics, and metadata, to determine the root cause of the issue.</li> </ul> <p>Developers use breadcrumbs to supplement IDE debugging, allowing them to capture useful information about app behavior once the apps have been distributed to a larger user audience. For each session, Apteligent libraries automatically store a session_start breadcrumb to mark the beginning of a user session, and the most recent 99 breadcrumbs that were left before a crash.</p>"},{"location":"dev-centre/ws1-intel/core-capabilities/#user-flows-monitoring-overview","title":"User Flows Monitoring Overview","text":"<p>User flows allows developers to track key interactions or user flows in their app such as login, account registration, and in app purchase. By default, the SDK will automatically track application load time as a user flow. You can specify additional user flows by adding a few more lines of code to your application.</p> <p>A user flow failure rate can be monitored in the Workspace ONE Intelligence portal. Each failed user flow comes with a slew of diagnostics that allow developers to debug why a particular user flow is failing. </p>"},{"location":"dev-centre/ws1-intel/core-capabilities/#data-reported-with-user-flows","title":"Data Reported with User Flows","text":"<p>The following information is reported with each user flow:</p> <ul> <li>User flow group name (eg. \u201cuser login\u201d)</li> <li>Completion state: success and failure (crashed, timed out or declared failure)</li> <li>Start time</li> <li>Stop time Active time (the time the user flow was running in the foreground)</li> <li>Diagnostics which include app version, operating system, device Model, carrier, and more.</li> </ul>"},{"location":"dev-centre/ws1-intel/core-capabilities/#user-flows-final-states","title":"User Flows Final States","text":"<p>Each user flow may stop in one of a few possible final states:</p> <ul> <li>Success. A success state is reached through the end userflow API. Success can be used to denote that a user flow\u2019s goal was accomplished. Calling the end userflow API is required to finish a user flow in a success state.</li> <li>Failed states:</li> <li>Crashed. A crashed state occurs only if the app crashes while the user flow is in progress. During a crash, Apteligent automatically marks all started user flows as crashed, and reports the user flows to Apteligent. On the Apteligent portal, users may view which crashes impacted a user flow.</li> <li>User-defined failures. A failed state that is reached through the fail user flow API. Failed can be used to denote that a user flow\u2019s goal was not accomplished. Calling the fail user flow API is required to finish a user flow in a failed state. Example: If a user does not allow your photo-sharing app to access the phone\u2019s camera during onboarding, you may wish to declare the onboarding user flow you\u2019ve defined as failed Once a user flow has stopped in a final state, the state can no longer be changed.</li> </ul>"},{"location":"dev-centre/ws1-intel/core-capabilities/#user-flows-traces","title":"User Flows Traces","text":"<p>Every successful and non-successful user flow is reported with a log of events that occurred while the user flow was in progress. User flows traces can be used by developers to diagnose why a user flow was successful or why it's failing. The events collected include Breadcrumbs left by the developer, important system events that may have impacted the user flow. The following system breadcrumbs are captured automatically by Apteligent:</p> <ul> <li>Network connectivity gained / lost</li> <li>Network connection type changes (eg. wireless to wifi)</li> <li>App backgrounds</li> <li>App foregrounds</li> <li>Crash name and reason</li> </ul>"},{"location":"dev-centre/ws1-intel/core-capabilities/#automatic-breadcrumbs-overview","title":"Automatic Breadcrumbs Overview","text":"<p>Automatic breadcrumbs allow developers to get additional information about the steps users have taken or key events that happen in the apps without requiring additional code changes. Events that trigger these breadcrumbs are stored by our SDK and displayed in our portal alongside developer-defined breadcrumbs, allowing you to trace back through the last steps users took or key events in your app before an error occurred. These breadcrumbs help you reproduce issues more easily and contain valuable diagnostics information.</p> <p>Here are the different events that are stored as automatic breadcrumbs:</p> <ul> <li>Handled Exceptions\u200b</li> <li>Crashes</li> <li>App Background/Foreground</li> <li>\u201cApp foregrounded\u201d</li> <li>\u201cApp backgrounded\u201d</li> <li>Network Connectivity Changes</li> <li>\u201cInternet connection UP\u201d \u201cInternet connection DOWN\u201d</li> <li>\u201cXX (Connectivity State) connectivity gained\u201d</li> <li>\u201cSwitching from XX (Connectivity State) to XX (Connectivity State)\u201d</li> <li>Android connectivity states are:<ul> <li>unknown</li> <li>disconnected, </li> <li>2G</li> <li>3G, </li> <li>EDGE</li> <li>GPRS</li> <li>LTE</li> <li>Wifi</li> </ul> </li> <li>Apple connectivity states are limited to:<ul> <li>Wifi</li> <li>cellular</li> </ul> </li> <li>UIView Loads (and View Names)</li> <li>(Name of the View) loaded</li> <li>(Name of the View) unloaded</li> <li>App Launched \u201cSession Start\u201d</li> </ul>"},{"location":"dev-centre/ws1-intel/core-capabilities/#opt-out-overview","title":"Opt out Overview","text":"<p>Certain app users might want to opt out of Workspace ONE Intelligence logging and tracking. Workspace ONE Intelligence provides a static opt-out status setting that disables all app reporting to Apteligent. This feature is optional. If used, developers must implement the code that prompts the app user to select whether or not to opt out. If a user has opted out, their instance of the app will not report any activity back to Workspace ONE Intelligence.</p>"},{"location":"euc-samples-repository/","title":"Code Samples","text":"<p>Code Samples are provided AS-IS.....</p> <p>this is an index page that is dynamically generated, reading the README.md for each application, utility or project and taking a summary built into a table and linking back to the summary this index will also display the # Description: field within the UEM-Samples/Scripts and UEM-Samples/Sensors folders</p>"},{"location":"euc-samples-repository/#workspace-one-access-samples","title":"Workspace ONE Access Samples","text":"Sample Name Summary Link"},{"location":"euc-samples-repository/#app-volumes-samples","title":"App Volumes Samples","text":"Sample Name Summary Link"},{"location":"euc-samples-repository/#horizon-samples","title":"Horizon Samples","text":"Sample Name Summary Link"},{"location":"euc-samples-repository/#workspace-one-intelligence-samples","title":"Workspace ONE Intelligence Samples","text":"Sample Name Summary Link"},{"location":"euc-samples-repository/#unified-access-gateway-samples","title":"Unified Access Gateway Samples","text":"Sample Name Summary Link"},{"location":"euc-samples-repository/#workspace-one-uem-samples","title":"Workspace ONE UEM Samples","text":"Sample Name Summary Link"},{"location":"euc-samples-repository/Access-Samples/","title":"Workspace ONE Access Samples","text":""},{"location":"euc-samples-repository/Access-Samples/#code-samples","title":"Code Samples","text":"<p>Code Samples are provided AS-IS.....</p> <p>this is an index page that is dynamically generated, reading the README.md for each application, utility or project and taking a summary built into a table and linking back to the summary</p>"},{"location":"euc-samples-repository/Access-Samples/#workspace-one-access-samples","title":"Workspace ONE Access Samples","text":"Sample Name Summary Link"},{"location":"euc-samples-repository/Android-Samples/","title":"Workspace ONE Android Samples","text":""},{"location":"euc-samples-repository/Android-Samples/#code-samples","title":"Code Samples","text":"<p>Code Samples are provided AS-IS.....</p> <p>this is an index page that is dynamically generated, reading the README.md for each application, utility or project and taking a summary built into a table and linking back to the summary</p>"},{"location":"euc-samples-repository/Android-Samples/#workspace-one-android-samples","title":"Workspace ONE Android Samples","text":"Sample Name Summary Link"},{"location":"euc-samples-repository/App-Volumes-Samples/","title":"App Volumes Samples","text":""},{"location":"euc-samples-repository/App-Volumes-Samples/#code-samples","title":"Code Samples","text":"<p>Code Samples are provided AS-IS.....</p> <p>this is an index page that is dynamically generated, reading the README.md for each application, utility or project and taking a summary built into a table and linking back to the summary</p>"},{"location":"euc-samples-repository/App-Volumes-Samples/#app-volumes-samples","title":"App Volumes Samples","text":"Sample Name Summary Link"},{"location":"euc-samples-repository/Horizon-Samples/","title":"Horizon Samples","text":""},{"location":"euc-samples-repository/Horizon-Samples/#code-samples","title":"Code Samples","text":"<p>Code Samples are provided AS-IS.....</p> <p>this is an index page that is dynamically generated, reading the README.md for each application, utility or project and taking a summary built into a table and linking back to the summary</p>"},{"location":"euc-samples-repository/Horizon-Samples/#horizon-samples","title":"Horizon Samples","text":"Sample Name Summary Link"},{"location":"euc-samples-repository/Intelligence-Samples/","title":"Intelligence Samples","text":""},{"location":"euc-samples-repository/Intelligence-Samples/#code-samples","title":"Code Samples","text":"<p>Code Samples are provided AS-IS.....</p> <p>this is an index page that is dynamically generated, reading the README.md for each application, utility or project and taking a summary built into a table and linking back to the summary</p>"},{"location":"euc-samples-repository/Intelligence-Samples/#workspace-one-intelligence-samples","title":"Workspace ONE Intelligence Samples","text":"Sample Name Summary Link"},{"location":"euc-samples-repository/UAG-Samples/","title":"UAG Samples","text":""},{"location":"euc-samples-repository/UAG-Samples/#code-samples","title":"Code Samples","text":"<p>Code Samples are provided AS-IS.....</p> <p>this is an index page that is dynamically generated, reading the README.md for each application, utility or project and taking a summary built into a table and linking back to the summary</p>"},{"location":"euc-samples-repository/UAG-Samples/#workspace-one-uag-samples","title":"Workspace ONE UAG Samples","text":"Sample Name Summary Link"},{"location":"euc-samples-repository/UEM-Samples/","title":"UEM Samples","text":""},{"location":"euc-samples-repository/UEM-Samples/#code-samples","title":"Code Samples","text":"<p>Code Samples are provided AS-IS.....</p> <p>this is an index page that is dynamically generated, reading the README.md for each application, utility or project and taking a summary built into a table and linking back to the summary this index will also display the # Description: field within the UEM-Samples/Scripts and UEM-Samples/Sensors folders</p>"},{"location":"euc-samples-repository/UEM-Samples/#workspace-one-uem-samples","title":"Workspace ONE UEM Samples","text":"Sample Name Summary Link"},{"location":"horizon-apis/","title":"Horizon API Documentation","text":"<p>The following API documentation is provided for each Horizon product.</p> <p>Horizon Server</p> <p>VMware Horizon Cloud Service</p> <p>VMware Horizon DaaS</p>"},{"location":"horizon-apis/horizon-cloud-nextgen/","title":"Macro Rendering Error","text":"<p>File: <code>horizon-apis/horizon-cloud-nextgen/index.md</code></p> <p>UndefinedError: 'csp' is undefined</p> <pre><code>Traceback (most recent call last):\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/mkdocs_macros/plugin.py\", line 527, in render\n    return md_template.render(**page_variables)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/jinja2/environment.py\", line 1304, in render\n    self.environment.handle_exception()\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/jinja2/environment.py\", line 939, in handle_exception\n    raise rewrite_traceback_stack(source=source)\n  File \"&lt;template&gt;\", line 58, in top-level template code\njinja2.exceptions.UndefinedError: 'csp' is undefined\n</code></pre>"},{"location":"horizon-apis/horizon-daas/","title":"Horizon DaaS API","text":"<p>This is a API documentation for the VMware Horizon Cloud Service - DaaS (first gen)</p> <p>Horizon DaaS</p> <p></p>"},{"location":"horizon-apis/horizon-server/","title":"Horizon Server API Documentation","text":"<p>This is a API documentation for the Horizon Server 2312 also known as Horizon Enterprise.</p> <p>This API reference provides comprehensive information about status of all Horizon Server components and resources.</p>"},{"location":"horizon-apis/horizon-server/#documentation","title":"Documentation","text":"Name Size Horizon Getting Started Guide 36 KB Horizon Server REST Changelog 2309 34 KB Horizon Server REST Changelog 2312 38 KB Horizon Server REST Pagination, Filter and Sorting Guide V2 57 KB Horizon Server REST Pagination And Filter ans Sorting Guide V3 57 KB Horizon Server REST Pagination, Filter and Sorting Guide 29 KB"},{"location":"horizon-apis/horizon-server/#older-version-api-documentation","title":"Older Version API Documentation","text":"Name Link Horizon 2312 API Explorer 2312 Horizon 2309 API Explorer 2309 Horizon 2306 API Explorer 2306 Horizon 2303 API Explorer 2303 Horizon 2212 API Explorer 2212 Horizon 2209 API Explorer 2209 Horizon 2206 API Explorer 2206 Horizon 2111 API Explorer 2111 Horizon 2106 API Explorer 2106 Horizon 2103 API Explorer 2103 Horizon 2012 API Explorer 2012 Horizon 8.0 API Explorer 8.0.0 Horizon 7.12 API Explorer 7.12.0 Horizon 7.11 API Explorer 7.11.0 Horizon 7.10 API Explorer 7.10.0"},{"location":"horizon-apis/horizon-server/versions/2012/","title":"Horizon Server API Documentation Version 2012","text":"<p>This is a API documentation for the Horizon Server version 2012</p> <p></p>"},{"location":"horizon-apis/horizon-server/versions/2103/","title":"Horizon Server API Documentation Version 2103","text":"<p>This is a API documentation for the Horizon Server version 2103</p> <p></p>"},{"location":"horizon-apis/horizon-server/versions/2106/","title":"Horizon Server API Documentation Version 2106","text":"<p>This is a API documentation for the Horizon Server version 2106</p> <p></p>"},{"location":"horizon-apis/horizon-server/versions/2111/","title":"Horizon Server API Documentation Version 2111","text":"<p>This is a API documentation for the Horizon Server version 2111</p> <p></p>"},{"location":"horizon-apis/horizon-server/versions/2206/","title":"Horizon Server API Documentation Version 2206","text":"<p>This is a API documentation for the Horizon Server version 2206</p> <p></p>"},{"location":"horizon-apis/horizon-server/versions/2209/","title":"Horizon Server API Documentation Version 2209","text":"<p>This is a API documentation for the Horizon Server version 2209</p> <p></p>"},{"location":"horizon-apis/horizon-server/versions/2212/","title":"Horizon Server API Documentation Version 2212","text":"<p>This is a API documentation for the Horizon Server version 2212</p> <p></p>"},{"location":"horizon-apis/horizon-server/versions/2303/","title":"Horizon Server API Documentation Version 2303","text":"<p>This is a API documentation for the Horizon Server version 2303</p> <p></p>"},{"location":"horizon-apis/horizon-server/versions/2303/#change-log","title":"Change Log","text":"Name Size Horizon Server 2303 API Change Log 36 KB"},{"location":"horizon-apis/horizon-server/versions/2306/","title":"Horizon Server API Documentation Version 2306","text":"<p>This is a API documentation for the Horizon Server version 2306</p> <p></p>"},{"location":"horizon-apis/horizon-server/versions/2306/#change-log","title":"Change Log","text":"Name Size Horizon Server 2306 API Change Log 36 KB"},{"location":"horizon-apis/horizon-server/versions/2309/","title":"Horizon Server API Documentation Version 2309","text":"<p>This is a API documentation for the Horizon Server version 2309</p> <p></p>"},{"location":"horizon-apis/horizon-server/versions/2312/","title":"Horizon Server API Documentation","text":"<p>This is a API documentation for the Horizon Server version 2312</p> <p></p>"},{"location":"horizon-apis/horizon-server/versions/7.10.0/","title":"Horizon Server API Documentation Version 7.10.0","text":"<p>This is a API documentation for the Horizon Server version 7.10.0</p> <p></p>"},{"location":"horizon-apis/horizon-server/versions/7.11.0/","title":"Horizon Server API Documentation Version 7.11.0","text":"<p>This is a API documentation for the Horizon Server version 7.11.0</p> <p></p>"},{"location":"horizon-apis/horizon-server/versions/7.12.0/","title":"Horizon Server API Documentation Version 7.12.0","text":"<p>This is a API documentation for the Horizon Server version 7.12.0</p> <p></p>"},{"location":"horizon-apis/horizon-server/versions/8.0.0/","title":"Horizon Server API Documentation Version 8.0.0","text":"<p>This is a API documentation for the Horizon Server version 8.0.0</p> <p></p>"},{"location":"horizon-powercli/","title":"Horizon PowerCLI","text":"<p>The VMware.VimAutomation.HorizonView powershell module provides Connect/Disconnect cmdlets for View API service.</p>"},{"location":"horizon-powercli/#installation","title":"Installation","text":"<p>Installation instructions can be found within the module listing in the Powershell Gallery.</p>"},{"location":"horizon-powercli/#getting-started-with-vmware-horizon-cmdlets","title":"Getting Started with VMware Horizon cmdlets","text":"<p>Cmdlets are usually implemented around resource operations. The four basic operations are CREATE, READ, UPDATE and DELETE. This set of operations is known as CRUD. Most of the cmdlets support CRUD which are respectively cmdlets that start with the New/Get/Set/Remove cmdlet verbs but they also may have additional operations.</p> <p>VMware.VimAutomation.HorizonView module provides two commandlets:</p> <ol> <li><code>Connect-HVServer</code> This cmdlet establishes a connection to the Horizon API service that runs on an instance of the Horizon Connection server.</li> <li><code>Disconnect-HVServer</code> This cmdlet closes the connection to one or more Horizon API services that run on one or more instances of Horizon Connection servers.</li> </ol>"},{"location":"horizon-powercli/connect-hvserver/","title":"Connect-HVServer","text":"<p>This cmdlet establishes a connection to the Horizon API service of the Horizon Connection server specified by the <code>-Server</code> parameter. The connect and disconnect operations for a server use a reference counting mechanism. Every server is identified by its connection string which contains a unique server and user name. If there is already an existing connection to the server, a new connection is not established. Instead, the cmdlet returns the object which represents the existing connection. The RefCount property of the object is incremented by one. When a server is disconnected, then its RefCount property is decreased by one. If this number becomes equal to zero, then the server is disconnected.</p> <p>PowerCLI supports a list of default servers on which the Horizon API service runs. The Horizon API service runs on an instance of the Horizon Connection server. When an operation is performed, if the target servers cannot be determined from the specified parameters, the cmdlet runs against the servers in the default server list. </p> <p>The target servers are kept in a global variable called <code>$DefaultHVServers</code>. The variable is of an array type and its initial value is an empty array. When you connect to a server, the server is added at the beginning of the array, unless <code>-NotDefault</code> parameter is specified. When you disconnect from a server, the server is removed from the <code>$DefaultHVServers</code> variable. When all servers are removed from the variable, its value is an empty array.</p>"},{"location":"horizon-powercli/connect-hvserver/#syntax","title":"Syntax","text":"CredentialDefaultSessionSecret <pre><code>Connect-HVServer    [-Server]  &lt;String&gt; \n                    -Credential  &lt;PSCredential&gt; \n                    [-Domain  &lt;String&gt;] \n                    [-Force] \n                    [-NotDefault] \n                    [CommonParameters] \n</code></pre> <pre><code>Connect-HVServer    [-Server]  &lt;String&gt;\n                    [-Domain  &lt;String&gt;]\n                    [-Force]\n                    [-NotDefault]\n                    [-Password  &lt;SecureString&gt;]\n                    [-User  &lt;String&gt;]\n                    [CommonParameters]\n</code></pre> <pre><code>Connect-HVServer    [-Server]  &lt;String&gt;\n                    -SessionId  &lt;String&gt;\n                    [-Force]\n                    [-NotDefault]\n                    [CommonParameters]\n</code></pre>"},{"location":"horizon-powercli/connect-hvserver/#parameters","title":"Parameters","text":"Required Parameter Name Type Position Features Description required Server String 1 Specifies the IP or FQDN of the Horizon Connection server on which the Horizon API service runs. required SessionId String named Specifies the ID of an existing Horizon Connection server session that you want to reestablish. optional Force SwitchParameter named Suppresses all user interface prompts during the cmdlet execution such as multiple default servers and invalid certificate action. optional NotDefault SwitchParameter named Specifies that you do not want to save the specified servers as default servers."},{"location":"horizon-powercli/connect-hvserver/#output","title":"Output","text":"<p>VMware.VimAutomation.HorizonView.Types.V1.ViewServer</p>"},{"location":"horizon-powercli/connect-hvserver/#examples","title":"Examples","text":""},{"location":"horizon-powercli/connect-hvserver/#example-1","title":"Example 1","text":"<pre><code>Connect-HVServer -Server server -User username -Password pass -Domain domain\n</code></pre> <p>Connects to the Horizon API service that runs on an instance of a Horizon Connection server by using the User, Password, and Domain parameters.</p>"},{"location":"horizon-powercli/connect-hvserver/#example-2","title":"Example 2","text":"<pre><code>$cs = Connect-HVServer -Server server -Username user -Password pass -Domain domain;\nConnect-HVServer -Server server -SessionId $cs.SessionSecret\n</code></pre> <p>Connects to the Horizon API service that runs on an instance of a Horizon Connection server with an existing session and returns the Horizon API service object. Username is alias to parameter user.</p>"},{"location":"horizon-powercli/connect-hvserver/#example-3","title":"Example 3","text":"<pre><code>Connect-HVServer -Server server -User username@domain -Password pass\n</code></pre> <p>Connects to the Horizon API service of a Horizon Connection server by passing the domain as a part of the user name and returns the Horizon API service object.</p>"},{"location":"horizon-powercli/connect-hvserver/#example-4","title":"Example 4","text":"<pre><code>Connect-HVServer -Server server\n</code></pre> <p>Connects to the Horizon API service that runs on an instance of a Horizon Connection server. The user, domain, and password parameters are prompted for and read by the PowerCLI user interface. Returns the Horizon API service object.</p>"},{"location":"horizon-powercli/connect-hvserver/#related-commands","title":"Related Commands","text":""},{"location":"horizon-powercli/connect-hvserver/#hvserver","title":"HVServer","text":"<p>Disconnect-HVServer This cmdlet closes the connection to one or more Horizon API services that run on one or more instances of Horizon Connection servers.</p>"},{"location":"horizon-powercli/disconnect-hvserver/","title":"Disconnect-HVServer","text":"<p>This cmdlet disconnects the connection to a Horizon API service that runs on an instance of the Horizon Connection server specified by the <code>-Server</code> parameter. When there are no active connections to the server, the server is disconnected and removed from the <code>$DefaultHVServers</code> variable. For more information about this variable, see Connect-HVServer.</p> <p>When no server and no user parameter is specified, and if there is only one connected server in the <code>$DefaultHVServers</code> variable, this server is disconnected. If there is no connected server or multiple servers, the cmdlet throws a terminating error. This functionality uses the reference counting mechanism. A disconnect decreases the RefCount for that server. For more information about the mechanism, see Connect-HVServer.</p> <p>If <code>-Force</code> is specified, the server is disconnected even if there is more than one connection to it.</p>"},{"location":"horizon-powercli/disconnect-hvserver/#syntax","title":"Syntax","text":"Default <pre><code>  Disconnect-HVServer [-Force]\n                      [-Server  &lt;ViewServer[]&gt;]\n                      [CommonParameters]\n</code></pre>"},{"location":"horizon-powercli/disconnect-hvserver/#parameters","title":"Parameters","text":"Required Parameter Name Type Position Features Description optional Force SwitchParameter named Specifies that you want to remove all existing connections to the specified servers. optional Server ViewServer[] named pipeline Specifies the Horizon API service that runs on an instance of a Horizon Connection server that you want to disconnect from."},{"location":"horizon-powercli/disconnect-hvserver/#output","title":"Output","text":"<p>VMware.VimAutomation.HorizonView.Types.V1.ViewServer</p>"},{"location":"horizon-powercli/disconnect-hvserver/#examples","title":"Examples","text":""},{"location":"horizon-powercli/disconnect-hvserver/#example-1","title":"Example 1","text":"<p><code>$HVServer = Connect-HVServer -Server server; Disconnect-HVServer -server $HVServer</code> Disconnects the connection to the specified Horizon API service that runs on an instance of a Horizon Connection server.</p>"},{"location":"horizon-powercli/disconnect-hvserver/#example-2","title":"Example 2","text":"<p><code>$HVServer = Connect-HVServer -Server server; Disconnect-HVServer -Force *</code> Disconnects all connected Horizon API services that run on instances of Horizon Connection servers.</p>"},{"location":"horizon-powercli/disconnect-hvserver/#related-commands","title":"Related Commands","text":""},{"location":"horizon-powercli/disconnect-hvserver/#hvserver","title":"HVServer","text":"<p>Connect-HVServer This cmdlet establishes a connection to the Horizon API service that runs on an instance of the Horizon Connection server.</p>"},{"location":"horizon-sdks/","title":"Horizon SDK Documentation","text":"<p>The following SDKs are provided for Horizon environments.</p> <p>VMware RDP VC Bridge SDK</p> <p>VMware View Session Enhancement SDK</p>"},{"location":"horizon-sdks/rdpvcbridge/","title":"RDP VC Bridge","text":"<p>VMware RDP VC Bridge SDK allows partners to write Windows applications that can load plugins on the Horizon Client and communicate with them over a Horizon virtual channel, using Microsoft's \"de facto standard\" RDP WTS APIs.</p> <p>One use case is that it can be used to help the partners integrate and feed information from stand alone medical devices such as ECG and such through a virtual desktop to the private cloud.</p> <p>This SDK is free and public. To obtain technical support for the use of the SDK, Paid Development Consulting is available on request. Please contact us at Horizon-View-RDPVCBridge-SDK-Support@vmware.com for more information. </p>"},{"location":"horizon-sdks/rdpvcbridge/#downloads","title":"Downloads","text":"<p>By downloading, installing, or using the Software, you agree to be bound by the terms of omnissa Software Development Kit License Agreement unless there is a different license provided in or specifically referenced by the downloaded file or package. If you disagree with any terms of the agreement, then do not use the Software.</p> Name Version Size MD5 RDP VC Bridge 3.3.0 36.3 KB 8159599cf07d880c468a6fe206825ec2 Download"},{"location":"horizon-sdks/rdpvcbridge/#documentation-and-reference","title":"Documentation and Reference","text":"Name Size Development Guides VMware Horizon RDP Virtual Channel Bridge SDK Programming Guide 523.9 KB"},{"location":"horizon-sdks/rdpvcbridge/versions/1.0.0-1404318/","title":"Horizon RDP VC Bridge SDK v1.0.0-1404318","text":"<p>VMware RDP VC Bridge SDK allows partners to write Windows applications that can load plugins on the View client and communicate with them over a PCoIP virtual channel, using Microsoft's \"de facto standard\" RDP WTS APIs.</p> <p>One use case is that it can be used to help the partners integrate and feed information from stand alone medical devices such as ECG and such through a virtual desktop to the private cloud.</p> <p>This SDK is free and public. To obtain technical support for the use of the SDK, Paid Development Consulting is available on request. Please contact us at Horizon-View-RDPVCBridge-SDK-Support@vmware.com for more information.</p>"},{"location":"horizon-sdks/rdpvcbridge/versions/1.0.0-1404318/#downloads","title":"Downloads","text":"<p>By downloading, installing, or using the Software, you agree to be bound by the terms of VMware\u2019s Software Development Kit License Agreement unless there is a different license provided in or specifically referenced by the downloaded file or package. If you disagree with any terms of the agreement, then do not use the Software.</p> Name Version Size MD5 RDP VC Bridge SDK 1.0.0-1404318 Download"},{"location":"horizon-sdks/rdpvcbridge/versions/1.0.0-1404318/#documentation-and-reference","title":"Documentation and Reference","text":"Name Size OSS @span oss_license RPVCBridge SDK 1.0 14.6 KB"},{"location":"horizon-sdks/rdpvcbridge/versions/2.0.0/","title":"Horizon RDP VC Bridge SDK v2.0","text":"<p>VMware RDP VC Bridge SDK allows partners to write Windows applications that can load plugins on the View client and communicate with them over a PCoIP virtual channel, using Microsoft's \"de facto standard\" RDP WTS APIs.</p> <p>One use case is that it can be used to help the partners integrate and feed information from stand alone medical devices such as ECG and such through a virtual desktop to the private cloud.</p> <p>This SDK is free and public. To obtain technical support for the use of the SDK, Paid Development Consulting is available on request. Please contact us at Horizon-View-RDPVCBridge-SDK-Support@vmware.com for more information.</p>"},{"location":"horizon-sdks/rdpvcbridge/versions/2.0.0/#downloads","title":"Downloads","text":"<p>By downloading, installing, or using the Software, you agree to be bound by the terms of VMware\u2019s Software Development Kit License Agreement unless there is a different license provided in or specifically referenced by the downloaded file or package. If you disagree with any terms of the agreement, then do not use the Software.</p> Name Version Size MD5 RDP VC Bridge SDK 2.0 10.9 MB Download"},{"location":"horizon-sdks/rdpvcbridge/versions/2.0.0/#documentation-and-reference","title":"Documentation and Reference","text":"Name Size OSS @span open_source_license RDP VC Bridge 2.0.0 8.4 KB"},{"location":"horizon-sdks/rdpvcbridge/versions/3.0.0/","title":"Horizon RDP VC Bridge SDK v3.0.0","text":"<p>VMware RDP VC Bridge SDK allows partners to write Windows applications that can load plugins on the View client and communicate with them over a PCoIP virtual channel, using Microsoft's \"de facto standard\" RDP WTS APIs.</p> <p>One use case is that it can be used to help the partners integrate and feed information from stand alone medical devices such as ECG and such through a virtual desktop to the private cloud.</p> <p>This SDK is free and public. To obtain technical support for the use of the SDK, Paid Development Consulting is available on request. Please contact us at Horizon-View-RDPVCBridge-SDK-Support@vmware.com for more information.</p>"},{"location":"horizon-sdks/rdpvcbridge/versions/3.0.0/#downloads","title":"Downloads","text":"<p>By downloading, installing, or using the Software, you agree to be bound by the terms of VMware\u2019s Software Development Kit License Agreement unless there is a different license provided in or specifically referenced by the downloaded file or package. If you disagree with any terms of the agreement, then do not use the Software.</p> Name Version Size MD5 RDP VC Bridge SDK 3.0.0 17.6  MB Download"},{"location":"horizon-sdks/rdpvcbridge/versions/3.0.0/#documentation-and-reference","title":"Documentation and Reference","text":"Name Size OSS @span Open Source File 21.6 KB"},{"location":"horizon-sdks/rdpvcbridge/versions/3.1.0/","title":"Horizon RDP VC Bridge SDK v3.1.0","text":"<p>VMware RDP VC Bridge SDK allows partners to write Windows applications that can load plugins on the View client and communicate with them over a PCoIP virtual channel, using Microsoft's \"de facto standard\" RDP WTS APIs.</p> <p>One use case is that it can be used to help the partners integrate and feed information from stand alone medical devices such as ECG and such through a virtual desktop to the private cloud.</p> <p>This SDK is free and public. To obtain technical support for the use of the SDK, Paid Development Consulting is available on request. Please contact us at Horizon-View-RDPVCBridge-SDK-Support@vmware.com for more information.</p>"},{"location":"horizon-sdks/rdpvcbridge/versions/3.1.0/#downloads","title":"Downloads","text":"<p>By downloading, installing, or using the Software, you agree to be bound by the terms of VMware\u2019s Software Development Kit License Agreement unless there is a different license provided in or specifically referenced by the downloaded file or package. If you disagree with any terms of the agreement, then do not use the Software.</p> Name Version Size MD5 RDP VC Bridge SDK 3.1.0 17.9 MB Download"},{"location":"horizon-sdks/rdpvcbridge/versions/3.2.0/","title":"Horizon RDP VC Bridge SDK v3.1.0","text":"<p>VMware RDP VC Bridge SDK allows partners to write Windows applications that can load plugins on the View client and communicate with them over a PCoIP virtual channel, using Microsoft's \"de facto standard\" RDP WTS APIs.</p> <p>One use case is that it can be used to help the partners integrate and feed information from stand alone medical devices such as ECG and such through a virtual desktop to the private cloud.</p> <p>This SDK is free and public. To obtain technical support for the use of the SDK, Paid Development Consulting is available on request. Please contact us at Horizon-View-RDPVCBridge-SDK-Support@vmware.com for more information.</p>"},{"location":"horizon-sdks/rdpvcbridge/versions/3.2.0/#downloads","title":"Downloads","text":"<p>By downloading, installing, or using the Software, you agree to be bound by the terms of VMware\u2019s Software Development Kit License Agreement unless there is a different license provided in or specifically referenced by the downloaded file or package. If you disagree with any terms of the agreement, then do not use the Software.</p> Name Version Size MD5 RDP VC Bridge SDK 3.2.0 1.7 MB Download"},{"location":"horizon-sdks/rdpvcbridge/versions/3.3.0/","title":"Horizon RDP VC Bridge SDK","text":""},{"location":"horizon-sdks/rdpvcbridge/versions/3.3.0/#rdp-vc-bridge","title":"RDP VC Bridge","text":"<p>VMware RDP VC Bridge SDK allows partners to write Windows applications that can load plugins on the Horizon Client and communicate with them over a Horizon virtual channel, using Microsoft's \"de facto standard\" RDP WTS APIs.</p> <p>One use case is that it can be used to help the partners integrate and feed information from stand alone medical devices such as ECG and such through a virtual desktop to the private cloud.</p> <p>This SDK is free and public. To obtain technical support for the use of the SDK, Paid Development Consulting is available on request. Please contact us at Horizon-View-RDPVCBridge-SDK-Support@vmware.com for more information.</p>"},{"location":"horizon-sdks/rdpvcbridge/versions/3.3.0/#downloads","title":"Downloads","text":"<p>By downloading, installing, or using the Software, you agree to be bound by the terms of Omnissa Software Development Kit License Agreement unless there is a different license provided in or specifically referenced by the downloaded file or package. If you disagree with any terms of the agreement, then do not use the Software.</p> Name Version Size MD5 RDP VC Bridge 3.3.0 36.3 KB 8159599cf07d880c468a6fe206825ec2 Download"},{"location":"horizon-sdks/rdpvcbridge/versions/3.3.0/#documentation-and-reference","title":"Documentation and Reference","text":"Name Size Development Guides VMware Horizon RDP Virtual Channel Bridge SDK Programming Guide 523.9 KB"},{"location":"horizon-sdks/view-session-management/","title":"Horizon View Session Enhancement SDK v3.3","text":"<p>The VMware View Session Enhancement Software Development Kit (SDK) allows software engineers to write host-side and client-side applications and allow communications between a clients and remote desktop. The Session Enhancement SDK is comprised of a Remote Procedure Call (RPC) API and Overlay API.</p> <p>The RPC API provides an asynchronous, callback driven communications channel between applications running on the remote desktop and a plugin running on the client endpoint. The RPC API also handles marshaling / un-marshaling of parameters. The Overlay API solves the problem of displaying rendered images on the client so that they appear to the user to be a local window on the remote desktop.</p> <p>This SDK is free and public. To obtain technical support for the use of the SDK, Please submit a Support Request (SR) via myvmware.com to get help from the VMware Global Support. (GSS).</p>"},{"location":"horizon-sdks/view-session-management/#downloads","title":"Downloads","text":"<p>By downloading, installing, or using the Software, you agree to be bound by the terms of VMware\u2019s Software Development Kit License Agreement unless there is a different license provided in or specifically referenced by the downloaded file or package. If you disagree with any terms of the agreement, then do not use the Software.</p> Name Version Size MD5 Horizon View Session Enhancement 3.3.0 524.7 KB 509fec1b84019f24bf257afc3ecb8aa5 Download"},{"location":"horizon-sdks/view-session-management/#documentation-and-reference","title":"Documentation and Reference","text":"Name Size Development Guides VMware Horizon Session Enhancement SDK Programming Guide 1.1 MB"},{"location":"horizon-sdks/view-session-management/#top-community-sample-code","title":"Top Community Sample Code","text":"<p>| --- | --- | --- | | Name | Contributor | Language | | Infrastructure Pain Points Overview | VMkbruesch | vRealize Ops Dashboard |</p>"},{"location":"horizon-sdks/view-session-management/versions/1.0/","title":"Horizon View Session Enhancement SDK v1.0","text":"<p>The VMware View Session Enhancement Software Development Kit (SDK) allows software engineers to write host-side and client-side applications and allow communications between a clients and remote desktop. The Session Enhancement SDK is comprised of a Remote Procedure Call (RPC) API and Overlay API.</p> <p>The RPC API provides an asynchronous, callback driven communications channel between applications running on the remote desktop and a plugin running on the client endpoint. The RPC API also handles marshaling / un-marshaling of parameters. The Overlay API solves the problem of displaying rendered images on the client so that they appear to the user to be a local window on the remote desktop.</p> <p>This SDK is free, public and unsupported. However, we do offer Paid Development Consulting on request. Please contact us at Horizon-View-Session-Enhancement-SDK-Support@vmware.com for more information.</p>"},{"location":"horizon-sdks/view-session-management/versions/1.0/#downloads","title":"Downloads","text":"<p>By downloading, installing, or using the Software, you agree to be bound by the terms of VMware\u2019s Software Development Kit License Agreement unless there is a different license provided in or specifically referenced by the downloaded file or package. If you disagree with any terms of the agreement, then do not use the Software.</p> Name Version Size MD5 Horizon View Session Enhancement SDK for Windows 1.0 Download Horizon View Session Enhancement SDK for Linux 1.0 Download"},{"location":"horizon-sdks/view-session-management/versions/1.0/#documentation-and-reference","title":"Documentation and Reference","text":"Name Size API References @span VMware Horizon View Session Enhancement SDK Agreement 231.9  KB Development Guides @span VMware Horizon View Session Enhancement SDK API Guide 294.5  KB OSS @span Horizon View Session Enhancement SDK 1_0 Open Source License.txt 5.1 KB"},{"location":"horizon-sdks/view-session-management/versions/1.0/#top-community-sample-code","title":"Top Community Sample Code","text":"Name Contributor Language Infrastructure Pain Points Overview VMkbruesch vRealize Ops Dashboard"},{"location":"horizon-sdks/view-session-management/versions/2.0/","title":"Horizon View Session Enhancement SDK v2.0","text":"<p>The VMware View Session Enhancement Software Development Kit (SDK) allows software engineers to write host-side and client-side applications and allow communications between a clients and remote desktop. The Session Enhancement SDK is comprised of a Remote Procedure Call (RPC) API and Overlay API.</p> <p>The RPC API provides an asynchronous, callback driven communications channel between applications running on the remote desktop and a plugin running on the client endpoint. The RPC API also handles marshaling / un-marshaling of parameters. The Overlay API solves the problem of displaying rendered images on the client so that they appear to the user to be a local window on the remote desktop.</p> <p>This SDK is free, public and unsupported. However, we do offer Paid Development Consulting on request. Please contact us at Horizon-View-Session-Enhancement-SDK-Support@vmware.com for more information.</p>"},{"location":"horizon-sdks/view-session-management/versions/2.0/#downloads","title":"Downloads","text":"<p>By downloading, installing, or using the Software, you agree to be bound by the terms of VMware\u2019s Software Development Kit License Agreement unless there is a different license provided in or specifically referenced by the downloaded file or package. If you disagree with any terms of the agreement, then do not use the Software.</p> Name Version Size MD5 Horizon View Session Enhancement SDK for Windows 2.0 Download"},{"location":"horizon-sdks/view-session-management/versions/2.0/#documentation-and-reference","title":"Documentation and Reference","text":"Name Size OSS @span OSL File - View Session Enhancement SDK 2.0 63.2 KB"},{"location":"horizon-sdks/view-session-management/versions/2.0/#top-community-sample-code","title":"Top Community Sample Code","text":"Name Contributor Language Infrastructure Pain Points Overview VMkbruesch vRealize Ops Dashboard"},{"location":"horizon-sdks/view-session-management/versions/3.0/","title":"Horizon View Session Enhancement SDK v3.0","text":"<p>The VMware View Session Enhancement Software Development Kit (SDK) allows software engineers to write host-side and client-side applications and allow communications between a clients and remote desktop. The Session Enhancement SDK is comprised of a Remote Procedure Call (RPC) API and Overlay API.</p> <p>The RPC API provides an asynchronous, callback driven communications channel between applications running on the remote desktop and a plugin running on the client endpoint. The RPC API also handles marshaling / un-marshaling of parameters. The Overlay API solves the problem of displaying rendered images on the client so that they appear to the user to be a local window on the remote desktop.</p> <p>This SDK is free, public and unsupported. However, we do offer Paid Development Consulting on request. Please contact us at Horizon-View-Session-Enhancement-SDK-Support@vmware.com for more information.</p>"},{"location":"horizon-sdks/view-session-management/versions/3.0/#downloads","title":"Downloads","text":"<p>By downloading, installing, or using the Software, you agree to be bound by the terms of VMware\u2019s Software Development Kit License Agreement unless there is a different license provided in or specifically referenced by the downloaded file or package. If you disagree with any terms of the agreement, then do not use the Software.</p> Name Version Size MD5 Horizon View Session Enhancement SDK 3.0 65.8 MB 779d77e1980dea24775acdf49cc3080d Download"},{"location":"horizon-sdks/view-session-management/versions/3.0/#documentation-and-reference","title":"Documentation and Reference","text":"Name Size OSS @span Open Source File 55.5 KB"},{"location":"horizon-sdks/view-session-management/versions/3.0/#top-community-sample-code","title":"Top Community Sample Code","text":"Name Contributor Language Infrastructure Pain Points Overview VMkbruesch vRealize Ops Dashboard"},{"location":"horizon-sdks/view-session-management/versions/3.1/","title":"Horizon View Session Enhancement SDK v3.1","text":"<p>The VMware View Session Enhancement Software Development Kit (SDK) allows software engineers to write host-side and client-side applications and allow communications between a clients and remote desktop. The Session Enhancement SDK is comprised of a Remote Procedure Call (RPC) API and Overlay API.</p> <p>The RPC API provides an asynchronous, callback driven communications channel between applications running on the remote desktop and a plugin running on the client endpoint. The RPC API also handles marshaling / un-marshaling of parameters. The Overlay API solves the problem of displaying rendered images on the client so that they appear to the user to be a local window on the remote desktop.</p> <p>This SDK is free and public. To obtain technical support for the use of the SDK, Please submit a Support Request (SR) via myvmware.com to get help from the VMware Global Support. (GSS).</p>"},{"location":"horizon-sdks/view-session-management/versions/3.1/#downloads","title":"Downloads","text":"<p>By downloading, installing, or using the Software, you agree to be bound by the terms of VMware\u2019s Software Development Kit License Agreement unless there is a different license provided in or specifically referenced by the downloaded file or package. If you disagree with any terms of the agreement, then do not use the Software.</p> Name Version Size MD5 Horizon View Session Enhancement SDK 3.1 65.6 MB Download"},{"location":"horizon-sdks/view-session-management/versions/3.1/#top-community-sample-code","title":"Top Community Sample Code","text":"Name Contributor Language Infrastructure Pain Points Overview VMkbruesch vRealize Ops Dashboard"},{"location":"horizon-sdks/view-session-management/versions/3.2/","title":"Horizon View Session Enhancement SDK v3.2","text":"<p>The VMware View Session Enhancement Software Development Kit (SDK) allows software engineers to write host-side and client-side applications and allow communications between a clients and remote desktop. The Session Enhancement SDK is comprised of a Remote Procedure Call (RPC) API and Overlay API.</p> <p>The RPC API provides an asynchronous, callback driven communications channel between applications running on the remote desktop and a plugin running on the client endpoint. The RPC API also handles marshaling / un-marshaling of parameters. The Overlay API solves the problem of displaying rendered images on the client so that they appear to the user to be a local window on the remote desktop.</p> <p>This SDK is free and public. To obtain technical support for the use of the SDK, Please submit a Support Request (SR) via myvmware.com to get help from the VMware Global Support. (GSS).</p>"},{"location":"horizon-sdks/view-session-management/versions/3.2/#downloads","title":"Downloads","text":"<p>By downloading, installing, or using the Software, you agree to be bound by the terms of VMware\u2019s Software Development Kit License Agreement unless there is a different license provided in or specifically referenced by the downloaded file or package. If you disagree with any terms of the agreement, then do not use the Software.</p> Name Version Size MD5 Horizon View Session Enhancement SDK 3.2 6.9 MB Download"},{"location":"horizon-sdks/view-session-management/versions/3.2/#top-community-sample-code","title":"Top Community Sample Code","text":"Name Contributor Language Infrastructure Pain Points Overview VMkbruesch vRealize Ops Dashboard"},{"location":"horizon-sdks/view-session-management/versions/3.3/","title":"Horizon View Session Enhancement SDK v3.3","text":"<p>The VMware View Session Enhancement Software Development Kit (SDK) allows software engineers to write host-side and client-side applications and allow communications between a clients and remote desktop. The Session Enhancement SDK is comprised of a Remote Procedure Call (RPC) API and Overlay API.</p> <p>The RPC API provides an asynchronous, callback driven communications channel between applications running on the remote desktop and a plugin running on the client endpoint. The RPC API also handles marshaling / un-marshaling of parameters. The Overlay API solves the problem of displaying rendered images on the client so that they appear to the user to be a local window on the remote desktop.</p> <p>This SDK is free and public. To obtain technical support for the use of the SDK, Please submit a Support Request (SR) via myvmware.com to get help from the VMware Global Support. (GSS).</p>"},{"location":"horizon-sdks/view-session-management/versions/3.3/#downloads","title":"Downloads","text":"<p>By downloading, installing, or using the Software, you agree to be bound by the terms of VMware\u2019s Software Development Kit License Agreement unless there is a different license provided in or specifically referenced by the downloaded file or package. If you disagree with any terms of the agreement, then do not use the Software.</p> Name Version Size MD5 Horizon View Session Enhancement 3.3.0 524.7 KB 509fec1b84019f24bf257afc3ecb8aa5 Download"},{"location":"horizon-sdks/view-session-management/versions/3.3/#documentation-and-reference","title":"Documentation and Reference","text":"Name Size Development Guides VMware Horizon Session Enhancement SDK Programming Guide 1.1 MB"},{"location":"horizon-sdks/view-session-management/versions/3.3/#top-community-sample-code","title":"Top Community Sample Code","text":"<p>| --- | --- | --- | | Name | Contributor | Language | | Infrastructure Pain Points Overview | VMkbruesch | vRealize Ops Dashboard |</p>"},{"location":"powercli/","title":"PowerCLI","text":"<p>Powershell provides a powerful way to script Omnissa product operations. This is a collection of official Powershell modules.</p> <p>Horizon PowerCLI</p><p>Provides cmdlets for automating VMware Horizon features.</p>"},{"location":"product-docs/","title":"Product Documentation","text":"<p>Links to Official Product Documentation Getting Started Guides are below. The main documentation site can be found at https://docs.omnissa.com/.</p> <p>Workspace ONE</p><p>Multi-platform endpoint and app management</p> <p>Workspace ONE Access</p><p>centralized management console with which you can manage users and groups, set up and manage authentication and access policies, and add resources to the catalog and manage entitlements to those resources.</p> <p>Workspace ONE Intelligence</p><p>Capture real-time event data from key user flows in your app</p> <p>Workspace ONE Hub Services</p><p>Securely discover, access, and connect to your company\u2019s resources, teams, and workflows</p> <p>Workspace ONE Assist</p><p>Remote support for digital employees</p> <p>Workspace ONE Tunnel</p><p>Securely provide either Per-App or Full Device VPN capabilities across all your employees\u2019 devices and delivered with a modern Zero Trust architecture</p> <p>Unified Access Gateway</p><p>Secure external access to your applications and desktops.</p> <p>Horizon 8</p><p>Secure virtual desktop (VDI) and app platform delivery</p> <p>App Volumes</p><p>Real-time application delivery system that enterprises can use to dynamically deliver and manage applications.</p> <p>Dynamic Environment Manager</p><p>Windows profile management through dynamic policy configuration</p>"},{"location":"samples/","title":"Code Samples","text":"<p>Browse and download code samples from Omnissa as well as code samples contributed by the Omnissa community.</p> <p>Important</p> <p>The EUC related samples stored in the VMware Samples Exchange have been migrated to the euc-samples  and are organised according to Platform. Some samples may no longer be present or be located in a different location. Please be patient as we work to provide you with a new format. Alternatively, feel free to contribute your samples to euc-samples directly. Any samples residing within euc-samples will be indexed on a 24 hour basis and displayed in the corresponding section linked below.</p> <p>Disclaimer: All sample content and code in Sample Exchange is licensed to you by the sample's author. VMware does not guarantee the samples; they are provided \"AS IS\". Use of this site is subject to the VMware Community Terms of Use.</p> <p>Workspace ONE Access Samples</p><p>Workspace ONE Access example REST API sample scripts</p> <p>Workspace ONE UEM Samples for Android</p><p>Workspace ONE UEM example sample scripts and apps for Android devices</p> <p>App Volumes Samples</p><p>App Volumes Samples scripts and REST API calls</p> <p>Horizon Samples</p><p>Horizon Enterprise and Cloud scripts and API samples to manage day 2 operations</p> <p>Workspace ONE Intelligence Samples</p><p>Workspace ONE Intelligence Custom Connectors and Sample Apps with the Workspace ONE Intelligence SDK</p> <p>Unified Access Gateway Samples</p><p>Sample scripts to deploy and manage UAG</p> <p>Workspace ONE UEM Samples</p><p>Workspace ONE UEM Apps, Guides, Profiles, Scripts, Sensors and Utilities</p>"},{"location":"sdks/","title":"SDKs","text":"<p>Developers, Automation Engineers, and System Administrators can build world class solutions on the VMware platform. Select a VMware SDK to find more information, downloads, documentation, and resources. Some SDKs are made available only through certain offerings and programs.</p> <p>Horizon View Session Enhancement SDK</p><p>use the VMware View Session Enhancement Software Development Kit (SDK) to write host-side and client-side applications and allow communications between a clients and remote desktop</p> <p>Horizon RDP VC Bridge SDK</p><p>use the VMware RDP VC Bridge SDK to write Windows applications that can load plugins on the Horizon Client</p> <p>Workspace ONE Intelligence SDK</p><p>enables developers to capture real-time event data from key user flows in an app screen such as load time, network events, crash reports, and more</p> <p>Workspace ONE SDK for Android</p><p>enable additional app config and security capabilities that may not yet be available natively as part of the AppConfig Community for Android devices</p> <p>Workspace ONE SDK for iOS</p><p>enable additional app config and security capabilities that may not yet be available natively as part of the AppConfig Community for iOS devices</p>"},{"location":"support/","title":"API, SDK, and PowerCLI Support Options","text":"<p>If you need assistance with using one of our APIs, SDKs, or PowerCLI commandlets, VMware offers a number of free and paid support options.</p>"},{"location":"support/#community-support","title":"Community Support","text":"<p>Join one or more of our developer communities, where you can connect with developers, automation engineers, IT admins, and other VMware product experts around the world. Share knowledge in discussion forums; follow the latest news in our blogs and social media; and participate in talks and events, including developer talks at VMware Explore (formerly VMworld), as well as SpringOne and Spring I/O.</p>"},{"location":"support/#product-support","title":"Product Support","text":"<p>VMware Global Support Services helps customers find the correct level of support, from developer assistance to a comprehensive customer success offering. See VMware Support Offerings and Services to learn more. (Scroll to the bottom of the page for the latest Product Support Matrix.)</p>"},{"location":"support/#sdk-and-api-support-for-technology-alliance-partners","title":"SDK and API Support for Technology Alliance Partners","text":"<p>Partners in the VMware Technology Alliance Partner (TAP) program can obtain SDK and API support by navigating to the TAP Resources page on the Technology Partner Hub site. File a case by clicking TAP Partner Support, and then choose Support.</p>"},{"location":"support/#sdk-and-api-support-for-commercial-and-enterprise-organizations","title":"SDK and API Support for Commercial and Enterprise Organizations","text":"<p>The VMware SDK and API Support program offers expert assistance to guide your development process, including sanity checks, best practice recommendations, and work-around suggestions. This program is ideal for commercial and enterprise organizations building solutions for managing VMware environments. Contact your VMware Sales representative for more information.</p>"},{"location":"support/#softwarehardware-certification-support-for-technology-alliance-partners","title":"Software/Hardware Certification Support for Technology Alliance Partners","text":"<p>Eligible partners currently enrolled in VMware's TAP program and one of VMware's software/hardware certification programs can purchase the relevant support option from Ecosystem Services Products in the VMware Store. If your program is not listed, please review the instructions for certification support provided with your program materials.</p>"},{"location":"support/#other-support-services-for-partners","title":"Other Support Services for Partners","text":"<p>VMware offers additional partner support services, ranging from incident-based transactional support to subscription-based technical support, including technical support for developers. To learn more, see the Support Services page on Technology Partner Hub.</p>"},{"location":"workspace-one-uem-apis/","title":"Workspace ONE UEM API","text":"<p>Each Workspace ONE UEM tenant provides an API/help page that displays all the API commands, parameters and usage, as well as a mechanism to test each call.</p> <p>This process of testing APIs on the API/help page was cumbersome, especially when having to then manually build the same API call in Postman. It was time-consuming and prone to errors.</p> <p>Omnissa has recently introduced a comprehensive Postman collection for Workspace ONE UEM. This collection includes all available API calls, pre-configured and ready to use, significantly improving workflow efficiency.</p>"},{"location":"workspace-one-uem-apis/#getting-started","title":"Getting Started","text":"<p>Utilising a Postman collection is easy and an exceptionally fast way to get started. If you are new to working with APIs or Postman, see the Workspace ONE UEM APIs overview in the Postman documentation to help you get started. </p> <p>The high-level process documented in the Workspace ONE UEM APIs overview link above are:</p> <ol> <li>Create Fork from Existing Collection</li> <li>Collect your tenant values</li> <li>Create an environment and add your tenant values as variables, including authentication</li> <li>Use the APIs that match your tenant version</li> </ol>"},{"location":"ws1-access-apis/","title":"App Volumes API","text":"<p>The Workspace ONE Access API documentation describes how to utilise the Workspace ONE Access REST API to query and configure Workspace ONE Access.</p>"},{"location":"ws1-access-apis/#documentation-and-reference","title":"Documentation and Reference","text":""},{"location":"ws1-access-apis/Administration/03-Administration/","title":"Administration","text":"<p>VMware Identity Services API management endpoints</p>"},{"location":"ws1-access-apis/Administration/03-Administration/#api-categories","title":"API Categories","text":"<p>Could not render a cards block. Please correct the input.</p>"},{"location":"ws1-access-apis/Administration/04-Directories/","title":"Directories","text":"<p>Endpoints for managing directory configurations</p> <p>Operations</p> <p>POST Create New Directory Create a new directory for users and groups DELETE Delete Directory By ID Delete a directory by ID POST Generate Credentials For Sync Client Generate credentials for a sync client GET Get All Directories Get a list of directories GET Get Directory By ID Get a directory by ID GET Get Directory Sync Client By ID Get a directory sync client configuration PATCH Patch Directory By ID Update a directory by ID</p>"},{"location":"ws1-access-apis/Administration/08-Create-New-Directory/","title":"Create New Directory","text":"<p>This endpoint is responsible for creating a directory for users and groups.</p> <p>Request URL POST https://{api_host}/usergroup/broker/directories COPY Request Body BrokerDirectoryMedia of mimetype application/vnd.vmware.vidm.usergroup.broker.directory+jsonRequired {     \"_links\": {         \"self\": {             \"href\": \"https://example.com/path-to-self\"         }     },     \"default_domain\": \"domain1\",     \"delete_in_progress\": false,     \"domains\": [         \"domain1\",         \"domain2\"     ],     \"id\": \"string\",     \"name\": \"my_dir 1\",     \"source\": \"AZURE\",     \"type\": \"PROVISIONED\" } Map Of Link _linksOptional The resource HATEOAS links. Usually includes a \u201cself\u201d link for this resource</p> <p>String default_domainOptional The default domain is required when users and groups are provisioned from an external directory without a domain. If the default domain is not set when the directory is created and the domain name is not synced from the external directory, user records in the directory will not have the domain attribute associated with the record and underlying services that rely on the domain attribute may fail. Must be one of the list of domain names. Note that the field is not returned in list directories API.</p> <p>Boolean delete_in_progressOptional If true, the directory is marked for deletion and will be deleted soon.</p> <p>Array Of String domainsOptional List of directory domain names</p> <p>String As Uuid idOptional The unique identifier of the directory</p> <p>String nameOptional User provided directory name. This must be unique. The allowed symbols are letters in any language, digits (0-9), space and -_</p> <p>String sourceOptional The type of the directory source</p> <p>Possible values are: AZURE , PING , OKTA , ACCESS , GENERIC</p> <p>String typeOptional The type of the directory</p> <p>Possible values are: PROVISIONED , JIT</p> <p>Authentication This operation uses the following authentication methods. admin Response Response Body 201 Created Returns BrokerDirectoryMedia of type application/vnd.vmware.vidm.usergroup.broker.directory+json The directory has been created.</p> <p>{     \"_links\": {         \"self\": {             \"href\": \"https://example.com/path-to-self\"         }     },     \"default_domain\": \"domain1\",     \"delete_in_progress\": false,     \"domains\": [         \"domain1\",         \"domain2\"     ],     \"id\": \"string\",     \"name\": \"my_dir 1\",     \"source\": \"AZURE\",     \"type\": \"PROVISIONED\" } Map Of Link _linksOptional The resource HATEOAS links. Usually includes a \u201cself\u201d link for this resource</p> <p>String default_domainOptional The default domain is required when users and groups are provisioned from an external directory without a domain. If the default domain is not set when the directory is created and the domain name is not synced from the external directory, user records in the directory will not have the domain attribute associated with the record and underlying services that rely on the domain attribute may fail. Must be one of the list of domain names. Note that the field is not returned in list directories API.</p> <p>Boolean delete_in_progressOptional If true, the directory is marked for deletion and will be deleted soon.</p> <p>Array Of String domainsOptional List of directory domain names</p> <p>String As Uuid idOptional The unique identifier of the directory</p> <p>String nameOptional User provided directory name. This must be unique. The allowed symbols are letters in any language, digits (0-9), space and -_</p> <p>String sourceOptional The type of the directory source</p> <p>Possible values are: AZURE , PING , OKTA , ACCESS , GENERIC</p> <p>String typeOptional The type of the directory</p> <p>Possible values are: PROVISIONED , JIT</p> <p>Errors 400 The directory definition contains invalid input.</p> <p>409 The directory or domain name already exists.</p> <p>Code Samples cURL Command  COPY# Copy and paste this cURL command into your terminal curl -X POST -H 'Authorization: Bearer ' -H \"Content-Type: application/vnd.vmware.vidm.usergroup.broker.directory+json\" -d '{}' https://{api_host}/usergroup/broker/directories"},{"location":"ws1-access-apis/Administration/09-Delete-Directory-By-ID/","title":"Delete Directory By ID","text":"<p>This endpoint is responsible for deleting a directory by ID. This includes the deletion of all associated OAuth 2.0 clients, sync client configurations, users, groups and the directory.</p>"},{"location":"ws1-access-apis/Administration/09-Delete-Directory-By-ID/#request","title":"Request","text":""},{"location":"ws1-access-apis/Administration/09-Delete-Directory-By-ID/#url","title":"URL","text":"<p>DELETE https://{api_host}/usergroup/broker/directories/{id}</p>"},{"location":"ws1-access-apis/Administration/09-Delete-Directory-By-ID/#path-parameters","title":"Path Parameters","text":"<p>String</p> <p>id Required</p> <p>The ID of the directory</p>"},{"location":"ws1-access-apis/Administration/09-Delete-Directory-By-ID/#authentication","title":"Authentication","text":"<p>This operation uses the following authentication methods.</p> <p>admin</p>"},{"location":"ws1-access-apis/Administration/09-Delete-Directory-By-ID/#response","title":"Response","text":"<p><code>202 Accepted</code></p> <p>The directory was successfully deleted.</p> <p>!!!     Operation doesn't return any data structure.</p>"},{"location":"ws1-access-apis/Administration/09-Delete-Directory-By-ID/#errors","title":"Errors","text":"<p><code>404</code></p> <p>The directory was not found.</p>"},{"location":"ws1-access-apis/Administration/09-Delete-Directory-By-ID/#code-samples","title":"Code Samples","text":""},{"location":"ws1-access-apis/Administration/09-Delete-Directory-By-ID/#curl-command","title":"cURL Command","text":"<pre><code># Copy and paste this cURL command into your terminal\ncurl -X DELETE -H 'Authorization: Bearer &lt;JWT token&gt;' https://{api_host}/usergroup/broker/directories/{id}\n</code></pre>"},{"location":"ws1-access-apis/Authentication/02-Authentication/","title":"Authentication","text":"<p>The VMware Identity Services Workspace ONE API supports the following methods to authenticate requests. Individual operations in the documentation will include their specific authentication types.</p>"},{"location":"ws1-access-apis/Authentication/02-Authentication/#admin","title":"admin","text":"<p>A Bearer token created from OAuth2 client having an admin scope</p> <p>Type : http Scheme: bearer BearerFormat : JWT</p>"},{"location":"ws1-access-apis/Authentication/02-Authentication/#basic_auth","title":"basic_auth","text":"<p>The HTTP Basic authentication scheme. The \u2018Authorization\u2019 header is formed using \u2018Basic \u2019 + base64Encode(client_id + \u2018:\u2019 + client_secret)</p> <p>Type : http Scheme: basic  </p>"},{"location":"ws1-access-apis/_Getting%20Started/01-Getting-Started/","title":"Getting Started","text":"<p>Welcome to the VMware Identity Services API Reference documentation. The documentation provides Getting Started information about how to set up an OAuth 2.0 client and obtain access tokens, a comprehensive API reference that includes code samples, and a list of all data structures available through the APIs.</p> <p>The VMware Identity Services APIs are designed for easy configuration and provide a seamless experience for users and applications regardless of the identity provider that you use.</p>"},{"location":"ws1-access-apis/_Getting%20Started/01-Getting-Started/#about-vmware-identity-services","title":"About VMware Identity Services","text":"<p>VMware Identity Services provides centralized user management for Workspace ONE cloud services. The service provisions users and groups from cloud identity providers such as Microsoft Entra ID or Okta to Workspace ONE services and enables federated authentication to the identity provider. VMware Identity Services is only available for new Workspace ONE tenants.</p> <p>VMware Identity Services supports integration with the following Workspace ONE cloud services:</p> <ul> <li>Workspace ONE Access Cloud service</li> <li>Workspace ONE UEM 2212 or later</li> </ul> <p>Take a look at some use cases:</p> <ul> <li>Configure a provisioned directory of users and groups using the System for Cross-domain Identity Management (SCIM 2.0) protocol.</li> <li>Manage identity provider configuration for federated authentication into Workspace ONE services.</li> <li>Leverage centralized user management and authentication across Workspace ONE Access and Workspace ONE UEM.</li> </ul>"},{"location":"ws1-access-apis/_Getting%20Started/01-Getting-Started/#getting-started-with-vmware-identity-services-rest-apis","title":"Getting Started with VMware Identity Services REST APIs","text":"<p>To get you started quickly, let\u2019s dive into the necessary steps required to configure an external identity provider (IdP) with VMware Identity Services REST API for the cloud.</p>"},{"location":"ws1-access-apis/_Getting%20Started/01-Getting-Started/#before-you-start","title":"Before You Start","text":"<p>VMware Identity Services can be integrated with the following cloud-based identity providers:</p> <ul> <li>Microsoft Entra ID</li> <li>Okta</li> <li>Any generic SCIM 2.0 identity source</li> <li>VMware Identity Services supports federated authentication against identity providers that follow OIDC (OpenID Connect) or SAML (Security Assertion Markup Language) standards.</li> </ul> <p>Before you start using the API, make sure you meet the following requirements:</p> <ul> <li>You have a new Workspace ONE tenant.</li> <li>You have an administrator account in the Workspace ONE portal.</li> <li>You can log into your tenant\u2019s Workspace ONE portal.</li> <li>You have completed the VMware Identity Services setup in the Workspace ONE portal under Accounts &gt; End User Management &gt; Get started. This includes enabling VMware Identity Services, configuring the integration with your third-party identity provider, and selecting the Workspace ONE services to use with the identity provider. For more information, see Configuring User Provisioning and Identity Federation with VMware Identity Services.</li> </ul>"},{"location":"ws1-access-apis/_Getting%20Started/01-Getting-Started/#step-1-create-oauth-20-client-from-the-ui","title":"Step 1 - Create OAuth 2.0 Client from the UI","text":"<p>See Enabling API Access for VMware Identity Services.</p> <p>You will need the client ID and client secret to acquire the access token in the next step.</p>"},{"location":"ws1-access-apis/_Getting%20Started/01-Getting-Started/#step-2-get-access-token-for-the-oauth-20-client","title":"Step 2 - Get access token for the OAuth 2.0 Client","text":"<p>An access token is required for authorization of the HTTP calls to the VMware Identity Services APIs.</p> <p>Once the OAuth 2.0 client is created, obtain an access token for the client using the client credentials flow defined in OAuth 2.0 RFC 6749, section 4.4.</p> <pre><code>curl --location --request POST 'https://{baseURL}/acs/token' \\\n--header 'Authorization: Basic {base64_encoded_client_credentials}' \\\n--header 'Content-Type: application/x-www-form-urlencoded' \\\n--data-urlencode 'grant_type=client_credentials'\n</code></pre> <p>Encode the client id and client secret from Step 1 in the format \u201c{client_id}:{client_secret}\u201d to Base64 format and use it in the \u201cAuthorization\u201d header in the request.</p> <p>The response contains the generated client\u2019s access token (\u201caccess_token\u201d) used for authorization in the subsequent API calls, and the number of seconds the access token is valid. When you make calls to a REST API, include the access token in the \u201cAuthorization\u201d header with the type \u201cBearer\u201d.</p> <p>The access token can be reused until it expires. The token time to live (\u201caccess_token_ttl\u201d) is set on client creation. When your access token expires, call the above API again to request a new one.</p>"},{"location":"ws1-access-apis/_Getting%20Started/01-Getting-Started/#step-3-create-oauth-20-client-with-identity-provider-and-directory-admin-ruleset","title":"Step 3 - Create OAuth 2.0 Client with Identity Provider and Directory Admin RuleSet","text":"<p>Next, create an OAuth 2.0 client for the tenant with the IDP_AND_DIRECTORY_ADMIN rule set. A client with the IDP_AND_DIRECTORY_ADMIN rule set is allowed to perform identity provider and directory CRUD operations.</p> <pre><code>curl --location --request POST 'https://{baseURL}/acs/broker/oauth2-clients' \\\n--header 'Content-Type: application/vnd.vmware.horizon.manager.accesscontrol.broker.oauth2client.with.rule.sets+json' \\\n--header 'Accept: application/vnd.vmware.horizon.manager.accesscontrol.broker.oauth2client.with.rule.sets+json' \\\n--header 'Authorization: Bearer {access_token}' \\\n--data-raw '{\n\"client_id\": \"my-auth-grant-client1\",\n\"grant_types\": [\n\"client_credentials\"\n],\n\"scope\": [\n\"admin\"\n],\n\"secret\": \"my-auth-grant-client1-secret\",\n\"access_token_ttl\": 10080,\n\"refresh_token_ttl\": 525600,\n\"refresh_token_idle_ttl\": 525600,\n\"rule_set_names\": [ \"IDP_AND_DIRECTORY_ADMIN\" ]\n}'\n</code></pre> <p>Replace {baseURL} with your Workspace ONE Access tenant URL and {access_token} with the access token that you obtained in Step 2 for authorization. You can set the token time to live (\u201caccess_token_ttl\u201d) field which determines the lifespan for all access tokens acquired by the client.</p>"},{"location":"ws1-access-apis/_Getting%20Started/01-Getting-Started/#step-4-get-access-token-for-the-oauth-20-client","title":"Step 4 - Get access token for the OAuth 2.0 Client","text":"<p>Use this access token for subsequent API calls. Include the token in the \u201cAuthorization\u201d header with the type \u201cBearer\u201d. When the token expires, you can request a new one.</p>"},{"location":"ws1-access-apis/_Getting%20Started/01-Getting-Started/#step-5-optional-delete-the-oauth-20-client-that-you-created-from-the-ui","title":"Step 5 (Optional) - Delete the OAuth 2.0 Client that you created from the UI","text":"<p>To delete the OAuth 2.0 client, follow step 4 from Enabling API Access for VMware Identity Services.</p> <p>Congratulations! You have set up an OAuth 2.0 client to integrate your application with VMware Identity Services.</p>"},{"location":"ws1-access-apis/_Getting%20Started/01-Getting-Started/#request-failures","title":"Request Failures","text":"<p>Errors are reported using standard HTTP response codes. The API returns <code>HTTP 4XX</code> status codes when the request is invalid and <code>HTTP 5XX</code> status codes when something is wrong with the server.</p> <p>For authorization errors, the API returns <code>HTTP 401 (Unauthorized)</code> or <code>HTTP 403 (Forbidden)</code>. These kinds of errors are usually related to an access token and can be cleared by making sure that the token is present and hasn\u2019t expired.</p> <p>The API will fail and returns <code>HTTP 444 (No Response)</code> (with no response body) when the request <code>Host</code> header doesn\u2019t match the server FQDN.</p> <p>For all errors, the API returns an error response body that includes the error code and additional error message in the format below:</p> <pre><code>\"errors\": [\n    {\n        \"code\": \"oauth2.client.with.client.id.already.exists\",\n        \"message\": \"OAuth2 Client with client id {client_id} already exists.\",\n        \"parameters\": {\n            \"oauth2_client_id\": \"{client_id}\"\n        }\n    }\n]\n</code></pre>"},{"location":"ws1-access-apis/_Getting%20Started/01-Getting-Started/#for-more-information","title":"For More Information","text":"<ul> <li>VMware Workspace ONE, VMware Identity Services. Overview of VMware Identity Services for Workspace ONE (SaaS).</li> </ul>"},{"location":"ws1-intelligence-apis/","title":"Workspace ONE Intelligence API","text":"<p>The Workspace ONE Intelligence API documentation describes how to query and extract data for use in other business intelligence tools. It also helps with building General Data Protection Regulation (GDPR) compliant tools and applications with REST APIs.</p>"},{"location":"ws1-intelligence-apis/#documentation-and-reference","title":"Documentation and Reference","text":"Name Link API Documentation for VMware Workspace ONE Intelligence Download API Documentation for VMware Workspace ONE Intelligence v2 Download"},{"location":"ws1-intelligence-sdk/","title":"Workspace ONE Intelligence SDK","text":"<p>Workspace ONE Intelligence SDK enables developers to capture real-time event data from key user flows in your app: screen load time, network events, crash reports, and more. Track key metrics, improve your app release-over-release, and focus on issues that matter to your users.</p>"},{"location":"ws1-intelligence-sdk/#documentation-and-reference","title":"Documentation and Reference","text":"Name Size Development Guides WS1 Intelligence SDK - Guide this needs to be migrated Reference Guides Android Intelligence SDK Network Insights Clients User Guide 8.5 KB Release Notes WS1 Intelligence SDK for Android 24.1.0 Release Notes 12.4 KB WS1 Intelligence SDK for Android 24.3.0 Release Notes 3.8 KB WS1 Intelligence SDK for iOS 24.1.0 Release Notes 9.4 KB WS1 Intelligence SDK for iOS 24.3.0 Release Notes 3.0 KB"},{"location":"ws1-uem-sdk-for-android/","title":"Workspace ONE SDK for Android","text":"<p>The Workspace ONE SDK (formerly known as AirWatch SDK) code library for Google Android devices can be used to enable additional app config and security capabilities that may not yet be available natively as part of the AppConfig Community. Certain use cases such as granular analytics can be provided through a deeper integration with the SDK. The Workspace ONE SDK for Android is also a good choice in deployment scenarios where a MDM profile installation on the device is not possible.</p>"},{"location":"ws1-uem-sdk-for-android/#agreement","title":"Agreement","text":"<p>Before downloading, installing or using the VMware Workspace ONE SDK you must: * Review the VMware Workspace ONE Software Development Kit License Agreement. By downloading, installing, or using the VMware Workspace ONE SDK you agree to these license terms. If you disagree with any of the terms, then do not use the software. * Review the VMware Privacy Notice and the Workspace ONE UEM Privacy Disclosure.</p>"},{"location":"ws1-uem-sdk-for-android/#latest-software","title":"Latest Software","text":"<p>The Workspace ONE SDK for Android is distributed through a public Maven repository. Follow the instructions in the guides below to integrate the latest software. The SDK can instead be downloaded from the My Workspace ONE portal, if you have a My VMware username and password. The Maven repository is the recommended integration method.</p>"},{"location":"ws1-uem-sdk-for-android/#downloads","title":"Downloads","text":"Name Version Size MD5 Link Workspace ONE SDK for Android Native Download"},{"location":"ws1-uem-sdk-for-android/#documentation-and-reference","title":"Documentation and Reference","text":"Name Size Development Guides Workspace ONE for Android Base Integration Guide 603.9 KB Workspace ONE for Android Branding Integration Guide 826.0 KB Workspace ONE for Android: Application Key Management Developer Guide 127.8 KB Workspace ONE for Android: Migration, Deployment, and General Supplement 262.6 KB Workspace ONE for Android: Networking Developer Guide 190.3 KB Sample Code Workspace ONE for Android Open Source Sample Code on GitHub POTENTIALLY CHANGE Integration Guides Workspace ONE for Android Integration Overview 247.8 KB Workspace ONE for Android Integration Preparation Guide 862.9 KB Workspace ONE for Android Privacy Agreements Module Integration Guide - latest 2.6 MB Workspace ONE for Android Public Maven Repository Integration Note 141.3 KB Workspace ONE for Android UEM System Administration for Application Developers Guide 6.4 MB Workspace ONE Gradle Plugin Technical Feature Guide 233.0 KB Workspace ONE Inactivity Wipe Technical Feature Guide 549.8 KB Workspace ONE Printing Prevention Technical Feature Guide 217.1 KB Workspace ONE User Interface Watermark Technical Feature Guide 370.4 KB Technical Feature Guides Mobile Application Management Technical White Paper 1.2 MB App Logging Technical Feature Guide 237.2 KB Require Device Passcode Technical Feature Guide 449.4 KB Miscellaneous Workspace ONE Software Development Kit License Agreement 68.0 KB"},{"location":"ws1-uem-sdk-for-ios/","title":"Workspace ONE SDK for iOS","text":"<p>The Workspace ONE SDK (formerly known as AirWatch SDK) code library for Apple iOS devices can be used to enable additional app config and security capabilities that may not yet be available natively as part of the AppConfig Community. Certain use cases such as granular analytics can be provided through a deeper integration with the SDK. The Workspace ONE SDK for iOS is also a good choice in deployment scenarios where a MDM profile installation on the device is not possible.</p>"},{"location":"ws1-uem-sdk-for-ios/#downloads","title":"Downloads","text":"<p>By downloading, installing, or using the Software, you agree to be bound by the terms of VMware\u2019s Software Development Kit License Agreement unless there is a different license provided in or specifically referenced by the downloaded file or package. If you disagree with any terms of the agreement, then do not use the Software.</p>"},{"location":"ws1-uem-sdk-for-ios/#documentation-and-reference","title":"Documentation and Reference","text":"Name Version Size MD5 Workspace ONE SDK for iOS Native Download <p>Note</p> <p>need to find this download link</p> Name Size Development Guides VMware Workspace ONE for iOS and iPadOS Base Integration Guide 3.1 MB VMware Workspace ONE for iOS and iPadOS Integration Preparation Guide 1.7 MB VMware Workspace ONE Inactivity Wipe Technical Feature Guide 549.8 KB VMware Workspace ONE SDK for iOS (Swift) Developer Guide - latest 2.7 MB VMware Workspace ONE SDK Identity Certificate Export Technical Feature Guide 259.9 KB VMware Workspace ONE SDK URL Scheme Replacement Technical Feature Guide 483.4 KB VMware Workspace ONE Shared Device Support Technical Feature Guide 349.0 KB Workspace ONE SDK for iOS (Objective-C) Developer Guide General Mobile Application Management Technical White Paper 1.2 MB Require Device Passcode Technical Feature Guide 449.4 KB"},{"location":"ws1-uem-sdk-for-ios/Objective-C/","title":"Workspace ONE SDK for iOS (Objective-C)","text":"<p>The VMware Workspace ONE\u00ae SDK is a set of tools allowing organizations to incorporate a host of features and functionality into their custom-built iOS applications. The Workspace ONE SDK enhances the security and functionality of those applications and in turn helps save application development time and money.</p> <p>This content is no longer maintained. Checkout updated Workspace ONE SDK developer documentation on code.vmware.com.</p> <p>Integrating an application with the Workspace ONE SDK can be broken down into five main steps. A high-level overview of each step is listed below.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/#enable-the-core-sdk-framework-within-xcode","title":"Enable the Core SDK Framework within Xcode","text":"<p>These steps detail the core iOS frameworks and the Workspace ONE SDK frameworks that you add to your project in order for the SDK to function properly. The Workspace ONE SDK frameworks are made available by running the provided AirWatchSDK.dmg file.</p> <p>In order for your custom application to use the SDK, you must first complete the following setup procedures in Xcode:</p> <ul> <li>Add Required Frameworks</li> <li>Configure the Server Connections</li> </ul> <p>The following modules enable the device management framework and allow you to configure device management features into your application:</p> <ul> <li>Implement the Beacon</li> <li>Implement the DataSampler</li> </ul>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/#select-and-implement-additional-sdk-modules","title":"Select and Implement Additional SDK Modules","text":"<p>Workspace ONE UEM provides a number of pre-configured functions for your app that can be controlled from the Workspace ONE UEM console. These modules make up the Application Management Framework. You must decide which SDK modules to use within your application.</p> <ul> <li>Developing Modules Developers have the option, for most modules, to code the expected behavior or to set the behavior in the Workspace ONE UEM console. If you want the application to behave a certain way every time, you must code this behavior in to the application.</li> <li>Coding the Logging Level The exception is Logging. You must code the logging level and you must set this option in the Workspace ONE UEM console. This configuration ensures that your network is not burdened with unwanted logging activity.</li> <li>Using Default Settings for SDK Profiles Use the SecurityPolicies and Settings pages to configure settings once and then share them across Workspace ONE UEM applications using the iOS Default Settings @ [Organization Group] profile.</li> </ul> <p>You can also use the Profiles page to configure custom settings with specific behaviors.</p> <p>Implementing each module into your app is a two-step process:</p> <ol> <li>Implement the functionality for the desired module within your app (in Xcode).</li> <li>Add the corresponding configuration to the SDK Profile (in the Workspace ONE UEM console) that gets assigned to the app.</li> </ol>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/#using-certificates","title":"Using Certificates","text":"<p>The Workspace ONE SDK allows you to provision and embed certificates into your app upon deployment. The process involves three main steps:</p> <ul> <li>Configuring the certificate authority (CA) and the CA Template.</li> <li>Creating the App Profile in the Workspace ONE UEM console.</li> <li>Assigning the App Profile to the application in Workspace ONE UEM prior to app deployment. See Certificate Provisioning.</li> </ul>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/#set-default-settings-within-workspace-one-uem","title":"Set Default Settings within Workspace ONE UEM","text":"<p>In the Workspace ONE UEM console, you must configure default SDK settings to assign it to your app. These settings include configurations specific to each module you plan on utilizing.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/#upload-the-application-to-workspace-one-uem","title":"Upload the Application to Workspace ONE UEM","text":"<p>Once your app is completely built, you need to upload the file into Workspace ONE UEM using the Workspace ONE UEM console. During this process, you need to assign the SDK profile you created, making the settings defined in the SDK profile available to your application. The Mobile Application Management (MAM) Guide describes how to upload an application.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/#deploy-the-application","title":"Deploy the Application","text":"<p>The final step is to deploy your application to managed devices through the Workspace ONE UEM console. Users now have access to the application, along with all the SDK enabled features you've implemented.</p> <p>For more information on deploying applications to managed devices, see the Mobile Application Management (MAM) Guide.</p> <ul> <li>Migrate to the Latest SDK Version In the latest SDK for iOS, we have updated various UI screens presented by the SDK. These pages now incorporate storyboards that require you to import the new AWKit.bundle included in the new SDK DMG. This AWKit.bundle contains the compiled storyboards required for the app to function.</li> <li>Supported Operating Systems and Requirements for the Workspace ONE SDK for iOS (Objective-C) The Workspace ONE SDK for iOS (Objective-C) is compatible with the listed operating systems and requires the listed components.</li> <li>Security Considerations for OpenURL in iOS With changes to OpenURL in iOS 13, update to the latest version of the Workspace ONE SDK for iOS (Objective-C) to mitigate possible security issues.</li> </ul>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/01-Migrate/","title":"Migrate to the Latest SDK Version","text":"<p>In the latest SDK for iOS, we have updated various UI screens presented by the SDK. These pages now incorporate storyboards that require you to import the new AWKit.bundle included in the new SDK DMG. This AWKit.bundle contains the compiled storyboards required for the app to function.</p> <p>We have also integrated with the latest Safari View Controller for various process flows on UI screens. Add SafariServices.Framework so all Workspace ONE UEM screens work without error.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/01-Migrate/#procedure","title":"Procedure","text":"<ol> <li>Replace or import the AWKit.bundle.</li> <li>Replace the older version of AWKit.bundle with the newer version provided in the DMG file if you already import AWKit.bundle into your project bundle resources today.</li> <li>Import AWKit.bundle into your project under Bundle Resources in Xcode Build Phases if you have never imported the AWKit.bundle into your project.</li> <li>Import the SafariServices.Framework into your project.</li> </ol>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/02-Supported-OS-and-Requirements/","title":"Supported OS and Req. for the Workspace ONE SDK for iOS (Objective-C)","text":"<p>The Workspace ONE SDK for iOS (Objective-C) is compatible with the listed operating systems and requires the listed components.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/02-Supported-OS-and-Requirements/#supported-ios-operating-systems","title":"Supported iOS Operating Systems","text":"<p>The Workspace ONE SDK for iOS (Objective-C) supports the use of the Apple operating systems iOS 9.0 or later. Certain features require a newer operating system and these features are noted.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/02-Supported-OS-and-Requirements/#requirements","title":"Requirements","text":"<p>Meet the following requirements before using the Workspace ONE SDK for iOS (Objective-C): - To manage organization groups, get access to the Workspace ONE UEM console v9.5 or later with the appropriate access rights. - Know application development using Xcode (for more information, see https://developer.apple.com/xcode/) and use Xcode v6.0.1+. - To develop the application, get the necessary SDK DMG (AirWatch SDK.dmg) file from Workspace ONE UEM.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/03-Security-Considerations/","title":"Security Considerations for OpenURL in iOS","text":"<p>With changes to OpenURL in iOS 13, update to the latest version of the Workspace ONE SDK for iOS (Objective-C) to mitigate possible security issues.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/03-Security-Considerations/#actions","title":"Actions","text":"<p>If you build apps with the Workspace ONE SDK for iOS (Objective-C) and deploy them to devices that are enrolled with the Workspace ONE Intelligent Hub, consider updating to the latest versions of the Workspace ONE Intelligent Hub for iOS and the Workspace ONE SDK for iOS (Objective-C).</p> <p>You can add the key <code>RestrictCredentialsExchangeWithThirdPartyApplications</code> to the default SDK setting profile assigned to the Workspace ONE Intelligent Hub. If the attack scenarios mentioned in Security Considerations might impact your use cases, consider adding the key. Adding the key affects the user experience of SDK applications. Users must authenticate when they first start every Objective-C SDK app after installation, even if single sign-on is enabled.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/03-Security-Considerations/#openurl-changes","title":"OpenURL Changes","text":"<p>iOS 13 includes a change involving parameters returned during the OpenURL process between applications from different developer accounts. This change directly affects the communication mechanism between the Workspace ONE SDK and Workspace ONE Intelligent Hub or the Workspace ONE Legacy application.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/03-Security-Considerations/#security-considerations","title":"Security Considerations","text":"<p>Workspace ONE SDK for iOS (Objective-C) has a workflow where the Workspace ONE SDK retrieved an authentication token with user credentials from Workspace ONE Intelligent Hub using the iOS OpenURL mechanism for single sign-on purposes. Before the Workspace ONE Intelligent Hub app returned the credentials back to the requesting SDK, Workspace ONE Intelligent Hub validated the bundle identifier of the requesting SDK-integrated app to ensure it was legitimate. By combining this Workspace ONE Intelligent Hub validation mechanism with MDM device restrictions to prevent devices from trusting unmanaged enterprise apps, users were protected against malicious applications pretending to be SDK-integrated apps.</p> <p>iOS 13 no longer provides the bundle identifier of the requesting SDK-integrated app to the Workspace ONE Intelligent Hub (older OS versions still provide the bundle identifier). Not having the bundle identifier restricts the Workspace ONE Intelligent Hub from performing the validation. The lack of this validation creates an avenue for malicious applications to mask themselves as the Workspace ONE SDK for iOS (Objective-C).</p> <p>For example, if an opportunistic attacker makes an iOS user install a malicious app from the App Store, and if the malicious app knows the Workspace ONE SDK's OpenURL protocol, the app can appear legitimate. The malicious app can retrieve the user's login credentials from the Workspace ONE Intelligent Hub app.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/03-Security-Considerations/#security-mitigations","title":"Security Mitigations","text":"<p>To mitigate possible problems, perform one of the listed actions. * Consider updating your Workspace ONE SDK for iOS (Objective-C) apps to use the Workspace ONE SDK for iOS (Swift).   The Workspace ONE SDK for iOS (Swift) does not use the OpenURL mechanism for single sign-on purposes. Instead, the first Workspace ONE SDK for iOS (Swift) app installed on the device requires the user to log in. Subsequent SDK-integrated apps that share the keychain login, do not need manual login after the first app.</p> <ul> <li> <p>If the device is MDM enrolled, disable the menu item in the MDM profile restriction for Allow user to trust unmanaged enterprise apps. Disabling this menu item prevents malicious spoofed applications from being installed and from running on the device.</p> </li> <li> <p>If the device is MDM enrolled and supervised, disable the menu item in the MDM profile restriction for Allow installing public apps. Disabling this menu item prevents malicious public apps that are not permitted by the administrator from being installed on the device.</p> </li> <li> <p>You can add a key, <code>RestrictCredentialsExchangeWithThirdPartyApplications</code>, to the custom settings payload in the default SDK settings profile assigned to the Workspace ONE Intelligent Hub for iOS. Set the value to <code>true</code>. If you do add the key, it can lead to usability degradation, so add it if you see the mentioned security gap as a serious threat. This key sets the Workspace ONE Intelligent Hub to not return the credentials to any requesting SDK-integrated app. This key also sets Workspace ONE SDK for iOS (Objective-C) apps to no longer share the integrated authentication certificate credentials. Each Workspace ONE SDK for iOS (Objective-C) app refetches its own integrated authentication credentials separately. Important: You must format the custom settings payload correctly. You can add keys within the brackets, but do not add any strings outside of the brackets.</p> <pre><code>{\n\"RestrictCredentialsExchangeWithThirdPartyApplications\": true\n}\n</code></pre> </li> </ul>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/56-SDK-App-Payload-Classes/","title":"SDK and Application Payload Classes","text":"<p>This section lists all classes used to represent configuration settings from the SDK or application profiles. You can use them to access a specific setting that determines the behavior of your application.</p> <p>The following lists outline the payloads supported by the VMware Workspace ONE SDK for iOS (Objective-C). * SDK Profile Payloads     * AWAnalyticsPayload \u2013 Represents the analytics group of an SDK profile.     * AWAuthenticationPayload \u2013 Represents the authentication group of an SDK profile.     * AWBrandingPayload \u2013 Represents the branding group of an SDK profile.     * AWCompliancePayload \u2013 Represents the compliance group of an SDK profile.     * AWCustomPayload \u2013 Represents the custom group of an SDK profile.     * AWGeofencePayload \u2013 Represents the geofence group of an SDK profile.     * AWLoggingPayload \u2013 Represents the logging group of an SDK profile.     * AWRestrictionsPayload \u2013 Represents the restrictions group of an SDK profile (this group was formerly known as Access Control in the SDK Profile). * Application Profile Payloads     * AWCertificatePayload \u2013 Represents the credentials group of an application profile.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/57-Integrate-with-Swift-Apps/","title":"Integrate With Swift Applications","text":"<p>Swift is a programming language developed by Apple as an alternative to C-based languages. The language strives to make writing code faster and safer with many features including supporting inferred types, automatically managing memory, and the required initialization of variables before use.</p> <p>For information about the VMware Workspace ONE SDK for iOS (Swift), see VMware Workspace ONE SDK for iOS (Swift).</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/Certificate%20Provisioning/53-Cert-Provisioning/","title":"Certificate Provisioning (Legacy Process)","text":"<p>Provisioning certificates to your app involves three steps.</p> <ul> <li>Configure the certificate authority (CA) and the CA template. Workspace ONE UEM has numerous guides outlining how to configure various certificates. See the applicable guide for information on configuring CAs and CA templates in the Workspace ONE UEM console.</li> <li>Create the app profile in the Workspace ONE UEM console.</li> <li>Assign the app profile to the application in Workspace ONE UEM prior to app deployment.</li> <li>Create the Application Profile</li> </ul> <p>You can create the necessary application profile after you configure the CA and certificate template settings in the Workspace ONE UEM console. This profile is deployed to the app just like an SDK profile. * Retrieve a Certificate From an Application Profile</p> <p>Retrieving certificates requires extra considerations because it involves more than handling a profile. The system stores most profile payloads locally. However, it does not store AWCertificatePayload locally. To retrieve the certificate, you must wait for notification that the system downloaded the certificate.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/Certificate%20Provisioning/54-Create-App-Profile/","title":"Create the Application Profile","text":"<p>You can create the necessary application profile after you configure the CA and certificate template settings in the Workspace ONE UEM console. This profile is deployed to the app just like an SDK profile.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/Certificate%20Provisioning/54-Create-App-Profile/#procedure","title":"Procedure","text":"<ol> <li>Navigate to Groups &amp; Settings &gt; All Settings &gt; Apps &gt; Settings And Policies &gt; Profiles.</li> <li>Select Add Profile and then choose the Application Profile for iOS.</li> <li>Fill out the General information, make sure to give the profile a name, and then choose Credentials.</li> <li>Select Defined Certificate Authority and then choose the correct Certificate Authority and Certificate Template from the choices provided.</li> <li>Select Save.</li> </ol>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/Certificate%20Provisioning/54-Create-App-Profile/#what-to-do-next","title":"What to do next","text":"<p>Assign the application profile to the application during the upload process.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/Certificate%20Provisioning/55-Retrieve-Cert-from-App-Profile/","title":"Retrieve a Certificate From an Application Profile","text":"<p>Retrieving certificates requires extra considerations because it involves more than handling a profile. The system stores most profile payloads locally. However, it does not store <code>AWCertificatePayload</code> locally. To retrieve the certificate, you must wait for notification that the system downloaded the certificate.</p> <p>!!!Important:     For the SDK to check the server for a certificate, you must call the loadCommands method or the notification does not trigger.</p> <p>The code below shows how to retrieve a certificate payload so that your application can consume and use the certificate.</p> <pre><code>Register the notification observer at start up.\n    [[NSNotificationCenter defaultCenter] \n    addObserver:self\n\n        selector:@selector(handleUpdatedProfile:)\n\n            name:AWNotificationCommandManagerInstalledNewProfile\n            object:nil];\n</code></pre> <p>Implement the <code>handleUpdatedProfile</code> that will receive the notifications when a command is processed and can extract the certificate information.</p> <pre><code>- (void)handleUpdatedProfile:(NSNotification \n*)notification\n{\n// Get the profile that just got received in this call; \nit could be an Application Profile, or an SDK Profile.\n\nAWProfile *profile = (AWProfile *)notification.object;\n\n// IMPORTANT: If expecting an application profile with a \ncertificate, you can ONLY obtain the certificate values \nfrom the notification object.\n\n// For security reasons the certificate does not get \nstored locally, like all the other settings in an SDK \nprofile\n\nif (profile.certificatePayload){\n\nAWCertificatePayload *certificatePayload = \nprofile.certificatePayload;\n\nif ([[certificatePayload certificateData] length] &gt; 0 &amp; &amp; \n[[certificatePayload certificatePassword] length] &gt; 0)\n{\n\n    NSString *certificateName = [certificatePayload \n    certificateName]; \n\n    NSData *certificateData = [certificatePayload \n    certificateData]; \n\n    NSString *certificatePassword = [certificatePayload \n    certificatePassword]; \n\n    // TO DO: Use the certificate here... If you don't \n    consume it here, it will not be available later in \n    the AWCommandManager.\n\n    }\n}\n</code></pre>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/Getting%20Started/04-Getting-Started/","title":"Getting Started","text":"<p>Perform the following tasks to prepare to use the VMware Workspace ONE SDK for iOS (Objective-C).</p> <ul> <li> Add Frameworks in Xcode The SDK depends on the following frameworks to function properly. Follow the steps to add the necessary frameworks to your project.</li> <li> Adding the Required Xcode Bundle Resources The SDK depends on the following bundle resources to function properly, so add the necessary bundles to your project.</li> <li> Add the Workspace ONE SDK Frameworks The Workspace ONE SDK frameworks are made available by running the provided AirWatch SDK.dmg file.</li> <li> Using Valid Architectures </li> <li> Register Callback Scheme To receive a callback from the Workspace ONE Intelligent Hub, the application exposes a custom scheme in the info.plist.</li> <li> Miscellaneous Entries for the Info.PLIST File</li> <li> Compile With Xcode 7 If you use Xcode 7 to compile your SDK application, take these steps to ensure that the application functions properly.</li> <li> Initialize the SDK Before you can use the SDK, you must initialize it. The AWController class is the main component responsible for initializing the SDK.</li> <li> SDK and Application Profiles The SDK associates with two types of Workspace ONE UEM profiles. These two types are SDK Profiles and application profiles. You assign both types of profiles to the application from the Workspace ONE UEM console.</li> <li> Implementing the Beacon You can set up the Beacon to send device information to the Workspace ONE UEM console by specifying a time interval. Generic device information such as the device name, OS version, and compromised status is sampled. In addition, the Beacon module is used to start location services by specifying a location mode.</li> <li> Implementing MDM Status The MDM Status module allows an application to check certain properties and the status of some MDM properties for the device that the application lives in.</li> </ul>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/Getting%20Started/05-Add-Frameworks-in-Xcode/","title":"Add Frameworks in Xcode","text":"<p>The SDK depends on the following frameworks to function properly. Follow the steps to add the necessary frameworks to your project.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/Getting%20Started/05-Add-Frameworks-in-Xcode/#procedure","title":"Procedure","text":"<ol> <li>Select the project in the Groups &amp; Files pane in Xcode.</li> <li>Ensure that the proper target is selected on the left side, select the Build Phases tab.</li> <li>Expand the Link Binary With Libraries section.</li> <li>Select the + button at the bottom of the section to add the required frameworks.</li> <li>Select each one of the following frameworks and select Add.<ul> <li>Accelerate.framework</li> <li>AssetsLibrary.framework</li> <li>AudioToolbox.framework</li> <li>AVFoundation.framework</li> <li>CFNetwork.framework</li> <li>CoreData.framework</li> <li>CoreFoundation.framework</li> <li>CoreGraphics.framework</li> <li>CoreLocation.framework</li> <li>CoreMedia.framework</li> <li>CoreMotion.framework</li> <li>CoreTelephony.framework</li> <li>CoreText.framework</li> <li>CoreVideo.framework</li> <li>Foundation.framework</li> <li>ImageIO.framework</li> <li>Libc++.tbd</li> <li>Libsqlite3.tbd</li> <li>Libz.tbd</li> <li>libxml2.tbd</li> <li>LocalAuthentication.framework</li> <li>MediaPlayer.framework</li> <li>MessageUI.framework</li> <li>MobileCoreServices.framework</li> <li>QuartzCore.framework</li> <li>SafariServices.framework</li> <li>Security.framework</li> <li>SystemConfiguration.framework</li> <li>UIKit.framework</li> <li>WebKit.framework</li> </ul> </li> </ol>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/Getting%20Started/06-Adding-Xcode-Bundle-Resources/","title":"Adding the Required Xcode Bundle Resources","text":"<p>The SDK depends on the following bundle resources to function properly, so add the necessary bundles to your project.</p> <p>Find some of these bundles inside the AWSDK.framework file structure.</p> <ul> <li>SDKLocalization.bundle</li> <li>AWKit.bundle Important: Add the AWKit.bundle to your project or the application can crash.</li> </ul>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/Getting%20Started/07-Add-WS1-SDK-Frameworks/","title":"Add the Workspace ONE SDK Frameworks","text":"<p>The Workspace ONE SDK frameworks are made available by running the provided AirWatch SDK.dmg file.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/Getting%20Started/07-Add-WS1-SDK-Frameworks/#procedure","title":"Procedure","text":"<ol> <li>Drag AWSDK.framework into the Frameworks group in the sidebar of Xcode. Make sure to check Copy items into destination group's folder.</li> <li>Ensure the application is linking against the AWSDK.framework.</li> <li>Select the Build Phases tab in the properties of the target.</li> <li>Expand the Link Binary With Libraries section to see if AWSDK.framework is added.</li> <li>If not, select the + button and select AWSDK.framework.</li> <li>Import the umbrella header wherever you use the SDK. Add #import &lt;AWSDK/AWSDKCore.h to the top of the file.</li> <li>Add Linker Flags.    Since the Workspace ONE SDK for iOS (Objective-C) categories, you must pass linker flags to the linker to properly load them.    a. Select the project or workspace in the Groups &amp; Files pane.    b. Select the target for the application.    c. Select the Build Settings tab.    d. Ensure the  -ObjC flag is added in the Other Linker Flags entry.</li> </ol>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/Getting%20Started/08-Using-Valid-Architectures/","title":"Using Valid Architectures","text":"<p>The SDK currently supports the following architectures:    * ARMv7    * ARMv7S    * ARM64 Do not compile the i386 architecture/simulator because the SDK only supports real physical devices.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/Getting%20Started/09-Register-Callback-Scheme/","title":"Register Callback Scheme","text":"<p>To receive a callback from the Workspace ONE Intelligent Hub, the application exposes a custom scheme in the info.plist.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/Getting%20Started/09-Register-Callback-Scheme/#procedure","title":"Procedure","text":"<ol> <li>Navigate to Supporting Files in Xcode.</li> <li>Select the file <code>&lt;YourAppName&gt; &gt; -Info.plist</code>.</li> <li>Navigate to the URL Types section.    a. If it does not exist, add it at the Information Property List root node of the PLIST.</li> <li>Expand the Item 0 entry and add an entry for URL Schemes.</li> <li>Set the next Item 0 under URL Schemes to the desired callback scheme.</li> </ol>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/Getting%20Started/10-Misc-Entries-for-Info.PLIST-file/","title":"Miscellaneous Entries for the Info.PLIST File","text":"<p>* QR Scan - Include NSCameraUsageDescription in the application info.plist file to enable the SDK to scan QR codes with the device camera.    Provide a description that devices prompt users to allow the application to enable this feature.</p> <ul> <li>FaceID - Include NSFaceIDUsageDescription in the application info.plist file to enable the SDK to use FaceID.    Provide a description that devices prompt users to allow the application to enable this feature. Consider controlling the message users read. If you do not include a description, the iOS system prompts users with native messages that might not align with the capabilities of the application.</li> </ul>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/Getting%20Started/11-Compile-With-XCode-7/","title":"Compile With Xcode 7","text":"<p>If you use Xcode 7 to compile your SDK application, take these steps to ensure that the application functions properly.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/Getting%20Started/11-Compile-With-XCode-7/#procedure","title":"Procedure","text":"<ol> <li>Add an array key named LSApplicationQueriesSchemes to thinfo.plist.</li> <li>Add the bundle identifier of the Workspace ONE Intelligent Hub or AWSSOBroker2 application to the array. The schemes for the Workspace ONE Intelligent Hub and AWSSOBroker2 are as follows:</li> <li>airwatch</li> <li>AWSSOBroker2</li> <li>Navigate to your Xcode build settings and set Enable Bitcode to No.</li> </ol>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/Getting%20Started/12-Initialize-the-SDK/","title":"Initialize the SDK","text":"<p>Before you can use the SDK, you must initialize it. The AWController class is the main component responsible for initializing the SDK.</p> <p>In addition, it automatically handles and implements certain core SDK functionalities to improve ease of integration for developers, such as the following functions: * Passcode mode * Single sign-on (SSO) * SSID filtering * Proxy and tunneling</p> <p>Calling start in AWController automatically sets up the proxy to redirect traffic. However, you must wait until the initial CheckDoneWithError callback is received before any network traffic redirects. Wait until the SDK finishes setting up before making any network calls through your proxy.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/Getting%20Started/12-Initialize-the-SDK/#procedure","title":"Procedure","text":"<ol> <li>Import the <code>&lt;AWSDK/AWController.h&gt;</code> header file. Associate the AWControllerDelegate to your app delegate. <code>@interface AppDelegate : UIResponder &lt;UIApplicationDelegate, AWSDKDelegate&gt;</code> </li> <li>Inside the app delegate, implement the following code: <code>- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions{// Configure the Controller by:AWController *controller = [AWController clientInstance];// 1) defining the callback scheme so the app can get called back,controller.callbackScheme = @\"UrlScheme\";// 2) set the delegate to know when the initialization has been completed.controller.delegate = self; return YES;}</code></li> <li>Start the SDK initialization inside the applicationDidBecomeActive delegate method. <code>- (void)applicationDidBecomeActive:(UIApplication *)application {[[AWController clientInstance] start];}</code> Do not call the start method in didFinishLaunchingWithOptions because the SDK may display modal view controllers that rely on a reference view controller. Sometimes, when you use a storyboard, the view controllers have not yet been generated at the time <code>didFinishLaunchingWIthOptions</code> is called. To avoid any unstable behavior with the app, call <code>[[AWController clientInstance] start]</code> inside applicationDidBecomeActive instead.  </li> <li>Implement the code to handle the callback from the Workspace ONE Intelligent Hub or Container app. <code>- (BOOL)application:(UIApplication *)application openURL:(NSURL *)url sourceApplication:(NSString *)sourceApplication annotation:(id)annotation {return [[AWController clientInstance] handleOpenURL:url fromApplication:sourceApplication];}</code></li> <li>Implement the remaining delegate methods: <code>- (void)initialCheckDoneWithError: (NSError *)error</code> This delegate method is invoked when the SDK initializes. This method is ALWAYS called after the SDK passes through the initialization flow. If the initialization is successful, then the error object is nil. If the initialization fails, then the error object contains the reason code for why it fails. <code>- (void)receivedProfiles:(NSArray *)profiles</code> This delegate method is invoked when settings of an SDK profile assigned to this application update on the Workspace ONE UEM console. It notifies the app that new settings are available. The profiles array contains the list of AWProfile objects that contain configuration payloads. <code>- (void)unlock</code> This delegate method is invoked immediately after you initiate a new SSO session by inputting the correct password/passcode. <code>- (void)lock</code> This method is invoked when the SSO session has expired and the SDK passcode input view is displayed. It is intended for use as an indicator of when a user no longer has to access the app. This lock allows the developer to implement the necessary logic to take the proper action for when the app is locked. <code>- (void)wipe</code> This method is invoked when the SDK identifies that the device has been wiped or unenrolled from the Workspace ONE UEM console. This method is also invoked when a user reaches the limit of failed passcode attempts defined in the SDK profile. Note: TheWorkspace ONE SDK for iOS (Objective-C) only invokes this method, and it takes no other actions. The application developer must implement the necessary local app wipe logic. <code>- (void)stopNetworkActivity</code> This method is invoked when the device connects to an SSID that is blocked in the SDK profile. <code>- (void)resumeNetworkActivity</code> This method is invoked when the device connections to a valid SSID after network activity is already stopped.</li> </ol>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/Getting%20Started/12-Initialize-the-SDK/#what-to-do-next","title":"What to do next","text":"<p>For iOS 9+, ensure that the Device Services server meets Apple's security requirements. The SDK must communicate with the Device Services server to run. The system might block communication if the server does not comply with requirements. Search the Apple Developer site for current application transport security requirements: https://developer.apple.com/library/prerelease/ios/releasenotes/General/WhatsNewIniOS/Articles/iOS9.html#//apple_ref/doc/uid/TP40016198-SW1.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/Getting%20Started/13-SDK-and-Application-Profiles/","title":"SDK and Application Profiles","text":"<p>The SDK associates with two types of Workspace ONE UEM profiles. These two types are SDK Profiles and application profiles. You assign both types of profiles to the application from the Workspace ONE UEM console.</p> <p>These profiles are different from Workspace ONE UEM Device Profiles.    * SDK Profiles \u2013 Used to deliver security policies and settings down to the SDK embedded application. Upon receiving an SDK profile, the SDK automatically stores the most recent profile settings in memory.    * Application Profiles \u2013 Used to deliver certificates from an upload or a certificate authority down to an application.</p> <p>Consider using the challenge handler and integrated authentication instead of application profiles.</p> <p>Polling for Commands and Profile UpdatesThe SDK checks for new commands from Workspace ONE UEM when the app is active in the background. Examples of commands are send logs, update SDK profile, and lock application. However, there may be times when your app wants to check for new commands while active in the foreground. You can do so using the AWCommandManager class with the loadCommands method.</p> <pre><code>// Receive commands.[[AWCommandManager sharedManager] loadCommands];\n</code></pre>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/Getting%20Started/14-Implementing-the-Beacon/","title":"Implementing the Beacon","text":"<p>You can set up the Beacon to send device information to the Workspace ONE UEM console by specifying a time interval. Generic device information such as the device name, OS version, and compromised status is sampled. In addition, the Beacon module is used to start location services by specifying a location mode.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/Getting%20Started/14-Implementing-the-Beacon/#configuration-of-location","title":"Configuration of Location","text":"<p>To take advantage of the location functionality of the Beacon, the host application registers itself as needing location updates in the background. In the info.plist file, set the UIBackgroundModes array with a value configured as location. For information on the location functionality of the Beacon, refer to the Declaring Your App's Supported Background Tasks section in the App Programming Guide for iOS at https://developer.apple.com/library/ios/documentation/iPhone/Conceptual/iPhoneOSProgrammingGuide/BackgroundExecution/BackgroundExecution.html#//apple_ref/doc/uid/TP40007072-CH4-SW1.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/Getting%20Started/14-Implementing-the-Beacon/#sample-code","title":"Sample Code","text":"<pre><code>  // Initialize Beacon.   Modify the values as needed. \nAWBeacon *_beacon = [[AWBeacon alloc] initWithAPNSToken:nil\n  transmitInterval:300\n    locationGroup:nil\n      locationMode:AWLocationModeDisabled \n        distance:kCLDistanceFilterNone];\n\n  // Starts the beacon to send periodically a ping to the server.\n  [_beacon start];\n\n  // Force to send a ping right now.\n  [_beacon send];\n</code></pre> <ul> <li>initWithAPNSToken \u2013 Determines if your application uses APNS tokens and sends tokens to the Workspace ONE UEM console. You can send this value as nil.</li> <li>transmitInterval \u2013 Represents the frequency in which the Beacon checks in with the Workspace ONE UEM console (in seconds).</li> <li>locationGroup \u2013 Corresponds to the organization group. If your application uses authentication, it prompts users to log in. You can send this value as nil.</li> <li> <p>locationMode \u2013 Uses location services for the Beacon and includes the coordinates when reporting back to the server. This method also sets up the Beacon to run in the background.</p> <ul> <li>AWLocationModeDisabled \u2013 Specifies no location mode.</li> <li>AWLocationModeStandard \u2013 Captures data using the GPS (on only GPS-enabled devices), which can consume battery power when enabled.</li> </ul> <p>Note: For GPS sampling to function, ensure your application supports location tracking. For more information, see Apple's documentation at https://developer.apple.com/documentation/corelocation. * AWLocationModeSignificant \u2013 Uses the significant location services from iOS and provides updates only when the device location changes at a significant level. Consider using this mode if you want to use location services.   * distance \u2013 Determines if you are using the standard location servers and sets the threshold, in meters, of when to generate a location service notification.</p> </li> </ul>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/Getting%20Started/14-Implementing-the-Beacon/#starting-and-stopping-the-beacon","title":"Starting and Stopping the Beacon","text":"<p>Once you create an instance of the Beacon with the appropriate configuration settings, you can start it or stop it at any time. Start the Beacon after initializing the SDK, and leave it running permanently.</p> <pre><code>[_beacon start];  // Starts sending information to the AW Console \n[_beacon stop];  // Stops sending information to the AW Console\n</code></pre>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/Getting%20Started/14-Implementing-the-Beacon/#manually-sending-a-beacon-message","title":"Manually Sending a Beacon Message","text":"<p>Instead of waiting for the next interval to send a Beacon to the server, you can explicitly invoke the send command and a packet will be sent to the server.</p> <pre><code>// Force to send a ping right now.[_beacon send];\n</code></pre>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/Getting%20Started/15-Implementing-MDM-Status/","title":"Implementing MDM Status","text":"<p>The MDM Status module allows an application to check certain properties and the status of some MDM properties for the device that the application lives in.</p> <p>This information is useful because you cannot obtain it directly from the SDK. You can use the data to improve security and usability at the application level. For example, a developer may want to check that another application is installed on the same device before exposing or hiding certain features in the application.</p> <ul> <li>Device Status \u2013 Indicates the following statuses:<ul> <li>Managed Status \u2013 Indicates if the device is enrolled in the onsole or not.</li> <li>Compliance Status \u2013 Indicates if the device is conforming to all the compliance rules.</li> </ul> </li> <li>Requery Method \u2013 Queries the console to send to the containing device a query command to collect certain types of device information.</li> <li>Compliance Policies \u2013 Retrieves a list of policies and lists details about each policy.</li> <li>Application List \u2013 Retrieves the list of applications that are available on the same device.</li> </ul> <p>See the sample application for code examples.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/19-MAM-Functionality/","title":"MAM Functionality with VMware Workspace ONE SDK","text":"<p>The Settings and Policies in VMware Workspace ONE\u00ae UEM powered by AirWatch has settings that control security, application behaviors, and the data retrieval of specific applications. The settings are also called SDK settings because they run on the Workspace ONE SDK framework.</p> <p>You can apply these SDK features to applications built with the Workspace ONE SDK, to supported Workspace ONE UEM applications, and to applications wrapped by the VMware AirWatch App Wrapping engine. Same features can be applied in both the places as the Workspace ONE SDK framework processes the functionality.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/19-MAM-Functionality/#types-of-options-for-sdk-settings","title":"Types of Options for SDK Settings","text":"<p>Workspace ONE UEM has two types of the SDK settings, default and custom. To choose the type of SDK setting, determine the scope of deployment.</p> <ul> <li>Default settings work well across organization groups, applying to large numbers of devices.</li> </ul> <p>Find the default settings in Groups &amp; Settings &gt; All Settings &gt; Apps &gt; Settings and Policies and then select Security Policies, Settings, or SDK App Compliance. You can apply these options across all the Workspace ONE UEM applications in an organization group. Shared options are easier to manage and configure because they are in a single location. View the matrices for information on which default settings apply to specific Workspace ONE UEM applications or the Workspace ONE SDK and app wrapping.</p> <ul> <li>Custom settings work with individual devices or for small numbers of devices with applications that require special mobile application management (MAM) features.</li> </ul> <p>Find the custom settings in Groups &amp; Settings &gt; All Settings &gt; Apps &gt; Settings and Policies &gt; Profiles. Custom settings for profiles offer granular control for specific applications and the ability to override default settings. However, they also require separate input and maintenance.</p> <ul> <li>Assign the Default or Custom Profile</li> </ul> <p>To apply Workspace ONE UEM features built with the VMware Workspace ONE SDK, you must apply the applicable default or custom profile to an application. * Authentication</p> <p>The VMware Workspace ONE SDK for iOS (Objective-C) provides helper classes to authenticate credentials against Workspace ONE UEM. * Offline Access</p> <p>The VMware Workspace ONE SDK for iOS (Objective-C) provides a way to allow access to the application when the device is offline and not communicating with the mobile network. * Detect a Change of Users in Shared Device Mode</p> <p>The VMware Workspace ONE SDK for iOS (Objective-C) detects a user change on a shared device during initialization (and on background-foreground if it's already initialized). Ensure your application implements the needed delegate method and performs an application data wipe appropriate for the previous user. * Compliance or Compromised Protection</p> <p>You can use a method in your SDK-built app to check the compromised status of devices. This method works whether the device is offline or online. * Dynamic Compromise Detection Requirements</p> <p>Dynamic compromise detection for iOS sets SDK-built apps to securely update the compromise detection algorithm over-the-air. Apps that use this feature do not need to update or re-release after compromise detection rule updates. To configure this feature, update to the supported SDK version and ensure that devices can access specific URLs. * Activate App Tunneling</p> <p>The purpose of app tunneling is to redirect the traffic in your application through a specific gateway. To access internal resources in your organization, use the VMware Tunnel as the proxy. * Content Filtering</p> <p>The Forcepoint content filtering component in the SDK is used for infrastructures that use a Forcepoint proxy or content filter. * Geofencing</p> <p>Geofence settings are configured within an SDK profile. To do so, create an SDK profile or edit an existing one. * Restrictions, DLP</p> <p>In this section of the SDK profile, you can identify what type of restriction rules you implement in your application. * Branding</p> <p>Branding can change the look of the application with minimal development, and it can delegate several user interface properties to the configuration settings in the SDK profiles. * Logging</p> <p>The Logging module of the VMware Workspace ONE SDK allows developers to instrument their applications to discover bugs or any issues when the application is deployed to users. * Analytics</p> <p>Analytics track the important events that occur within your application. The system uses these metrics to analyze use patterns and to account for how people use your app. * Custom Settings</p> <p>The VMware Workspace ONE SDK allows you to define your own custom settings for your application using an SDK Profile. You can paste raw text in this section, and the SDK makes this content available inside the application using the AWCustomPayload object.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/20-Assign-Profile/","title":"Assign the Default or Custom Profile","text":"<p>To apply Workspace ONE UEM features built with the VMware Workspace ONE SDK, you must apply the applicable default or custom profile to an application.</p> <p>Apply the profile when you upload or edit the application to the Workspace ONE UEM console. When you make changes to the default or custom profile, Workspace ONE UEM applies these edits when you select Save.</p> <p>Changes can take a few minutes to push to end-user devices. Users can close and restart Workspace ONE UEM applications to receive updated settings. Make other configurations and then save the application and create assignments for its deployment.</p> <p>Procedure 1. Navigate to Apps &amp; Books &gt; Applications &gt; Native &gt; Internal or Public. 2. Add or edit an application. 3. Select a profile on the SDK tab.</p> Setting Description Default Settings Profile * For Android applications, select the Android Default Settings @  . * For Apple iOS applications, select the iOS Default Settings @  . Custom Settings Profiles For Android and Apple iOS applications, select the applicable legacy or custom profile. 4. Make other configurations and then save the application and create assignments for its deployment."},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/27-Detect-Change-of-Users/","title":"Detect a Change of Users in Shared Device Mode","text":"<p>The VMware Workspace ONE SDK for iOS (Objective-C) detects a user change on a shared device during initialization (and on background-foreground if it's already initialized). Ensure your application implements the needed delegate method and performs an application data wipe appropriate for the previous user.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/27-Detect-Change-of-Users/#behavior-when-user-changes","title":"Behavior When User Changes","text":"<p>When a user change happens, the system calls the userChanged delegate method in AWController. The SDK prompts the user about the user change. After the user acknowledges the prompt, the SDK initializes as a new user.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/27-Detect-Change-of-Users/#detect-a-user-change-and-offline-access","title":"Detect a User Change and Offline Access","text":"<p>The SDK needs to confirm a user change when the device is offline and comes back online. The SDK behavior depends on if offline access is enabled or disabled. * Offline Access Enabled</p> <p>The SDK must prompt the user to flip to the anchor application and retrieve data on the last users for confirmation.</p> <p>If the user did not change, then the anchor application flips back to the SDK application and continues with the existing user. If the user changed, the SDK wipes previous user data and sends the userChanged delegate method call back to your application.</p> <ul> <li>Offline Access Disabled</li> </ul> <p>When the user tries to access the application and the user is offline, then the SDK blocks access. The SDK tells the user they must be online to access the application.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/27-Detect-Change-of-Users/#code-user-change-detection-when-application-is-offline","title":"Code User Change Detection When Application is Offline","text":"<p>In your application project, white list a new scheme called awcontextid.</p> <ol> <li> <p>Open the info.plist file for your application.</p> </li> <li> <p>Add a new scheme awcontextid under the LSApplicationQueriesSchemes key.</p> </li> </ol>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/27-Offline-Access/","title":"Offline Access","text":"<p>The VMware Workspace ONE SDK for iOS (Objective-C) provides a way to allow access to the application when the device is offline and not communicating with the mobile network.</p> <p>It also allows access to Workspace ONE UEM applications that use the SSO feature while the device is offline.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/27-Offline-Access/#offline-behavior","title":"Offline Behavior","text":"<p>The SDK automatically parses the SDK profile and honors the offline access policy once AWController is started. If you enable offline access and an end-user exceeds the time allowed offline, then the SDK automatically presents a blocker view to prevent access into the application. The system calls the AWSDKDelegate\u2019s lock method so your application can act locally.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/28-Compliance-or-Compromised-Protection/","title":"Compliance or Compromised Protection","text":"<p>You can use a method in your SDK-built app to check the compromised status of devices. This method works whether the device is offline or online.</p> <p>Code this method to work after initialization. <pre><code>    func initialCheckDoneWithError(_ error: Error!) {\n        guard error != nil else {\n            return\n        }\n\n        let status = AWController.clientInstance()?.jailBrokenStatus()\n        if status == AWDeviceJailBroken {\n            print(\"Device is jailbroken. Take necessary actions\")\n        }\n    }\n</code></pre></p> <ul> <li>The method can return one of three statuses.</li> <li><code>AWDeviceJailBroken</code>: The device is identified as compromised.</li> <li><code>AWDeviceNotJailBroken</code>: The device is not identified as compromised.</li> <li><code>AWJailBrokenStatusNotAvailable</code>: The status is not available because the SDK initialization failed or the SDK is in the process of being initialized.</li> </ul> <p>Note: The SDK refreshes the jailbroken status every time the app becomes active. If the status is queried during a refresh, the app returns <code>AWJailBrokenStatusNotAvailable</code>.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/29-Dynamic-Compromised-Requirements/","title":"Dynamic Compromise Detection Requirements","text":"<p>Dynamic compromise detection for iOS sets SDK-built apps to securely update the compromise detection algorithm over-the-air. Apps that use this feature do not need to update or re-release after compromise detection rule updates. To configure this feature, update to the supported SDK version and ensure that devices can access specific URLs.</p> <p>To use dynamic compromise detection, update the SDK version and ensure that devices can access specific URLs. * The SDK-built app must consume Workspace ONE SDK for iOS (Objective-C) v5.9.9. * To receive the latest compromise detection rules, ensure that devices can connect to the listed URLs.   * api.na1.region.data.vmwservices.com   * discovery.awmdm.com   * signing.awmdm.com * If devices cannot access these URLs, they still get compromise detection but rules only update when the SDK-built app consumes the latest SDK. This lapse in rule updates might result in false positives.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/32-Content-Filtering/","title":"Content Filtering","text":"<p>The Forcepoint content filtering component in the SDK is used for infrastructures that use a Forcepoint proxy or content filter.</p> <p>No code is needed for implementing this functionality other than calling start in AWController with a proper content filtering configuration defined in the SDK profile.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/33-Geofencing/","title":"Geofencing","text":"<p>Geofence settings are configured within an SDK profile. To do so, create an SDK profile or edit an existing one.</p> <p>A tab labeled Geofencing is visible on the left side of the profile editor. After you select the Enabled check box, enter settings to customize a geofence. A profile containing the geofence settings are obtained through an install profile command.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/52-Custom-Settings/","title":"Custom Settings","text":"<p>The VMware Workspace ONE SDK allows you to define your own custom settings for your application using an SDK Profile. You can paste raw text in this section, and the SDK makes this content available inside the application using the AWCustomPayload object.</p> <p>You can define an XML, JSON, or key-value pairs for your settings and parse the raw text in the application once it is received. However, you can use other text formats like CSV or plain text.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/52-Custom-Settings/#implementation-in-xcode","title":"Implementation in Xcode","text":"<p>The sample shows how to retrieve custom settings from the local cached settings.</p> <pre><code>      // Get an instance of the Command Manager\n      AWCommandManager *commandManager = [AWCommandManager sharedManager];\n      // Get a pointer to the SDK Profile stored locally.\n      AWProfile *profile = [commandManager sdkProfile];\n      // profile may be nil if an AWProfile has not been received from the console\n      if (profile == nil)\n      {\n      NSLog(@\"There is no SDK Profile currently installed\");\n      } else\n      {\n      AWCustomPayload *customPayload = [profile customPayload];\n      if (customPayload != nil)\n      {\n      NSString *customSettings = [customPayload settings];\n      // Do custom processing on your settings.\n      NSLog(@\"%@\", customSettings);\n      }\n      }\n</code></pre>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Activate%20App%20Tunneling/30-Activate-App-Tunnel/","title":"Activate App Tunnel","text":"<p>The purpose of app tunneling is to redirect the traffic in your application through a specific gateway. To access internal resources in your organization, use the VMware Tunnel as the proxy.</p> <p>You do not need extra code to use the app tunnel. You only need the code you added when you initialized the SDK initialization. For more information, see Initialize the SDK.</p> <p>To activate app tunneling, make sure that this app has an SDK profile assigned to it in the Workspace ONE UEM console and that the profile has App Tunneling enabled with a proper proxy configuration. When you call start in AWController, it reads the SDK profile assigned to your application. If needed, it also starts the traffic redirection service for the application.</p> <p>After you receive the <code>initialCheckDoneWithError</code> callback from the <code>AWSDKDelegate</code>, check to see if the error object is nil or not.</p> <ul> <li>Known Limitations and Other Considerations</li> </ul> <p>Due to platform and other technical limitations, only network traffic made from certain network classes can tunnel. Consider the purpose of the listed classes and review their known limitations.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Activate%20App%20Tunneling/31-Known-Limitations/","title":"Known Limitations and Other Considerations","text":"<p>Due to platform and other technical limitations, only network traffic made from certain network classes can tunnel. Consider the purpose of the listed classes and review their known limitations.</p> <ul> <li>NSURLConnection \u2013 Calls made with NSURLConnection tunnel. There is one exception to this behavior. If calls are made synchronously on the main thread, they do not tunnel.</li> <li>NSURLSession \u2013 Calls made using NSURLSession tunnel only on iOS 8+ devices and depending on the configuration used. Default and ephemeral configuration types tunnel. However, background configuration types do not tunnel.</li> <li>CFNetwork \u2013 Most calls made using CFNetwork tunnel. However, CFSocketStream do not tunnel.</li> <li>URLs that contain .local \u2013 Requests with URLs containing .local do not tunnel. Various Apple services on the device use this .local string pattern. The SDK does not tunnel these requests through the VMware Tunnel to avoid interfering with these services.</li> <li>WKWebView - Requests made with WKWebView do not tunnel so use UIWebView.</li> </ul>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Analytics/47-Analytics/","title":"Analytics","text":"<p>Analytics track the important events that occur within your application. The system uses these metrics to analyze use patterns and to account for how people use your app.</p> <p>Analytic Types The Workspace ONE SDK for iOS (Objective-C) offers the several types of analytics.</p> <ul> <li>Event Analytics \u2013 Records and reports information about events specific to your organization that you code into the application.</li> <li> <p>Data Usage Analytics \u2013 Records and reports information about network traffic to track telecom statistics.</p> </li> <li> <p>Implement the DataSampler The DataSampler module (formerly known as Interrogator) samples detailed device data and reports it back to the Workspace ONE UEM console.</p> </li> <li>Develop Event Analytics with the DataSampler The event analytics function requires enabling analytics in the Workspace ONE UEM console and setting up the DataSampler module to report the analytics.</li> <li>Enable Data Tracking in Your SDK Application Enable the data tracking module by embedding a PLIST into your application project.</li> <li>Developing Data Usage Analytics The VMware Workspace ONE SDK for iOS (Objective-C) allows your application to monitor the amount of network traffic used specifically by your application. It also reports network traffic used to the Workspace ONE UEM console for telecom tracking purposes. The SDK hooks into the common iOS networking classes to monitor the amount of data transferring in an application.</li> </ul>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Analytics/48-Implement-DataStreamer/","title":"Implement the DataSampler","text":"<p>The DataSampler module (formerly known as Interrogator) samples detailed device data and reports it back to the Workspace ONE UEM console.</p> <p>Device details such as analytics, call logs, GPS location, and network adapters are all sampled with the DataSampler.</p> <p>Note</p> <p>For GPS sampling to function, ensure your application supports location tracking. For more information, see Apple's documentation at https://developer.apple.com/documentation/corelocation.</p> <p>The DataSampler samples and transmits on two different time intervals. Device samples remain on to the disk and the system removes them after transmitted. This process allows the developer to sample statistics multiple times before sending them to Workspace ONE UEM. Samples stored on the disk are useful when a device does not have network connectivity. AWDataSampler is a singleton object. There can only be one DataSampler for each process.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Analytics/48-Implement-DataStreamer/#configuration","title":"Configuration","text":"<p>These parameters are required to set up a DataSampler. * sampleModules \u2013 Names the bit mask whose flags specify which modules to use. * defaultSampleInterval \u2013 Specifies the time in seconds between DataSampler samples for all modules by default. * defaultTransmitInterval \u2013 Specifies the time in seconds between DataSampler transmissions for all modules by default. * traceLevel \u2013 Determines the error and information logging level of the DataSampler module when it is running.</p> <pre><code>[[AWAnalytics mAnalytics] setEnabled:YES];// Initialize DataSampler.   Modify the values in the initializationAWDataSamplerConfiguration *config = [[AWDataSamplerConfiguration alloc] initWithSampleModules:(AWDataSamplerModuleAnalytics | AWDataSamplerModuleGPS) defaultSampleInterval:3600defaultTransmitInterval:14400traceLevel:Error];//This bit mask will enable analytics and GPS sampling  // Configure Data Sampler[[AWDataSampler mDataSamplerModule] setConfig:config]; // Start the Data Sampler Service.NSError *error;[[AWDataSampler mDataSamplerModule] startUp:&amp;error];\n</code></pre>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Analytics/48-Implement-DataStreamer/#modules-available-for-sampling","title":"Modules Available for Sampling","text":"<p>These modules are available for sampling in the DataSampler. * AWDataSamplerModuleSystem * AWDataSamplerModuleAnalytics * AWDataSamplerModuleGPS * AWDataSamplerModuleNetworkData * AWDataSamplerModuleNetworkAdapter * AWDataSamplerModuleWLAN2Sample</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Analytics/48-Implement-DataStreamer/#gather-telecom-data","title":"Gather Telecom Data","text":"<p>Disable the AWDataSamplerModuleNetworkData mask if you gather telecom data using the AirWatch Agent. If you enable this mask for the SDK, then you receive duplicate data from the Agent and from the SDK.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Analytics/48-Implement-DataStreamer/#set-do-not-disturb","title":"Set Do Not Disturb","text":"<p>You can use the SDK to set the do-not-disturb (DND) status on the Workspace ONE UEM server. You must enable the DND policy in the Workspace ONE UEM console. You can find the policy at Groups &amp; Settings &gt; All Settings &gt; Devices &amp; Users &gt; General &gt; Privacy &gt; DO NOT DISTURB section.</p> <p>The two relevant methods are fetchDeviceDNDStatus and setDeviceDNDStatus found in the AWDeviceDNDStatus object. The example illustrates how to implement a toggle button for DND.</p> <pre><code>[AWDeviceDNDStatus fetchDeviceDNDStatus:^(BOOL responseStatus, BOOL dndStatus, NSDate *dndTime, NSError *error){if(dndStatus){[AWDeviceDNDStatus setDeviceDNDStatus:NO completionBlock:^(BOOL responseStatus, BOOL dndStatus, NSDate *dndTime, NSError *error) {NSLog(@\"DND Disabled\");}];}else{[AWDeviceDNDStatus setDeviceDNDStatus:YES completionBlock:^(BOOL responseStatus, BOOL dndStatus, NSDate *dndTime, NSError *error) {NSLog(@\"DND Enabled\");}];}}];\n</code></pre>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Analytics/49-Develop-Event-Analytics/","title":"Develop Event Analytics with the DataSampler","text":"<p>The event analytics function requires enabling analytics in the Workspace ONE UEM console and setting up the DataSampler module to report the analytics.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Analytics/49-Develop-Event-Analytics/#procedure","title":"Procedure","text":"<ol> <li>Code the events into your SDK application.</li> <li>Set up the DataSampler module and configure it to report analytics.</li> <li>Enable analytics in the Workspace ONE UEM console. Use this option to turn analytics on and off so that you do not use excessive bandwidth when you do not need data collected. You must perform both of these tasks or the application does not collect data and it does not transmit the data to the Workspace ONE UEM console.</li> <li>Navigate to Groups &amp; Settings &gt; All Settings &gt; Settings &amp; Policies &gt; Settings &gt; Analytics.</li> <li>Enable the feature.</li> </ol>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Analytics/50-Enable-Data-Tracking/","title":"Enable Data Tracking in Your SDK Application","text":"<p>Enable the data tracking module by embedding a PLIST into your application project.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Analytics/50-Enable-Data-Tracking/#procedure","title":"Procedure","text":"<ol> <li>Create a PLIST named AWSDKDefaultSettings.plist, add it to your application project, and copy it to your bundle resources.</li> <li>Define the AWDataUsageEnabled boolean flag in the PLIST.</li> <li>Define the AWDataUsageConfiguration dictionary with SyncInterval and Network in the PLIST.</li> </ol>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Analytics/51-Developing-Data-Usage-Analytics/","title":"Developing Data Usage Analytics","text":"<p>The VMware Workspace ONE SDK for iOS (Objective-C) allows your application to monitor the amount of network traffic used specifically by your application. It also reports network traffic used to the Workspace ONE UEM console for telecom tracking purposes. The SDK hooks into the common iOS networking classes to monitor the amount of data transferring in an application.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Analytics/51-Developing-Data-Usage-Analytics/#awsdkdefaultsettingsplist","title":"AWSDKDefaultSettings.plist","text":"<p>The following keys are in the PLIST.</p> <ul> <li>AWDataUsageConfiguration</li> <li>SyncInterval \u2013 Interval which defines how often the samples of data transmit to the Workspace ONE UEM server.</li> <li>kSyncOnResume</li> <li> <p>kSyncPerDayBasis</p> <p>If data use tracking is enabled but SyncInterval is not defined, this key is the default value.</p> </li> <li> <p>kSyncEveryOneHour</p> </li> <li>kSyncEveryTwoHours</li> <li>kSyncEveryFourHours</li> <li>kSyncEveryEightHours</li> <li>Network \u2013 Type of data to collect.</li> <li> <p>kNetworkMonitorWWAN \u2013 Track only cellular data.</p> <p>Default if network is not defined and data tracking is enabled.</p> </li> <li> <p>kNetworkMonitorWIFI \u2013 Track only WIFI data.</p> </li> <li>kNetworkMonitorBoth \u2013 Track both WIFI and cellular data.</li> <li>AWDataUsageEnabled \u2013 Enable tracking.</li> </ul>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Analytics/51-Developing-Data-Usage-Analytics/#transmit-to-the-workspace-one-uem-server","title":"Transmit to the Workspace ONE UEM Server","text":"<p>No additional code is required for transmitting data usage analytics to the Workspace ONE UEM server. The SDK checks on every app launch if the interval for transmitting to Workspace ONE UEM has been reached and handles the transmission accordingly.</p> <p>Event analytics requires implementation of the DataSampler class to transmit.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Analytics/51-Developing-Data-Usage-Analytics/#supported-networking-classes","title":"Supported Networking Classes","text":"<p>SDK data usage tracking is supported for the listed iOS network classes. * NSURLSession</p> <pre><code>With the exception that traffic made using dataTaskWithRequest and dataTaskWithURL is not monitored on iOS 7 devices.\n</code></pre> <ul> <li>NSURLConnection</li> <li>AVPlayer</li> </ul>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Authentication/21-Authentication/","title":"Authentication","text":"<p>The VMware Workspace ONE SDK for iOS (Objective-C) provides helper classes to authenticate credentials against Workspace ONE UEM.</p> <p>An application can limit its access to users by integrating user authentication. Users authenticate to the Workspace ONE UEM console, whether it is a basic enrollment user or an Active Directory account. Authentication allows your application to follow enforced corporate security policies.</p> <p>Configure the type of authentication the SDK profile uses to communicate with the application.</p> <ul> <li>Single Sign-On and the VMware Workspace ONE SDK for iOS (Objective-C)</li> </ul> <p>To use single sign-on (SSO), an SDK-enabled app must interact with the Workspace ONE Intelligent Hub for handling authentication across multiple apps. After initialization, the app can establish an SSO session with the Workspace ONE Intelligent Hub. * Active Directory Password Changes</p> <p>If an Active Directory (AD) password changes and becomes out of sync with the object account of the SDK, use an API to update the SDK credentials. * Authentication Type</p> <p>Authentication Type controls how applications that use the SDK framework to use authenticate to resources. Configure it to work with the SDK default setting for Single Sign-On (SSO) or on its own. * SSO Session and the Workspace ONE Intelligent Hub</p> <p>A single sign-on (SSO) session establishes when a user authenticates with an application participating in in SSO. The session is active until the it reaches the Authentication Timeout value or until the user manually locks the application. Control this behavior with the Workspace ONE Intelligent Hub and the SDK profile. * Challenge Handler and Integrated Authentication</p> <p>On the Security Policies page, you can set Integrated Authentication to Enabled to allow the SSO credentials or a certificate to be passed on and used for authenticating into Web sites, such as content repositories (SharePoint) or wikis.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Authentication/22-SSO/","title":"Single Sign-On and the VMware Workspace ONE SDK for iOS (Objective-C)","text":"<p>To use single sign-on (SSO), an SDK-enabled app must interact with the Workspace ONE Intelligent Hub for handling authentication across multiple apps. After initialization, the app can establish an SSO session with the Workspace ONE Intelligent Hub.</p> <p>It can delegate the handling of user authentication and SSO management to the Workspace ONE Intelligent Hub or Container. After a session is established in one app, all the other apps can share the session. Applications do not require authentication or passcodes due to this sharing behavior.</p> <p>The SSO functionality can also allow the application access to the Workspace ONE UEM enrollment credentials for that device if necessary. When the SSO session expires, access to any SSO app requires the user to enter a passcode (depending on the authentication security policies set) and reinitialize the SSO session. The default settings or SDK profile also defines the maximum number of failed attempts. If the user exceeds this number, the session expires and the wipe delegate method invokes in the associated applications to signal the developer to remove local app data.</p> <p>To implement the SDK, you must implement the code to initialize the SDK using AWController and calling Start from the clientInstance. See the topic Initialize the SDK for more information on initialization. Also, implement the lock, unlock, and wipe methods with the other delegate methods of AWSDKDelegate inside your app delegate.</p> <p>After you upload the SDK application to the console and assign the a custom or default profile with SSO enabled, the SDK handles communication with the Workspace ONE Intelligent Hub to manage the sessions.</p> <p>Once the app has finished the communication workflow with the Workspace ONE Intelligent Hub, the app can use the credentials.</p> <p>Important: To get credentials, devices must enroll using the Workspace ONE Intelligent Hub or Container. Otherwise, the properties are nil. For information on using Touch ID with the SDK, see the following Workspace ONE UEM Knowledge Base article: https://support.workspaceone.com/articles/115001676428.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Authentication/22-SSO/#implementation-in-xcode","title":"Implementation in Xcode","text":"<pre><code>AWEnrollmentAccount *account = [[AWController clientInstance] account];\nNSString *username = account.username;\nNSString *password = account.password;\nNSString *groupID = account.identifier;\n</code></pre>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Authentication/23-AD-Password-Changes/","title":"Active Directory Password Changes","text":"<p>If an Active Directory (AD) password changes and becomes out of sync with the object account of the SDK, use an API to update the SDK credentials.</p> <pre><code>- (void)updateUserCredentialsWithCompletion:(void(^)(BOOL success,NSError *error))completionHandler; \n</code></pre> <p>If the callback works, then find the new credentials in the SDK account object.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Authentication/23-AD-Password-Changes/#behavior","title":"Behavior","text":"<ul> <li>SSO disabled \u2013 The system displays an authentication prompt within the SDK app for the user to enter in the new credentials.</li> <li>SSO enabled \u2013 The SDK app flips to the Workspace ONE Intelligent Hub or Container application to update the credentials there. The Workspace ONE Intelligent Hub v5.1+ for iOS and the Container v2.1+ support this behavior.</li> </ul>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Authentication/24-Auth-Type/","title":"Authentication Type","text":"<p>Authentication Type controls how applications that use the SDK framework to use authenticate to resources. Configure it to work with the SDK default setting for Single Sign-On (SSO) or on its own.</p> <p>Select an authentication type that meets the security needs of your network. The passcode gives device users flexibility while user name and password offers compatibility with the Workspace ONE UEM system. If security is not an issue, then you do not have to require an authentication type.</p> Setting Description Passcode Designates a local passcode requirement for supported applications. Device users set their passcode on devices at the application level when they first access the application. User name and Password Requires users to authenticate to supported applications using their Workspace ONE UEM credentials. Set these credentials when you add users in the Accounts page of the Workspace ONE UEM console. Disabled Requires no authentication to access supported applications."},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Authentication/24-Auth-Type/#authentication-type-and-sso","title":"Authentication Type and SSO","text":"<p>Authentication Type and SSO can work together or alone.</p> <ul> <li>Alone \u2013 If you enable an Authentication Type (passcode or user name/password) without SSO, then users must enter a separate passcode or credentials for each individual application.</li> <li>Together \u2013 If you enable both Authentication Type and SSO, then users enter either their passcode or credentials (whichever you configure as the Authentication Type) once. They do not have to reenter them until the SSO session ends.</li> </ul>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Authentication/25-SSO-Session/","title":"SSO Session and the Workspace ONE Intelligent Hub","text":"<p>A single sign-on (SSO) session establishes when a user authenticates with an application participating in in SSO. The session is active until the it reaches the Authentication Timeout value or until the user manually locks the application. Control this behavior with the Workspace ONE Intelligent Hub and the SDK profile.</p> <p>When using the Workspace ONE Intelligent Hub as a \"broker application\" for features such as SSO, configure the Workspace ONE Intelligent Hub with the applicable SDK profile. If you are using the default SDK profile, ensure that the Workspace ONE Intelligent Hub is configured to use this profile. If you do not set the Workspace ONE Intelligent Hub to use the default SDK profile, then the system does not apply your configurations you configure in the Settings and Policies section.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Authentication/26-Challenge-Handler-and-Integrated-Auth/","title":"Challenge Handler and Integrated Authentication","text":"<p>On the Security Policies page, you can set Integrated Authentication to Enabled to allow the SSO credentials or a certificate to be passed on and used for authenticating into Web sites, such as content repositories (SharePoint) or wikis.</p> <p>The Workspace ONE SDK for iOS (Objective-C) does not support the use of SCEP for handling certificates. Do not select SCEP options for certificate authorities for SDK implementations.</p> <p>Once enabled, you must define a list of allowed sites, which are the only sites supported with Integrated Authentication.</p> <p>On the application side, use the challenge handler component in the AWController class of the Workspace ONE SDK. Inside the AWController, use certain methods to handle an incoming authentication challenge for connections made with NSURLConnection and NSURLSession. Find the available methods in the list.</p> Method Description * Objective-C-(BOOL)canHandleProtectionSpace:(NSURLProtectionSpace)protectionSpace withError:(NSError)error Swiftfunc canHandle(_ protectionSpace: URLProtectionSpace, withError error: Error?) -&gt; Bool Checks that the Workspace ONE SDK for iOS (Objective-C) has the means to handle this type of authentication challenge. The SDK makes several checks to determine that it can handle challenges.1. Is the Web site challenging for authentication on the list of allowed sites in the SDK profile?2. Is the challenge one of the supported types:   * Basic   * NTLM   * Client certificate3. Does the SDK have a set of credentials to respond with:   * Certificate   * User name and passwordIf all three of the criteria are met, then this method returns YES.The SDK does not handle server trust, so your application must handle <code>NSURLAuthenticationMethodServerTrust</code>. * Objective-C-(BOOL)handleChallenge:(NSURLAuthenticationChallenge)challenge Swiftfunc handle(_ challenge:URLAuthenticationChallenge) -&gt; Bool Responds to the actual authentication challenge from a network call made using NSURLConnection.It returns YES or NO depending on if it can respond to the authentication challenge.The system calls the canHandleProtectionSpace method in AWController first to validate that the system can process the challenge. * Objective-C-(BOOL)handleChallengeForURLSessionChallenge:(NSURLAuthenticationChallenge )challenge completionHandler:(void (^)(NSURLSessionAuthChallengeDisposition disposition, NSURLCredential credential))completionHandler;* Swiftfunc handleChallenge(forURLSessionChallenge challenge:URLAuthenticationChallenge, completionHandler: @escaping (_ disposition: URLSession.AuthChallengeDisposition, _ credential: URLCredential) -&gt; Void) -&gt; Bool Responds to the actual authentication challenge from a network call made using NSURLSession.This method is the same as the handleChallenge method, except the system uses this method with calls made with NSURLSession. This call involves using a completion block to handle authentication challenges. * Objective-C-(void)fetchNewCertificatesWithError:(NSError**)errorSwiftfunc fetchNewCertificatesWithError(_ error: Error?) Forces the SDK to fetch a new certificate.The SDK automatically handles retrieving certificates initially during setup, after you call start in AWController. However, in the event you must force the SDK to fetch a new certificate, use this method.Ensure that a certificate is properly configured in the authentication and credentials payload of the SDK profile.This method resolves issues with revoked and corrupt certificates. <p>Integrated authentication requires several configurations to work.</p> <ul> <li>The URL of the requested Web site must match an entry in your list of Allowed Sites.</li> <li> <p>The system must make the network call so that the process provides an NSURLAuthenticationChallenge object.</p> </li> <li> <p>The Web site must return a 401 status code requesting authentication with one of the listed authentication methods.</p> </li> <li>NSURLAuthenticationMethodBasic</li> <li>NSURLAuthenticationMethodNTLM</li> <li>NSURLAuthenticationMethodClientCertificate</li> <li>The challenge handler can only use the enrollment credentials of the user when attempting to authenticate with a Web site. If a Web site requires a domain to log in, for example ACME\\jdoe, and users enrolled with a basic user name, like jdoe, then the authentication fails.</li> <li>For applications using WebView, use the SDK's handleChallege method in the URLSession's challenge handler. Display the response on a UIWebView or a WKWebView. Do not use the SDK's handleChallenge method directly inside WKWebView's challenge handler.</li> </ul>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Authentication/26-Challenge-Handler-and-Integrated-Auth/#content-repository-behavior","title":"Content Repository Behavior","text":"<p>Content repositories use the saved enrollment credentials (which are encrypted and shared with all SSO apps). If the content repository requires a different password, the connecting app prompts the user for the password at the time of accessing the repository.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Authentication/26-Challenge-Handler-and-Integrated-Auth/#sample-code","title":"Sample Code","text":"<p>This example illustrates how to handle a challenge from a network call made through NSURLConnection.</p> <p>Note: This example is generic, so expand upon it in your application to handle errors and fallback scenarios.</p> <pre><code>- (void)connection:(NSURLConnection *)connection \nwillSendRequestForAuthenticationChallenge:\n(NSURLAuthenticationChallenge *)challenge{\n    NSError*error;\n\n    if([[AWController clientInstance] \n    canHandleProtectionSpace:challenge.protectionSpace \n    withError:&amp;amp;error]){\n\n        if([[AWController clientInstance] \n        handleChallenge:challenge]){\n\n            NSLog(@\"Challenge handled successfully\");\n\n        }else{\n\n            NSLog(@\"Challenge could not be handled\");\n        }\n\n    }else{\n        //SDK does not have the means to handle this \n        authentication. Add your own fallback and SSL logic \n        here.\n\n    }\n} \n</code></pre>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Branding/40-Branding/","title":"Branding","text":"<p>Branding can change the look of the application with minimal development, and it can delegate several user interface properties to the configuration settings in the SDK profiles.</p> <p>Some branding features are branding blocker screens and authentication screens. See the AWProfile class to access all the branding functionality.</p> <ul> <li>Dimensions for Images on App Splash Screens</li> </ul> <p>It is difficult to find a single image that displays perfectly on every mobile device. However, certain dimensions for images displayed on iOS and Android devices can work for most displays. Use these specifications for application splash screens.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Branding/41-Dimensions-for-Images/","title":"Dimensions for Images on App Splash Screens","text":"<p>It is difficult to find a single image that displays perfectly on every mobile device. However, certain dimensions for images displayed on iOS and Android devices can work for most displays. Use these specifications for application splash screens.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Branding/41-Dimensions-for-Images/#mobile-ios-splash-screens","title":"Mobile - iOS Splash Screens","text":"<p> * Icon, centered - 160 x 160 pixels * Branded text distance from icon \u2013 centered at a distance of 24 pixels * Branded text \u2013 27 point * Margins - 72 pixels</p> <p>Tablet, Portrait - iOS Splash Screens * Icon - 160 x 160 pixels * Branded text distance from icon \u2013 centered at a distance of 24 pixels * Branded text \u2013 27 point * Margins - 264 pixels</p> <p>Tablet, Landscape - iOS Splash Screens * Icon - 160 x 160 pixels * Branded text distance from icon \u2013 centered at a distance of 24 pixels * Branded text \u2013 27 point * Margins - 292 pixels</p> <p>Mobile - Android Splash Screens * Icon - 160 x 160 pixels * Branded text distance from icon \u2013 centered at a distance of 24 pixels * Branded text \u2013 27 point * Margins - 56 pixels</p> <p>Tablet, Portrait - Android Splash Screens * Icon - 160 x 160 pixels * Branded text distance from icon \u2013 centered at a distance of 24 pixels * Branded text \u2013 27 point * Margins - 260 pixels</p> <p>Tablet, Landscape - Android Splash Screens * Icon - 160 x 160 pixels * Branded text distance from icon \u2013 centered at a distance of 24 pixels * Branded text \u2013 27 point * Margins - 388 pixels</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Logging/42-Logging/","title":"Logging","text":"<p>The Logging module of the VMware Workspace ONE SDK allows developers to instrument their applications to discover bugs or any issues when the application is deployed to users.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Logging/42-Logging/#code-the-level","title":"Code the Level","text":"<p>You must code the logging level and you must set this option in the Workspace ONE UEM console. This configuration ensures that your network is not burdened with unwanted logging activity.</p> <ul> <li>SDK Log Types</li> </ul> <p>Workspace ONE UEM displays logs for applications that report application failures and that report application-specific data. These logs integrate with the VMware Workspace ONE SDK so that you can manage applications built by it. * VMware Workspace ONE SDK Log Levels</p> <p>Workspace ONE UEM groups logging messages into categories to distinguish critical issues from normal activities. * Request Application Logs for SDK-Built Apps</p> <p>Request applications logs for your SDK-built applications from the device record in the console. * Access Logs and Events for SDK-Built Applications</p> <p>Access events and logs that the Workspace ONE SDK sends to the console for troubleshooting and management of SDK-built and wrapped apps.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Logging/43-SDK-Log-Types/","title":"SDK Log Types","text":"<p>Workspace ONE UEM displays logs for applications that report application failures and that report application-specific data. These logs integrate with the VMware Workspace ONE SDK so that you can manage applications built by it.</p> <p>Find logs for applications in Apps &amp; Books &gt; Analytics &gt; App Logs.</p> Setting Description Application Logs This type of log captures information about an application. You set the log level in the default SDK profiles section, Groups &amp; Settings &gt; All Settings &gt; Apps &gt; Settings and Policies &gt; Settings &gt; Logging. You must add code into the application to upload these logs to the Workspace ONE UEM console. Crash Logs This type of log captures data from an application the next time the application runs after it crashes. These logs are automatically collected and uploaded to the Workspace ONE UEM console without the need for extra code in the SDK application."},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Logging/44-SDK-Log-Levels/","title":"VMware Workspace ONE SDK Log Levels","text":"<p>Workspace ONE UEM groups logging messages into categories to distinguish critical issues from normal activities.</p> <p>The Workspace ONE UEM console reports the messages that match the configured logging level plus any logs with a higher critical status. For example, if you set the logging level to Warning, messages with a Warning and Error level display in the Workspace ONE UEM console.</p> Level Logging Syntax Description Error AWLogError(\"{log message}\") Records only errors. An error displays failures in processes such as a failure to look up UIDs or an unsupported URL. Warning AWLogWarning(\"{log message}\") Records errors and warnings. A warning displays a possible issue with processes such as bad response codes and invalid token authentications. Information AWLogInfo(\"{log message}\") Records a significant amount of data for informational purposes. An information logging level displays general processes, warning, and error messages. Debug or Verbose AWLogVerbose(\"{log message}\") Records all data to help with troubleshooting. This option is not available for all functions."},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Logging/45-Request-App-Logs/","title":"Request Application Logs for SDK-Built Apps","text":"<p>Request applications logs for your SDK-built applications from the device record in the console.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Logging/45-Request-App-Logs/#procedure","title":"Procedure","text":"<ol> <li>Navigate to Devices &gt; List View and select the device.</li> <li>Select the Apps tab, select the SDK-built app, and choose Request Logs.     The Request Logs button displays after you select the application.</li> <li>Complete the settings in the Request Logs window. You can retrieve logs that are currently available or you can select to capture a log type for a duration of time.</li> <li>To retrieve the logs, navigate to Apps &amp; Books &gt; Applications &gt; Logging &gt; App Logs.</li> <li>Find the log for the application with the App Name column and download the file.</li> </ol>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Logging/46-Access-Logs-and-Events.md/","title":"Access Logs and Events for SDK-Built Applications","text":"<p>Access events and logs that the Workspace ONE SDK sends to the console for troubleshooting and management of SDK-built and wrapped apps.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Logging/46-Access-Logs-and-Events.md/#prerequisites","title":"Prerequisites","text":"<p>To view SDK analytics, have the application ID of the application. The application ID often begins with <code>com.</code> and includes the name of the application. Get the application ID from the application record in Apps &amp; Books in the Workspace ONE UEM console.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Logging/46-Access-Logs-and-Events.md/#procedure","title":"Procedure","text":"<ol> <li>Access SDK and wrapped app events in SDK Analytics.</li> <li>Access SDK and Wrapped App Events Navigate to Apps &amp; Books &gt; Applications &gt; Logging &gt; SDK Analytics.</li> <li>View events by application ID and sample time.</li> <li>Access SDK and wrapped app logs in App Logs.</li> <li>Navigate to Apps &amp; Books &gt; Applications &gt; Logging &gt; App Logs.</li> <li>Find log files by App Name and download or delete the files from the actions menu.</li> </ol>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Restrictions%2C%20DLP/34-Restrictions-DLP/","title":"Restrictions, DLP","text":"<p>In this section of the SDK profile, you can identify what type of restriction rules you implement in your application.</p> <ul> <li>Initialize the AWRestrictions Class</li> </ul> <p>To monitor the MDM enrollment and allow offline mode restrictions, the application must initialize the AWRestrictions class. * Check Device Enrollment</p> <p>Use the SDK to retrieve the enrollment status of the device. The snippet of code shows how to perform that check. * Use DLP to Control the Copy and Paste of Data Out and Into Your SDK-Built Application</p> <p>Control the copy and paste interaction between your SDK-built applications and non-SDK-built applications. Use the two settings Enable Copy and Paste Out and Enable Copy and Paste Into. * Use DLP to Control Links to Open in Workspace ONE Web and Workspace ONE Boxer</p> <p>Configure applications built with the Workspace ONE SDK to open in the Workspace ONE Web and to compose emails in Workspace ONE Boxer. This feature enables end users to use alternative systems other than Safari and the Mail app. To develop this feature, create a bundle in your iOS application and configure Workspace ONE UEM to enforce the behaviors in the bundle. * Disable the Default Blocker Screen</p> <p>The Workspace ONE SDK displays a blocker screen to cover the application\u2019s content when the application is not active. When the app is in the foreground, the Workspace ONE SDK dismisses the blocker screen. * Restrict Document-Sharing with Data Loss Prevention</p> <p>You can manage document-sharing in your Workspace ONE SDK for iOS (Objective-C)-built app using the SDK and configuring the SDK default settings in the Workspace ONE UEM console.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Restrictions%2C%20DLP/35-Init-AWRestrictions/","title":"Initialize the AWRestrictions Class","text":"<p>To monitor the MDM enrollment and allow offline mode restrictions, the application must initialize the AWRestrictions class.</p> <p>The example code starts the monitoring of the defined SDK restrictions. The system can initialize it multiple times with no adverse effect.</p> <pre><code>      NSError *error = nil;\n      [AWRestrictions startService:&amp;error];\n\n      if (error)\n      {\n      NSLog(@\"AWRestrictions startService error: %@\", error);\n      }\n</code></pre>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Restrictions%2C%20DLP/36-Check-Device-Enrolment/","title":"Check Device Enrollment","text":"<p>Use the SDK to retrieve the enrollment status of the device. The snippet of code shows how to perform that check.</p> <pre><code>      AWDeviceStatusConfiguration *configuration = [[AWDeviceStatusConfiguration alloc] initWithHostName:nilendpointPath:nil deviceStatusAction:nil];\n\n      // Create the device status controller.\n      AWDeviceStatusController *statusController = [[AWDeviceStatusController alloc] initWithConfiguration:configuration];\n\n      // Query AirWatch to determine if the device is enrolled.\n      [statusController queryDeviceEnrollmentStatus:^(BOOL enrolled, NSError *error) \n      {\n      // Log the result of the enrollment check.\n      NSLog(@\"This device %@ enrolled.\", (enrolled == YES) ? @\"is\" : @\"is not\");\n      // Clean up.\n      [configuration release];\n      [statusController release];\n      }];\n</code></pre>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Restrictions%2C%20DLP/37-DLP-Copy-Paste/","title":"Use DLP to Control the Copy and Paste of Data Out and Into Your SDK-Built Application","text":"<p>Control the copy and paste interaction between your SDK-built applications and non-SDK-built applications. Use the two settings Enable Copy and Paste Out and Enable Copy and Paste Into.</p> <p>When you set Enable Copy and Paste Out to No, you can only paste copied data from your SDK-built application out to other SDK-built applications.</p> <p>When you set Enable Copy and Paste Into to No, you can only paste copied data from other SDK-built applications into your SDK-built application.</p> <p>There are specific limitations with certain UI classes. * UIWebView and WKWebView   * The SDK evaluates javascript in UIWebView and WKWebView to get the HTML of selected content. If using WKWebView, javascript must be enabled. Javascript is always enabled in UIWebView.</p> <ul> <li>You cannot copy Images in DOC and PDF files loaded in UIWebView or WKWebView due to a technical limitation.</li> <li>Out of Process Classes - The SDK does not support copy-out and copy-in restrictions in views that are out of process. For example, the feature does not work in the listed views, and this list is not exhaustive.</li> <li>SFSafariViewController</li> <li>UIDocumentInteractionViewController</li> <li>QLPreviewController</li> <li>Other Limitations</li> <li>Two sets of SDK-built applications that have different SSO settings (for example, one is set with SSO on and another with SSO off) cannot share the pasteboard.</li> <li>You cannot copy from an application which has no restriction (Enable Copy and Paste Out set to Yes) and paste that content into a restricted application (Enable Copy and Paste Into set to No).</li> <li>You cannot share a pasteboard between two or more sets of applications that are in different keychain groups.</li> </ul> <p>For example, VMware productivity applications and custom SDK-built applications cannot share the clipboard. However, multiple custom SDK-built applications from the same developer that are in the same keychain group can share the clipboard.</p> <p>To add this functionality, create a bundle and PLIST file, locally, and set the keys and values.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Restrictions%2C%20DLP/37-DLP-Copy-Paste/#procedure","title":"Procedure","text":"<ol> <li>Create a bundle named AWSDKDefaults.</li> <li>Create a PLIST named AWSDKDefaultSettings.plist and put it in the AWSDKDefaults bundle.</li> <li>In the PLIST, create a Boolean named AWClipboardEnabled and set it to YES.</li> </ol>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Restrictions%2C%20DLP/37-DLP-Copy-Paste/#results","title":"Results","text":"<p>After you add the local flag, and your admin sets the default or custom SDK policies for these features in the console, the SDK enforces the restriction. It enforces it across your application\u2019s user interfaces that use cut, copy, and paste in the listed classes and subclasses. * UITextField * UITextView * UIWebView * WKWebView</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Restrictions%2C%20DLP/38-DLP-Control-Links/","title":"Use DLP to Control Links to Open in Workspace ONE Web and Workspace ONE Boxer","text":"<p>Configure applications built with the Workspace ONE SDK to open in the Workspace ONE Web and to compose emails in Workspace ONE Boxer. This feature enables end users to use alternative systems other than Safari and the Mail app. To develop this feature, create a bundle in your iOS application and configure Workspace ONE UEM to enforce the behaviors in the bundle.</p> <p>Configure both systems, the browser and email systems, for this feature to work. Perform the procedures in the listed order.</p> <ol> <li>Initial Set Up of the Bundle and PLIST.</li> </ol> <p>For more information, see Initial Set Up of the Bundle and PLIST.</p> <ol> <li>Enable Links for Workspace ONE Web.</li> </ol> <p>For more information, see Enable Links for Workspace ONE Web.</p> <ol> <li>Enable Links for Workspace ONE Boxer.</li> </ol> <p>For more information, see Enable Links for Workspace ONE Boxer.</p> <ol> <li>Contain Data to Workspace ONE Web.</li> </ol> <p>For more information, see Contain Data to Workspace ONE Web.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Restrictions%2C%20DLP/38-DLP-Control-Links/#limitation-with-mfmailcomposeviewcontroller","title":"Limitation With MFMailComposeViewController","text":"<p>If you use the <code>MFMailComposeViewController</code> scheme in your MessageUI framework, this functionality is not supported. The system cannot specify how end users access your application when it is an attachment in an email. End-users access the application with the Mail app and not Inbox.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Restrictions%2C%20DLP/38-DLP-Control-Links/#supportinformationcontroller","title":"SupportInformationController","text":"<p>The SupportInformationController class allows you to query for the email address and telephone numbers for contacting enrollment support which you can display on the application UI.</p> <ul> <li>Initial Set Up of the Bundle and PLIST</li> </ul> <p>Perform these steps before you enable any links. Use this bundle and PLIST for both HTTP/HTTPS links and MAILTO links. * Enable Links for Workspace ONE Web</p> <p>To enable the application to open HTTP / HTTPS links in the Workspace ONE Web, enable a few dictionary and PLIST flags. * Enable Links for Workspace ONE Boxer</p> <p>To enable the application to open MAILTO links in Workspace ONE Boxer, enable a few dictionary and PLIST flags. * Contain Data to Workspace ONE Web</p> <p>Use the data loss prevention, DLP, settings in the Workspace ONE UEM default SDK profile to enforce the application to use Workspace ONE Web andWorkspace ONE Boxer.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Restrictions%2C%20DLP/39-Disable-Default-Blocker-Screen/","title":"Disable the Default Blocker Screen","text":"<p>The Workspace ONE SDK displays a blocker screen to cover the application\u2019s content when the application is not active. When the app is in the foreground, the Workspace ONE SDK dismisses the blocker screen.</p> <p>You can disable this sceen and use your own custom backgroud blocker screen or use the Workspace ONE SDK screen.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Restrictions%2C%20DLP/39-Disable-Default-Blocker-Screen/#procedure","title":"Procedure","text":"<ol> <li>Work in the AWSDKDefaults bundle.</li> <li>Create a dictionary named AWBlockerViewEnableKey and put it in the AWSDKDefaultSettings.plist.</li> <li>Configure the AWBlockerViewEnableKey dictionary, create a new Boolean entry with the key name as enabled and set the Boolean value to No.</li> <li>If you set AWBlockerViewEnableKey to Nothen the Workspace ONE SDK disables the blocker screen so that you can use your own blocker screen.</li> <li> <p>If you set AWBlockerViewEnableKey to Yes then the Workspace ONE SDK uses its blocker screen.</p> <p>If AWBlockerViewEnableKey is empty, the Workspace ONE SDK displays its blocker screen.</p> </li> </ol>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Restrictions%2C%20DLP/40-Restrict-Doc-Sharing-DLP/","title":"Restrict Document-Sharing with Data Loss Prevention","text":"<p>You can manage document-sharing in your Workspace ONE SDK for iOS (Objective-C)-built app using the SDK and configuring the SDK default settings in the Workspace ONE UEM console.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Restrictions%2C%20DLP/40-Restrict-Doc-Sharing-DLP/#workspace-one-uem-console-configurations","title":"Workspace ONE UEM Console Configurations","text":"<p>Have the Workspace ONE UEM admin configure the default SDK profile to share documents with specified apps and assign the profile to your SDK-built app in the console. Here is an outline of what settings the admin sets. 1. In the Workspace ONE UEM console, navigate to Groups &amp; Settings &gt; All Settings &gt; Settings and Policies &gt; Security Policies &gt; Data Loss Prevention. 2. Select Enabled. 3. Select Yes for Limit Documents to Open Only in Approved Apps. 4. In the Allowed Applications List text box, enter the apps you want to restrict sharing to. Think of these apps as trusted apps.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Restrictions%2C%20DLP/40-Restrict-Doc-Sharing-DLP/#developer-additions","title":"Developer Additions","text":"<p>Along with console configuraitons, app developers must set additional Boolean key-value pairs in the AWSDKDefaultSettings.plist of the SDK-built app.</p> <p></p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Restrictions%2C%20DLP/40-Restrict-Doc-Sharing-DLP/#enablesecuredocumentcontroller","title":"EnableSecureDocumentController","text":"<ul> <li>Set this Boolean value in the AWSDKDefaultSettings.plist.</li> <li>Use this value to restrict document-sharing with the Apple class UIDocumentInteractionController.</li> <li>Boolean Value Explanations</li> <li>Set the value to YES - Files opened with UIDocumentInteractionController are restricted to open in apps trusted by the Workspace ONE UEM console. Also, documents that are shared by flipping to another app (opened in another app) are restricted to open in apps trusted by the Workspace ONE UEM console. In the SDK-built app, iOS titles this interaction as Copy to &gt;  in the Open menu. <li>Set the value to NO - The SDK does not restrict the opening of shared documents with UIDocumentInteractionController to the trusted apps set in the default SDK profile.</li> <li>App Extensions Are Restricted</li> <li>App extensions cannot open shared documents when you use EnableSecureDocumentController and UIDocumentInteractionController. Users see a placeholder document rather than the shared document.</li> <li>If your SDK-built must use app extensions, do not configure the Workspace ONE UEM console or do not use EnableSecureDocumentController. You can also set EnableSecureDocumentController to NO and use app extensions.</li>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Restrictions%2C%20DLP/40-Restrict-Doc-Sharing-DLP/#disableactivityviewcontroller","title":"DisableActivityViewController","text":"<ul> <li>Set this Boolean value in the AWSDKDefaultSettings.plist.</li> <li>Use this value to prevent the use of UIActivityViewController for SDK-built apps that do not use UIDocumentInteractionController.</li> <li>Boolean Value Explanations</li> <li>Set the value to YES - The SDK prevents all item-sharing using UIActivityViewController.</li> <li>Set the value to NO - The SDK does not prevent all item-sharing using UIActivityViewController.</li> </ul>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/MAM%20Functionality%20with%20VMware%20Workspace%20ONE%20SDK/Restrictions%2C%20DLP/40-Restrict-Doc-Sharing-DLP/#do-not-set-both-values-to-yes","title":"Do Not Set Both Values to YES","text":"<p>Set one of the values (DisableActivityViewController or EnableSecureDocumentController) to YES. Do not set them both to YES. Setting both values to YES can cause undefined behavior in your SDK-built app.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/Test%20Apps%20With%20the%20VMware%20Workspace%20ONE%20SDK%20for%20iOS%20%28Objective-C%29/16-Test-Apps/","title":"Test Apps with the Workspace ONE SDK for iOS (Objective-C)","text":"<p>The Workspace ONE SDK for iOS (Objective-C) allows you to configure apps dynamically using default settings and application profiles that you can define in the Workspace ONE UEM console and associate to your applications.</p> <ul> <li>Default Settings for SDK Profiles \u2013 Provides settings that you can potentially use across multiple Workspace ONE UEM applications, for example branding schemes, or the type of authentication you want to use on all your applications.</li> <li>Application Profiles \u2013 Configures an individual application. For example, when you deploy a certificate for use by a particular application.</li> </ul> <p>You can design your application to use as many or as few predefined settings in profiles, to create a flexible application based on your goals.</p> <p>Test the over-the-air configuration of your app using application and SDK profiles outlined in the following sections.</p> <ul> <li>Test the SDK-Built App   Test the integration of your application with the Workspace ONE SDK for iOS (Swift), including the delivery of profiles from the Workspace ONE UEM console to your application.</li> <li>Deliver Profiles to SDK Applications   The Workspace ONE SDK for iOS (Objective-C) allows developers to configure their applications dynamically using SDK and application profiles.</li> </ul>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/Test%20Apps%20With%20the%20VMware%20Workspace%20ONE%20SDK%20for%20iOS%20%28Objective-C%29/17-Test-SDK-Built-App/","title":"Test the SDK-Built App","text":"<p>Test the SDK-Built App Test the integration of your application with the Workspace ONE SDK for iOS (Swift), including the delivery of profiles from the Workspace ONE UEM console to your application.</p> <p>Initialize the SDK in your application to set communication with the Workspace ONE UEM server and to test the application.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/Test%20Apps%20With%20the%20VMware%20Workspace%20ONE%20SDK%20for%20iOS%20%28Objective-C%29/17-Test-SDK-Built-App/#procedure","title":"Procedure","text":"<ol> <li>Enroll your test devices to the Workspace ONE UEM console to enable communication between them.   The SDK does not currently support testing in a simulator.</li> <li>Upload the SDK-built app or a placeholder application that has the same bundle ID as the testing application.<ol> <li>Create an empty application with the bundle ID of the testing-application to identify the application.</li> <li>Upload the empty application to the console and assign a default or custom SDK profile to it.</li> </ol> </li> <li>Assign an SDK profile to the application. If you do not assign a profile, the SDK does not initialize correctly.This step enables the console to send commands to the application with the record.</li> <li>Push the application to test devices. Save the application and assign it using the flexible deployment feature. Use devices for testing that are Workspace ONE UEM managed devices. You do not have to repush the application every time you make a change.</li> </ol> <p>Flexible deployment rules push the application to test devices with the app catalog. 5. Run your application in Xcode.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/Test%20Apps%20With%20the%20VMware%20Workspace%20ONE%20SDK%20for%20iOS%20%28Objective-C%29/17-Test-SDK-Built-App/#results","title":"Results","text":"<p>The console pushes the initialization data to the application when the application installs on test devices.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/Test%20Apps%20With%20the%20VMware%20Workspace%20ONE%20SDK%20for%20iOS%20%28Objective-C%29/17-Test-SDK-Built-App/#what-to-do-next","title":"What to do next","text":"<p>After the application initializes, you can run the application as many times as you want to debug it.</p>"},{"location":"ws1-uem-sdk-for-ios/Objective-C/Test%20Apps%20With%20the%20VMware%20Workspace%20ONE%20SDK%20for%20iOS%20%28Objective-C%29/18-Deliver-Profiles/","title":"Deliver Profiles to SDK Applications","text":"<p>The Workspace ONE SDK for iOS (Objective-C) allows developers to configure their applications dynamically using SDK and application profiles.</p> <ul> <li>SDK Profiles provide common settings for multiple applications. For example branding schemes, or the type of authentication you want to use on all your applications.</li> <li>Application Profiles deploy certificates for your SDK applications.</li> </ul> <p>The Workspace ONE SDK for iOS (Objective-C) allows your application to integrate with the Workspace ONE UEM console to retrieve the most current settings that apply to the application. You can update settings periodically when required without a single change to the source code of the application.</p> <p>Every time you save an application profile or an SDK profile, a new command to install the profiles goes to the Command Queue. The install command works on all applications and devices that are associated with the saved profiles. From the testing perspective, change what you want to test in the profile.</p> <p>This change generates a new command that you can retrieve from the test code. The SDK looks for new commands when you background and foreground the application. You can also manually load commands with the AWCommandManager method.</p>"}]}